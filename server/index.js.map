{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/compiler/shims/react.ts", "../node_modules/remark-linkify-regex/node_modules/unist-util-is/index.js", "../node_modules/remark-linkify-regex/node_modules/unist-util-visit-parents/index.js", "../node_modules/unist-util-flatmap/index.js", "../node_modules/remark-linkify-regex/index.js", "../mocks/start.ts", "../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/root.tsx", "../app/env.server.ts", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/delete-account.tsx", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/u/$userId.tsx", "../app/components/Layouts/index.tsx", "../app/components/Sidebar/index.tsx", "../app/components/ListDetail/TitleBar.tsx", "../app/components/Providers/index.tsx", "../config/seo.ts", "../app/components/Sidebar/Navigation.tsx", "../app/utils.ts", "../app/components/Icon/index.tsx", "../app/components/Sidebar/NavigationLink.tsx", "../app/components/Forms/LogoutForm.tsx", "../app/components/Sidebar/SignOutAction.tsx", "../app/components/Sidebar/Overlay.tsx", "../app/components/Sidebar/UserFooter.tsx", "../app/components/Button/index.tsx", "../app/components/LoadingSpinner/index.tsx", "../app/components/UserProfile/UserDetail.tsx", "../app/components/ListDetail/Detail.tsx", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/new-post.tsx", "../app/components/Writing/Editor/PostEditor.tsx", "../app/components/Forms/AddPostForm.tsx", "../app/components/Writing/Editor/PostEditorActions.tsx", "../app/components/Writing/Editor/PostEditorComposer.tsx", "../app/components/Dropzone/index.tsx", "../app/components/Dropzone/ActiveDropzone.tsx", "../app/components/Input/index.tsx", "../app/components/Writing/Editor/PostEditorMetaSidebar.tsx", "../app/components/SegmentedController/index.tsx", "../app/components/Writing/PostsList.tsx", "../app/components/ListDetail/ListContainer.tsx", "../app/components/Writing/PostListItem.tsx", "../lib/transformers/index.tsx", "../app/components/ListDetail/ListItem.tsx", "../app/components/Writing/WritingTitlebar.tsx", "../app/components/Dialog/index.tsx", "../app/components/Writing/SubscriptionForm.tsx", "../app/components/Alert/index.tsx", "../lib/validators/index.ts", "../app/components/Writing/Editor/PostEditorPreview.tsx", "../app/components/MarkdownRenderer/index.tsx", "../node_modules/react-markdown/index.js", "../node_modules/react-markdown/lib/uri-transformer.js", "../node_modules/react-markdown/lib/react-markdown.js", "../node_modules/vfile/index.js", "../node_modules/vfile/lib/index.js", "../node_modules/vfile-message/index.js", "../node_modules/unist-util-stringify-position/index.js", "../node_modules/vfile/lib/minpath.js", "../node_modules/vfile/lib/minproc.js", "../node_modules/vfile/lib/minurl.js", "../node_modules/vfile/lib/minurl.shared.js", "../node_modules/unified/index.js", "../node_modules/unified/lib/index.js", "../node_modules/bail/index.js", "../node_modules/trough/index.js", "../node_modules/remark-parse/index.js", "../node_modules/remark-parse/lib/index.js", "../node_modules/mdast-util-from-markdown/index.js", "../node_modules/mdast-util-from-markdown/lib/index.js", "../node_modules/mdast-util-to-string/index.js", "../node_modules/micromark/lib/parse.js", "../node_modules/micromark-util-combine-extensions/index.js", "../node_modules/micromark-util-chunked/index.js", "../node_modules/micromark/lib/initialize/content.js", "../node_modules/micromark-factory-space/index.js", "../node_modules/micromark-util-character/index.js", "../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../node_modules/micromark/lib/initialize/document.js", "../node_modules/micromark/lib/initialize/flow.js", "../node_modules/micromark-core-commonmark/index.js", "../node_modules/micromark-core-commonmark/lib/attention.js", "../node_modules/micromark-util-classify-character/index.js", "../node_modules/micromark-util-resolve-all/index.js", "../node_modules/micromark-core-commonmark/lib/autolink.js", "../node_modules/micromark-core-commonmark/lib/blank-line.js", "../node_modules/micromark-core-commonmark/lib/block-quote.js", "../node_modules/micromark-core-commonmark/lib/character-escape.js", "../node_modules/micromark-core-commonmark/lib/character-reference.js", "../node_modules/decode-named-character-reference/index.js", "../node_modules/character-entities/index.js", "../node_modules/micromark-core-commonmark/lib/code-fenced.js", "../node_modules/micromark-core-commonmark/lib/code-indented.js", "../node_modules/micromark-core-commonmark/lib/code-text.js", "../node_modules/micromark-core-commonmark/lib/content.js", "../node_modules/micromark-util-subtokenize/index.js", "../node_modules/micromark-core-commonmark/lib/definition.js", "../node_modules/micromark-factory-destination/index.js", "../node_modules/micromark-factory-label/index.js", "../node_modules/micromark-factory-title/index.js", "../node_modules/micromark-factory-whitespace/index.js", "../node_modules/micromark-util-normalize-identifier/index.js", "../node_modules/micromark-core-commonmark/lib/hard-break-escape.js", "../node_modules/micromark-core-commonmark/lib/heading-atx.js", "../node_modules/micromark-core-commonmark/lib/html-flow.js", "../node_modules/micromark-util-html-tag-name/index.js", "../node_modules/micromark-core-commonmark/lib/html-text.js", "../node_modules/micromark-core-commonmark/lib/label-end.js", "../node_modules/micromark-core-commonmark/lib/label-start-image.js", "../node_modules/micromark-core-commonmark/lib/label-start-link.js", "../node_modules/micromark-core-commonmark/lib/line-ending.js", "../node_modules/micromark-core-commonmark/lib/list.js", "../node_modules/micromark-core-commonmark/lib/thematic-break.js", "../node_modules/micromark-core-commonmark/lib/setext-underline.js", "../node_modules/micromark/lib/initialize/text.js", "../node_modules/micromark/lib/create-tokenizer.js", "../node_modules/micromark/lib/constructs.js", "../node_modules/micromark/lib/preprocess.js", "../node_modules/micromark/lib/postprocess.js", "../node_modules/micromark-util-decode-numeric-character-reference/index.js", "../node_modules/micromark-util-decode-string/index.js", "../node_modules/remark-rehype/index.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/index.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/traverse.js", "../node_modules/unist-builder/index.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/index.js", "../node_modules/unist-util-visit/index.js", "../node_modules/unist-util-visit-parents/index.js", "../node_modules/unist-util-is/index.js", "../node_modules/unist-util-visit-parents/color.js", "../node_modules/unist-util-position/index.js", "../node_modules/unist-util-generated/index.js", "../node_modules/mdast-util-definitions/index.js", "../node_modules/mdast-util-definitions/node_modules/unist-util-visit/index.js", "../node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/index.js", "../node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/color.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/footer.js", "../node_modules/micromark-util-sanitize-uri/index.js", "../node_modules/micromark-util-encode/index.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/wrap.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/index.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/break.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/code.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/delete.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/heading.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/html.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/revert.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list-item.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/root.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/strong.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/text.js", "../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js", "../node_modules/remark-rehype/lib/index.js", "../node_modules/property-information/index.js", "../node_modules/property-information/lib/util/merge.js", "../node_modules/property-information/lib/util/schema.js", "../node_modules/property-information/lib/xlink.js", "../node_modules/property-information/lib/util/create.js", "../node_modules/property-information/lib/normalize.js", "../node_modules/property-information/lib/util/defined-info.js", "../node_modules/property-information/lib/util/info.js", "../node_modules/property-information/lib/util/types.js", "../node_modules/property-information/lib/xml.js", "../node_modules/property-information/lib/xmlns.js", "../node_modules/property-information/lib/util/case-insensitive-transform.js", "../node_modules/property-information/lib/util/case-sensitive-transform.js", "../node_modules/property-information/lib/aria.js", "../node_modules/property-information/lib/html.js", "../node_modules/property-information/lib/svg.js", "../node_modules/property-information/lib/find.js", "../node_modules/property-information/lib/hast-to-react.js", "../node_modules/react-markdown/lib/rehype-filter.js", "../node_modules/react-markdown/lib/ast-to-react.js", "../node_modules/hast-util-whitespace/index.js", "../node_modules/space-separated-tokens/index.js", "../node_modules/comma-separated-tokens/index.js", "../node_modules/rehype-autolink-headings/index.js", "../node_modules/rehype-autolink-headings/lib/index.js", "../node_modules/hast-util-has-property/index.js", "../node_modules/hast-util-heading-rank/index.js", "../node_modules/hast-util-is-element/index.js", "../node_modules/rehype-sanitize/index.js", "../node_modules/hast-util-sanitize/index.js", "../node_modules/hast-util-sanitize/lib/index.js", "../node_modules/hast-util-sanitize/lib/schema.js", "../node_modules/rehype-slug/index.js", "../node_modules/hast-util-to-string/index.js", "../node_modules/remark-gfm/index.js", "../node_modules/micromark-extension-gfm/index.js", "../node_modules/micromark-extension-gfm-autolink-literal/index.js", "../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js", "../node_modules/micromark-extension-gfm-footnote/index.js", "../node_modules/micromark-extension-gfm-footnote/lib/syntax.js", "../node_modules/micromark-extension-gfm-strikethrough/index.js", "../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js", "../node_modules/micromark-extension-gfm-table/index.js", "../node_modules/micromark-extension-gfm-table/lib/syntax.js", "../node_modules/micromark-extension-gfm-task-list-item/index.js", "../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js", "../node_modules/mdast-util-gfm/index.js", "../node_modules/mdast-util-gfm/lib/index.js", "../node_modules/mdast-util-gfm-autolink-literal/index.js", "../node_modules/ccount/index.js", "../node_modules/mdast-util-find-and-replace/index.js", "../node_modules/mdast-util-find-and-replace/lib/index.js", "../node_modules/mdast-util-gfm-footnote/index.js", "../node_modules/mdast-util-to-markdown/lib/util/association.js", "../node_modules/mdast-util-to-markdown/lib/util/container-flow.js", "../node_modules/mdast-util-to-markdown/lib/util/track.js", "../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js", "../node_modules/mdast-util-to-markdown/lib/util/safe.js", "../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js", "../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js", "../node_modules/mdast-util-gfm-strikethrough/index.js", "../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js", "../node_modules/mdast-util-gfm-table/index.js", "../node_modules/mdast-util-gfm-table/lib/index.js", "../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js", "../node_modules/markdown-table/index.js", "../node_modules/mdast-util-gfm-task-list-item/index.js", "../node_modules/mdast-util-to-markdown/lib/handle/list-item.js", "../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js", "../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js", "../app/components/MarkdownRenderer/CodeBlock.tsx", "../app/components/Writing/Editor/PreviewSwitch.tsx", "../app/components/Switch/index.tsx", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/settings.tsx", "../app/components/UserSettings/index.tsx", "../app/components/UserSettings/Email.tsx", "../app/components/UserSettings/Footer.tsx", "../app/components/UserSettings/DeleteUserDialog.tsx", "../app/components/UserSettings/SignedOut.tsx", "../app/components/UserSettings/Username.tsx", "../config/routes.ts", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/writing.tsx", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/writing/$writingId.tsx", "../app/components/Writing/PostDetail.tsx", "../app/components/Writing/PostActions.tsx", "../app/components/Button/ReactionButton.tsx", "../app/components/SignInDialog/index.tsx", "../app/components/SignInDialog/SignInDialogContent.tsx", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/writing/index.tsx", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/logout.tsx", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/about.tsx", "../app/components/Home/Intro.tsx", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/index.tsx", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/login.tsx", "../app/services/models/err.ts", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/join.tsx", "../app/components/Forms/JoinForm.tsx", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/404.tsx", "/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/test/test-routes/delete-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "../app/services/services.ts", "../app/services/note.server.ts", "../app/services/models/note.ts", "../app/services/models/model.ts", "../app/services/hyper.ts", "../app/services/user.server.ts", "../app/services/models/password.ts", "../app/services/models/user.ts", "../app/services/post.server.ts", "../app/services/models/post.ts", "../app/session.server.ts"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "'use strict'\n\nmodule.exports = is\n\n// Assert if `test` passes for `node`.   When a `parent` node is known the\n// `index` of node.\n// eslint-disable-next-line max-params\nfunction is(test, node, index, parent, context) {\n  var hasParent = parent !== null && parent !== undefined\n  var hasIndex = index !== null && index !== undefined\n  var check = convert(test)\n\n  if (\n    hasIndex &&\n    (typeof index !== 'number' || index < 0 || index === Infinity)\n  ) {\n    throw new Error('Expected positive finite index or child node')\n  }\n\n  if (hasParent && (!is(null, parent) || !parent.children)) {\n    throw new Error('Expected parent node')\n  }\n\n  if (!node || !node.type || typeof node.type !== 'string') {\n    return false\n  }\n\n  if (hasParent !== hasIndex) {\n    throw new Error('Expected both parent and index')\n  }\n\n  return Boolean(check.call(context, node, index, parent))\n}\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node\u2019s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n", "'use strict'\n\nmodule.exports = visitParents\n\nvar is = require('unist-util-is')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  one(tree, null, [])\n\n  // Visit a single node.\n  function one(node, index, parents) {\n    var result\n\n    if (!test || is(test, node, index, parents[parents.length - 1] || null)) {\n      result = visitor(node, parents)\n\n      if (result === EXIT) {\n        return result\n      }\n    }\n\n    if (node.children && result !== SKIP) {\n      return all(node.children, parents.concat(node)) === EXIT ? EXIT : result\n    }\n\n    return result\n  }\n\n  // Visit children in `parent`.\n  function all(children, parents) {\n    var min = -1\n    var step = reverse ? -1 : 1\n    var index = (reverse ? children.length : min) + step\n    var child\n    var result\n\n    while (index > min && index < children.length) {\n      child = children[index]\n      result = child && one(child, index, parents)\n\n      if (result === EXIT) {\n        return result\n      }\n\n      index = typeof result === 'number' ? result : index + step\n    }\n  }\n}\n", "module.exports = flatMap\n\nfunction flatMap(ast, fn) {\n  return transform(ast, 0, null)[0]\n\n  function transform(node, index, parent) {\n    if (node.children) {\n      var out = []\n      for (var i = 0, n = node.children.length; i < n; i++) {\n        var xs = transform(node.children[i], i, node)\n        if (xs) {\n          for (var j = 0, m = xs.length; j < m; j++) {\n            out.push(xs[j])\n          }\n        }\n      }\n      node.children = out\n    }\n\n    return fn(node, index, parent)\n  }\n}\n", "const visitWithParents = require('unist-util-visit-parents');\nconst flatMap = require('unist-util-flatmap');\n\nfunction mergeFlags(...allFlags) {\n  const set = new Set();\n  for (const flags of allFlags) {\n    for (const char of flags) {\n      set.add(char);\n    }\n  }\n  return [...set.values()].join('');\n}\n\nfunction removeExtremes(regex) {\n  return new RegExp(\n    regex.source.replace(/^\\^/, '').replace(/\\$$/, ''),\n    regex.flags,\n  );\n}\n\nfunction notInMarkdownLink(regex, optionalFlags) {\n  return new RegExp(\n    regex.source + '(?! *\\\\))(?! *\\\\])',\n    mergeFlags(optionalFlags, regex.flags),\n  );\n}\n\nfunction buildTextNode(props) {\n  return {type: 'text', value: props.value};\n}\n\nfunction buildLinkNode(props, children) {\n  return {\n    type: 'link',\n    title: props.title || props.url,\n    url: props.url,\n    children,\n  };\n}\n\nfunction h(type, props, children) {\n  if (type === 'text') return buildTextNode(props, children);\n  if (type === 'link') return buildLinkNode(props, children);\n  throw new Error('mdast hyperscript not supported for type ' + type);\n}\n\nfunction splitTextNode(textNode, inputRegex) {\n  const oldText = textNode.value;\n  const regex = notInMarkdownLink(removeExtremes(inputRegex), 'g');\n  const newNodes = [];\n  let startTextIdx = 0;\n  let output;\n  while ((output = regex.exec(oldText)) !== null) {\n    const endTextIdx = output.index;\n    if (startTextIdx !== endTextIdx) {\n      newNodes.push(\n        h('text', {value: oldText.slice(startTextIdx, endTextIdx)}),\n      );\n    }\n    const feedId = output[0];\n    newNodes.push(h('link', {url: feedId}, [h('text', {value: feedId})]));\n    startTextIdx = regex.lastIndex;\n  }\n  const remainingText = oldText.slice(startTextIdx);\n  if (remainingText.length > 0) {\n    newNodes.push(h('text', {value: remainingText}));\n  }\n  return newNodes;\n}\n\nfunction linkifyRegex(regex) {\n  return () => (ast) => {\n    const ignored = new WeakSet();\n    visitWithParents(ast, 'text', (textNode, parents) => {\n      if (parents.length > 0 && parents[parents.length - 1].type === 'link') {\n        ignored.add(textNode);\n        return;\n      }\n    });\n\n    flatMap(ast, (node) => {\n      if (node.type !== 'text') {\n        return [node];\n      }\n      if (ignored.has(node)) {\n        ignored.delete(node);\n        return [node];\n      }\n      return splitTextNode(node, regex);\n    });\n\n    return ast;\n  };\n}\n\nmodule.exports = linkifyRegex;\n", "import { setupServer } from \"msw/node\";\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "require(\"ts-node\").register({ transpileOnly: true });\nrequire(\"./start\");\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nimport { services } from \"~/services/services\";\n\nimport { SessionServerFactory } from \"~/session.server\";\nimport type { LoaderContext } from \"~/types\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"./mocks\");\n}\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n  getLoadContext(event): LoaderContext {\n    const serverContext = services();\n\n    /**\n     * Loaders have access to:\n     * - Business services\n     * - SessionServer\n     * - ApiGatewayProxyEvent\n     *\n     * Business logic is encapsulated, having access to only itself (see ./services/services.ts).\n     * This has lots of benefits:\n     * - Business logic is framework agnostic and can be reused\n     *   - Remix/NextJS/CRA/Preact\n     *   - Vue\n     *   - Svelte\n     *   - CLI :)\n     *\n     * - Easier to test business logic (unit tests!)\n     * - Separation of concerns\n     *\n     * For more info, see https://blog.hyper.io/the-perfect-application-architecture/\n     */\n    return {\n      ...serverContext,\n      event,\n      SessionServer: SessionServerFactory({ ...serverContext, event } as LoaderContext),\n    };\n  },\n});\n", "\nimport * as entryServer from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/entry.server.tsx\";\nimport * as route0 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/root.tsx\";\nimport * as route1 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/delete-account.tsx\";\nimport * as route2 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/u/$userId.tsx\";\nimport * as route3 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/new-post.tsx\";\nimport * as route4 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/settings.tsx\";\nimport * as route5 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/writing.tsx\";\nimport * as route6 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/writing/$writingId.tsx\";\nimport * as route7 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/writing/index.tsx\";\nimport * as route8 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/logout.tsx\";\nimport * as route9 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/about.tsx\";\nimport * as route10 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/index.tsx\";\nimport * as route11 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/login.tsx\";\nimport * as route12 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/join.tsx\";\nimport * as route13 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/app/routes/404.tsx\";\nimport * as route14 from \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/test/test-routes/delete-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/delete-account\": {\n      id: \"routes/delete-account\",\n      parentId: \"root\",\n      path: \"delete-account\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/u/$userId\": {\n      id: \"routes/u/$userId\",\n      parentId: \"root\",\n      path: \"u/:userId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/new-post\": {\n      id: \"routes/new-post\",\n      parentId: \"root\",\n      path: \"new-post\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/settings\": {\n      id: \"routes/settings\",\n      parentId: \"root\",\n      path: \"settings\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/writing\": {\n      id: \"routes/writing\",\n      parentId: \"root\",\n      path: \"writing\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/writing/$writingId\": {\n      id: \"routes/writing/$writingId\",\n      parentId: \"routes/writing\",\n      path: \":writingId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/writing/index\": {\n      id: \"routes/writing/index\",\n      parentId: \"routes/writing\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/404\": {\n      id: \"routes/404\",\n      parentId: \"root\",\n      path: \"404\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/test/test-routes/delete-user\": {\n      id: \"/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/test/test-routes/delete-user\",\n      parentId: \"root\",\n      path: \"__tests/delete-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    }\n  };", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(<RemixServer context={remixContext} url={request.url} />);\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { LinksFunction, LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport customStylesUrl from \"./styles/custom-styles.css\";\nimport draculaStylesUrl from \"./styles/dracula.css\";\nimport proseStylesUrl from \"./styles/prose-styles.css\";\nimport type { User } from \"./services/models/user\";\nimport type { LoaderContext } from \"./types\";\nimport { getEnv } from \"./env.server\";\nimport type { Post } from \"./services/models/post\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n    { rel: \"stylesheet\", href: customStylesUrl },\n    { rel: \"stylesheet\", href: draculaStylesUrl },\n    { rel: \"stylesheet\", href: proseStylesUrl },\n    // NOTE: Architect deploys the public directory to /_static/\n    { rel: \"icon\", href: \"/_static/favicon.ico\" },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Remix Notes\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\ntype LoaderData = {\n  user: User;\n  posts: Post[] | null;\n  ENV: ReturnType<typeof getEnv>;\n};\n\nexport const loader: LoaderFunction = async ({ request, context }) => {\n  const { SessionServer, PostServer } = context as LoaderContext;\n  return json<LoaderData>({\n    user: (await SessionServer.getUser(request)) as User,\n    posts: (await PostServer.getPostsList()) as unknown as Post[],\n    ENV: getEnv(),\n  });\n};\n\nexport default function App() {\n  const data = useLoaderData() as LoaderData;\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.ENV = ${JSON.stringify(data.ENV)}`,\n          }}\n        />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import invariant from \"tiny-invariant\";\n\nexport function getEnv() {\n  invariant(process.env.ADMIN_EMAIL, \"ADMIN_EMAIL should be defined\");\n\n  return {\n    ADMIN_EMAIL: process.env.ADMIN_EMAIL,\n  };\n}\n\ntype ENV = ReturnType<typeof getEnv>;\n\ndeclare global {\n  var ENV: ENV;\n  interface Window {\n    ENV: ENV;\n  }\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport type { LoaderContext } from \"~/types\";\n\nexport const action: ActionFunction = async ({ request, context }) => {\n  const { SessionServer, UserServer } = context as LoaderContext;\n\n  const user = await SessionServer.getUser(request);\n  console.log(\"user data from delete-account route:\", user);\n\n  return await UserServer.deleteUser(user?.email as string);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "import { ListDetailView, SiteLayout } from \"../../components/Layouts\";\nimport { UserDetail } from \"../../components/UserProfile/UserDetail\";\n\nexport default function UserPage() {\n  return (\n    <SiteLayout>\n      <ListDetailView list={null} hasDetail detail={<UserDetail />} />\n    </SiteLayout>\n  );\n}\n", "import * as React from \"react\";\n\nimport { Sidebar } from \"../Sidebar\";\n\ninterface Props {\n  list?: any;\n  children?: any;\n  detail: React.ReactElement | null;\n  hasDetail?: boolean;\n}\n\nexport function ListDetailView({ list, detail, hasDetail = false }: Props) {\n  return (\n    <div className=\"flex w-full\">\n      {list && (\n        <div\n          id=\"list\"\n          className={`bg-dots ${\n            hasDetail ? \"hidden lg:flex\" : \"min-h-screen w-full\"\n          }`}\n        >\n          {list}\n        </div>\n      )}\n      {detail}\n    </div>\n  );\n}\n\nexport function SiteLayout({ children }: any) {\n  return (\n    <div className=\"relative flex h-full min-h-screen w-full\">\n      <Sidebar />\n\n      <div className=\"flex flex-1\">{children}</div>\n    </div>\n  );\n}\n", "import * as React from \"react\";\n\nimport { TitleBar } from \"../ListDetail/TitleBar\";\nimport { GlobalNavigationContext } from \"../Providers\";\nimport { SidebarNavigation } from \"./Navigation\";\nimport { SidebarOverlay } from \"./Overlay\";\nimport { UserFooter } from \"./UserFooter\";\n\nexport function Sidebar() {\n  const { isOpen } = React.useContext(GlobalNavigationContext);\n  const scrollContainerRef = React.useRef(null);\n  return (\n    <>\n      <nav\n        ref={scrollContainerRef}\n        className={`${\n          isOpen\n            ? \"absolute inset-y-0 left-0 translate-x-0 shadow-lg\"\n            : \"absolute -translate-x-full\"\n        } 3xl:w-80 z-30 flex h-full max-h-screen min-h-screen w-3/4 flex-none transform flex-col overflow-y-auto border-r border-gray-150 bg-white pb-10 transition duration-200 ease-in-out dark:border-gray-800 dark:bg-gray-900 sm:w-1/2 sm:pb-0 md:w-1/3 lg:relative lg:z-auto lg:w-56 lg:translate-x-0 lg:bg-gray-50 lg:dark:bg-gray-900 2xl:w-72`}\n      >\n        <TitleBar\n          scrollContainerRef={scrollContainerRef}\n          leadingAccessory={null}\n          title=\"Ben Patton\"\n        />\n        <SidebarNavigation />\n        <UserFooter />\n      </nav>\n\n      <SidebarOverlay />\n    </>\n  );\n}\n", "/* eslint-disable react-hooks/exhaustive-deps */\nimport { Link } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport { ArrowLeft, Menu, X } from \"react-feather\";\n\nimport { GlobalNavigationContext } from \"../Providers\";\n\ninterface Props {\n  title?: string;\n  globalMenu?: boolean;\n  backButton?: boolean;\n  backButtonHref?: string;\n  magicTitle?: boolean;\n  titleRef?: React.MutableRefObject<HTMLParagraphElement | null> | null | any;\n  scrollContainerRef?:\n    | React.MutableRefObject<HTMLDivElement | null>\n    | null\n    | any;\n  children?: React.ReactNode;\n  leadingAccessory?: React.ReactNode;\n  trailingAccessory?: React.ReactNode;\n}\n\nexport function TitleBar({\n  title,\n  globalMenu = true,\n  backButton = false,\n  backButtonHref,\n  magicTitle = false,\n  titleRef = null,\n  scrollContainerRef = null,\n  leadingAccessory = null,\n  trailingAccessory = null,\n  children,\n}: Props) {\n  const { isOpen, setIsOpen } = React.useContext(GlobalNavigationContext);\n  const [darkMode, setDarkMode] = React.useState(false);\n  const [offset, setOffset] = React.useState(200);\n  const [opacity, _setOpacity] = React.useState(0);\n  const [currentScrollOffset, _setCurrentScrollOffset] = React.useState(0);\n\n  const [initialTitleOffsets, _setInitialTitleOffsets] = React.useState({\n    top: 0,\n    bottom: 0,\n  });\n\n  const initialTitleOffsetsRef = React.useRef(initialTitleOffsets);\n  const setInitialTitleOffsets = (data: any) => {\n    initialTitleOffsetsRef.current = data;\n    _setInitialTitleOffsets(data);\n  };\n\n  const opacityRef = React.useRef(opacity);\n  const setOpacity = (data: any) => {\n    opacityRef.current = data;\n    _setOpacity(data);\n  };\n\n  const currentScrollOffsetRef = React.useRef(currentScrollOffset);\n  const setCurrentScrollOffset = (data: any) => {\n    currentScrollOffsetRef.current = data;\n    _setCurrentScrollOffset(data);\n  };\n\n  const handler = React.useCallback(() => {\n    const shadowOpacity = scrollContainerRef.current.scrollTop / 200;\n    setCurrentScrollOffset(shadowOpacity > 0.12 ? 0.12 : shadowOpacity);\n\n    if (!titleRef?.current || !initialTitleOffsetsRef?.current) return;\n\n    const titleTop = titleRef.current.getBoundingClientRect().top - 48;\n    const titleBottom = titleRef.current.getBoundingClientRect().bottom - 56;\n    const initialOffsets = initialTitleOffsetsRef.current;\n\n    let offsetAmount =\n      parseFloat((titleBottom / initialOffsets.bottom).toFixed(2)) * 100;\n\n    let opacityOffset =\n      parseFloat((titleTop / initialOffsets.top).toFixed(2)) * -1;\n\n    setOffset(Math.min(Math.max(offsetAmount, 0), 100));\n    setOpacity(opacityOffset);\n  }, [title, titleRef, scrollContainerRef]);\n\n  React.useEffect(() => {\n    scrollContainerRef?.current?.addEventListener(\"scroll\", handler);\n    return () =>\n      scrollContainerRef?.current?.removeEventListener(\"scroll\", handler);\n  }, [title, titleRef, scrollContainerRef]);\n\n  React.useEffect(() => {\n    if (!titleRef?.current || !scrollContainerRef?.current) return;\n    scrollContainerRef.current.scrollTop = 0;\n    setOpacity(0);\n    setInitialTitleOffsets({\n      bottom: titleRef.current.getBoundingClientRect().bottom - 56,\n      top: titleRef.current.getBoundingClientRect().top - 48,\n    });\n  }, [title, titleRef, scrollContainerRef]);\n\n  React.useEffect(() => {\n    const isDarkMode =\n      window?.matchMedia &&\n      window?.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    if (isDarkMode) setDarkMode(true);\n  }, []);\n\n  return (\n    <>\n      <div\n        style={{\n          background: `rgba(${darkMode ? \"50,50,50\" : \"255,255,255\"},${\n            currentScrollOffset === 0\n              ? currentScrollOffset\n              : darkMode\n              ? currentScrollOffset + 0.5\n              : currentScrollOffset + 0.8\n          })`,\n          boxShadow: `0 1px 3px rgba(0,0,0,${currentScrollOffset})`,\n          minHeight: \"48px\",\n        }}\n        className={`filter-blur sticky top-0 z-10 flex flex-col justify-center px-3 py-2 dark:border-b dark:border-gray-900`}\n      >\n        <div className=\"flex flex-none items-center justify-between\">\n          <span className=\"flex items-center space-x-3\">\n            {globalMenu && (\n              <span\n                onClick={() => setIsOpen(!isOpen)}\n                className=\"flex cursor-pointer items-center justify-center rounded-md p-2 hover:bg-gray-200 dark:hover:bg-gray-800 lg:hidden\"\n              >\n                {isOpen ? (\n                  <X size={16} className=\"text-primary\" />\n                ) : (\n                  <Menu size={16} className=\"text-primary\" />\n                )}\n              </span>\n            )}\n\n            {backButton && (\n              <Link to={backButtonHref || \"\"}>\n                <span className=\"text-primary flex items-center justify-center rounded-md p-2 hover:bg-gray-200 dark:hover:bg-gray-800 lg:hidden\">\n                  <ArrowLeft size={16} className=\"text-primary\" />\n                </span>\n              </Link>\n            )}\n\n            {leadingAccessory && <>{leadingAccessory}</>}\n\n            <h2\n              style={\n                magicTitle\n                  ? {\n                      transform: `translateY(${offset}%)`,\n                      opacity: `${opacity}`,\n                    }\n                  : {}\n              }\n              className=\"text-primary transform-gpu text-sm font-bold line-clamp-1\"\n            >\n              {title}\n            </h2>\n          </span>\n\n          {trailingAccessory && <>{trailingAccessory}</>}\n        </div>\n\n        <div>{children}</div>\n      </div>\n    </>\n  );\n}\n", "import * as React from \"react\";\n// import { FathomProvider } from \"./Fathom\";\nimport { SEO } from \"./SEO\";\nimport { Toast } from \"./Toaster\";\n\ninterface Props {\n  children?: any;\n  pageProps: any;\n}\n\nconst globalNavigationContext = {\n  isOpen: false,\n  setIsOpen: (val: boolean) => {},\n};\n\nexport const GlobalNavigationContext = React.createContext(globalNavigationContext);\n\nexport function Providers({ children }: Props) {\n  const initialState = {\n    isOpen: false,\n    setIsOpen,\n  };\n\n  const [state, setState] = React.useState(initialState);\n\n  function setIsOpen(isOpen: any) {\n    return setState({ ...state, isOpen });\n  }\n\n  return (\n    <>\n      <SEO />\n      <Toast />\n\n      <GlobalNavigationContext.Provider value={state}>{children}</GlobalNavigationContext.Provider>\n    </>\n  );\n}\n", "export const baseUrl = process.env.NODE_ENV === \"production\" ? \"https://benapatton.com\" : \"\";\nexport const baseEmail = \"bass41992ben@gmail.com\";\n\nexport const defaultSEO = {\n  title: \"Ben Patton\",\n  description: \"Software Engineer, writer, and idea guy.\",\n  openGraph: {\n    type: \"website\",\n    locale: \"en_US\",\n    url: baseUrl,\n    site_name: \"Ben A Patton\",\n    images: [\n      {\n        url: `${baseUrl}/static/og/default.png`,\n        alt: \"Ben A Patton\",\n      },\n    ],\n  },\n};\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  image?: string;\n  url?: string;\n}\n\nexport function extendSEO(options: SEOProps) {\n  const images = options.image\n    ? [{ url: `${baseUrl}/static/${options.image}` }]\n    : defaultSEO.openGraph.images;\n\n  return {\n    ...defaultSEO,\n    ...options,\n    url: `${baseUrl}/${options.url}`,\n    openGraph: {\n      ...defaultSEO.openGraph,\n      images,\n      url: `${baseUrl}/${options.url}`,\n    },\n  };\n}\n", "import { useLocation } from \"@remix-run/react\";\nimport { Settings } from \"react-feather\";\nimport { useOptionalUser } from \"~/utils\";\n\nimport {\n  ExternalLinkIcon,\n  FigmaIcon,\n  GitHubIcon,\n  HomeIcon,\n  PodcastIcon,\n  SecurityChecklistIcon,\n  StaffDesignIcon,\n  WritingIcon,\n  YouTubeIcon,\n  SignOutIcon,\n  LinkedInIcon,\n} from \"../Icon\";\nimport { NavigationLink } from \"./NavigationLink\";\nimport SignOutAction from \"./SignOutAction\";\n\nexport function SidebarNavigation() {\n  const location = useLocation();\n  const user = useOptionalUser();\n  const sections = [\n    {\n      label: null,\n      items: [\n        {\n          href: \"/\",\n          label: \"Home\",\n          icon: HomeIcon,\n          trailingAccessory: null,\n          isActive: location.pathname === \"/\",\n          trailingAction: null,\n          isExternal: false,\n        },\n\n        {\n          href: \"/writing\",\n          label: \"Writing\",\n          icon: WritingIcon,\n          trailingAccessory: null,\n          isActive: location.pathname === \"/writing\",\n          trailingAction: null,\n          isExternal: false,\n        },\n      ],\n    },\n    {\n      label: \"Projects\",\n      items: [\n        {\n          href: \"https://designdetails.fm\",\n          label: \"Design Details\",\n          icon: PodcastIcon,\n          trailingAccessory: ExternalLinkIcon,\n          isActive: false,\n          trailingAction: null,\n          isExternal: true,\n        },\n\n        {\n          href: \"https://staff.design\",\n          label: \"Staff Design\",\n          icon: StaffDesignIcon,\n          trailingAccessory: ExternalLinkIcon,\n          trailingAction: null,\n          isExternal: true,\n        },\n\n        {\n          href: \"https://figma.com/@brian\",\n          label: \"Figma Plugins\",\n          icon: FigmaIcon,\n          trailingAccessory: ExternalLinkIcon,\n          isActive: false,\n          trailingAction: null,\n          isExternal: true,\n        },\n\n        {\n          href: \"/security\",\n          label: \"Security Checklist\",\n          icon: SecurityChecklistIcon,\n          trailingAccessory: null,\n          isActive: false,\n          trailingAction: null,\n          isExternal: false,\n        },\n      ],\n    },\n    {\n      label: \"Online\",\n      items: [\n        {\n          href: \"https://www.linkedin.com/in/benjaminapatton/\",\n          label: \"LinkedIn\",\n          icon: LinkedInIcon,\n          trailingAccessory: ExternalLinkIcon,\n          isActive: false,\n          trailingAction: null,\n          isExternal: true,\n        },\n\n        {\n          href: \"https://www.youtube.com/channel/UC-esBYEUGQ6iK1wmw76f5MA\",\n          label: \"YouTube\",\n          icon: YouTubeIcon,\n          trailingAccessory: ExternalLinkIcon,\n          isActive: false,\n          trailingAction: null,\n          isExternal: true,\n        },\n\n        {\n          href: \"https://github.com/Benanna2019\",\n          label: \"GitHub\",\n          icon: GitHubIcon,\n          trailingAccessory: ExternalLinkIcon,\n          isActive: false,\n          trailingAction: null,\n          isExternal: true,\n        },\n      ],\n    },\n    {\n      label: \"You\",\n      items: [\n        {\n          href: \"/logout\",\n          label: \"Logout\",\n          icon: SignOutIcon,\n          trailingAccessory: null,\n          trailingAction: user ? SignOutAction : null,\n          isExternal: false,\n        },\n\n        {\n          href: \"/settings\",\n          label: \"Settings\",\n          icon: Settings,\n          trailingAccessory: null,\n          isActive: location.pathname === \"/settings\",\n          trailingAction: null,\n          isExternal: false,\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"flex-1 space-y-1 px-3 py-3\">\n      {sections.map((section, i) => {\n        return (\n          <ul key={i} className=\"space-y-1\">\n            {section.label && (\n              <h4\n                key={i}\n                className=\"px-2 pt-5 pb-2 text-xs font-semibold text-gray-1000 text-opacity-40 dark:text-white\"\n              >\n                {section.label}\n              </h4>\n            )}\n            {section.items.map((item, j) => (\n              <NavigationLink key={j} link={item} />\n            ))}\n          </ul>\n        );\n      })}\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/services/models/user\";\nimport type { Post } from \"./services/models/post\";\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nfunction isPosts(posts: any): posts is Post[] {\n  return posts && typeof posts === \"object\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function usePostMatchesData(): Post[] | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isPosts(data.posts)) {\n    return undefined;\n  }\n  return data.posts;\n}\n\nexport function usePosts(): Post[] {\n  const maybePosts = usePostMatchesData();\n  if (!maybePosts) {\n    throw new Error(\n      \"No posts found in root loader, but posts are required. This should never happen but if it does, try usePostMatchesData instead\"\n    );\n  }\n  return maybePosts;\n}\n\nexport function trimEmail(email: string) {\n  return email.substring(0, email.indexOf(\"@\"));\n}\n\nexport function trimBodyToExcerpt(body: string) {\n  return body.substring(0, 40);\n}\n\nexport function classNames(...classes: any[]) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport function slugifyPostTitle(title: string) {\n  const str = title.replace(/[^a-z0-9]/g, \"-\").replace(/-+/g, \"-\");\n  return str;\n}\n", "export function HomeIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n    </svg>\n  );\n}\n\nexport function WritingIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M2 5a2 2 0 012-2h8a2 2 0 012 2v10a2 2 0 002 2H4a2 2 0 01-2-2V5zm3 1h6v4H5V6zm6 6H5v2h6v-2z\"\n        clipRule=\"evenodd\"\n      />\n      <path d=\"M15 7h1a2 2 0 012 2v5.5a1.5 1.5 0 01-3 0V7z\" />\n    </svg>\n  );\n}\n\nexport function CritIcon() {\n  return (\n    <svg\n      width=\"14\"\n      height=\"14\"\n      viewBox=\"0 0 14 14\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M10.5 1.75C10.0359 1.75 9.59075 1.93437 9.26256 2.26256C8.93437 2.59075 8.75 3.03587 8.75 3.5V10.5C8.75 10.9641 8.93437 11.4092 9.26256 11.7374C9.59075 12.0656 10.0359 12.25 10.5 12.25C10.9641 12.25 11.4092 12.0656 11.7374 11.7374C12.0656 11.4092 12.25 10.9641 12.25 10.5C12.25 10.0359 12.0656 9.59075 11.7374 9.26256C11.4092 8.93437 10.9641 8.75 10.5 8.75H3.5C3.03587 8.75 2.59075 8.93437 2.26256 9.26256C1.93437 9.59075 1.75 10.0359 1.75 10.5C1.75 10.9641 1.93437 11.4092 2.26256 11.7374C2.59075 12.0656 3.03587 12.25 3.5 12.25C3.96413 12.25 4.40925 12.0656 4.73744 11.7374C5.06563 11.4092 5.25 10.9641 5.25 10.5V3.5C5.25 3.03587 5.06563 2.59075 4.73744 2.26256C4.40925 1.93437 3.96413 1.75 3.5 1.75C3.03587 1.75 2.59075 1.93437 2.26256 2.26256C1.93437 2.59075 1.75 3.03587 1.75 3.5C1.75 3.96413 1.93437 4.40925 2.26256 4.73744C2.59075 5.06563 3.03587 5.25 3.5 5.25H10.5C10.9641 5.25 11.4092 5.06563 11.7374 4.73744C12.0656 4.40925 12.25 3.96413 12.25 3.5C12.25 3.03587 12.0656 2.59075 11.7374 2.26256C11.4092 1.93437 10.9641 1.75 10.5 1.75Z\"\n        strokeWidth=\"1.66667\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n}\n\nexport function FigmaIcon() {\n  return (\n    <svg\n      width=\"14\"\n      height=\"15\"\n      viewBox=\"0 0 14 14\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M4.63338 14.8C5.25222 14.8 5.84571 14.5541 6.2833 14.1166C6.72088 13.679 6.96672 13.0855 6.96672 12.4666V10.1333H4.63338C4.01454 10.1333 3.42105 10.3791 2.98347 10.8167C2.54588 11.2543 2.30005 11.8478 2.30005 12.4666C2.30005 13.0855 2.54588 13.679 2.98347 14.1166C3.42105 14.5541 4.01454 14.8 4.63338 14.8V14.8Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M2.30005 7.39998C2.30005 6.78115 2.54588 6.18765 2.98347 5.75007C3.42105 5.31248 4.01454 5.06665 4.63338 5.06665H6.96672V9.73332H4.63338C4.01454 9.73332 3.42105 9.48748 2.98347 9.0499C2.54588 8.61231 2.30005 8.01882 2.30005 7.39998V7.39998Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M2.30005 2.33333C2.30005 1.71481 2.54563 1.12159 2.98282 0.684062C3.42001 0.246529 4.01304 0.000483221 4.63156 0L6.96489 0V4.66667H4.63338C4.01454 4.66667 3.42105 4.42083 2.98347 3.98325C2.54588 3.54566 2.30005 2.95217 2.30005 2.33333V2.33333Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M7.3999 0H9.73323C10.3521 0 10.9456 0.245833 11.3832 0.683417C11.8207 1.121 12.0666 1.71449 12.0666 2.33333C12.0666 2.95217 11.8207 3.54566 11.3832 3.98325C10.9456 4.42083 10.3521 4.66667 9.73323 4.66667H7.3999V0Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M11.9667 7.4034C11.9667 8.02224 11.7209 8.61573 11.2833 9.05332C10.8457 9.4909 10.2522 9.73673 9.63338 9.73673C9.01454 9.73673 8.42105 9.4909 7.98347 9.05332C7.54588 8.61573 7.30005 8.02224 7.30005 7.4034C7.30005 6.78456 7.54588 6.19107 7.98347 5.75349C8.42105 5.3159 9.01454 5.07007 9.63338 5.07007C10.2522 5.07007 10.8457 5.3159 11.2833 5.75349C11.7209 6.19107 11.9667 6.78456 11.9667 7.4034V7.4034Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n\nexport function PodcastIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n\nexport function NewsletterIcon() {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.0469 17.4844C13.489 17.4844 14.872 16.9115 15.8918 15.8918C16.9115 14.872 17.4844 13.489 17.4844 12.0469C17.4844 10.6048 16.9115 9.22171 15.8918 8.20198C14.872 7.18225 13.489 6.60938 12.0469 6.60938C10.6048 6.60938 9.22171 7.18225 8.20198 8.20198C7.18225 9.22171 6.60938 10.6048 6.60938 12.0469C6.60938 13.489 7.18225 14.872 8.20198 15.8918C9.22171 16.9115 10.6048 17.4844 12.0469 17.4844V17.4844ZM12.7266 10.0078C12.7266 9.82755 12.655 9.65467 12.5275 9.5272C12.4 9.39973 12.2271 9.32812 12.0469 9.32812C11.8666 9.32812 11.6937 9.39973 11.5663 9.5272C11.4388 9.65467 11.3672 9.82755 11.3672 10.0078V11.3672H10.0078C9.82755 11.3672 9.65467 11.4388 9.5272 11.5663C9.39973 11.6937 9.32812 11.8666 9.32812 12.0469C9.32812 12.2271 9.39973 12.4 9.5272 12.5275C9.65467 12.655 9.82755 12.7266 10.0078 12.7266H11.3672V14.0859C11.3672 14.2662 11.4388 14.4391 11.5663 14.5665C11.6937 14.694 11.8666 14.7656 12.0469 14.7656C12.2271 14.7656 12.4 14.694 12.5275 14.5665C12.655 14.4391 12.7266 14.2662 12.7266 14.0859V12.7266H14.0859C14.2662 12.7266 14.4391 12.655 14.5665 12.5275C14.694 12.4 14.7656 12.2271 14.7656 12.0469C14.7656 11.8666 14.694 11.6937 14.5665 11.5663C14.4391 11.4388 14.2662 11.3672 14.0859 11.3672H12.7266V10.0078Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n\nexport function BookmarksIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M5 4a2 2 0 012-2h6a2 2 0 012 2v14l-5-2.5L5 18V4z\" />\n    </svg>\n  );\n}\n\nexport function AMAIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M2 5a2 2 0 012-2h7a2 2 0 012 2v4a2 2 0 01-2 2H9l-3 3v-3H4a2 2 0 01-2-2V5z\" />\n      <path d=\"M15 7v2a4 4 0 01-4 4H9.828l-1.766 1.767c.28.149.599.233.938.233h2l3 3v-3h2a2 2 0 002-2V9a2 2 0 00-2-2h-1z\" />\n    </svg>\n  );\n}\n\nexport function StackIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" />\n    </svg>\n  );\n}\n\nexport function StaffDesignIcon() {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 19 20\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M16.5624 7.65024C15.3911 4.22834 13.9853 0.299954 10.3749 0.0277404C6.02993 -0.299865 1.80395 2.3005 0.442366 6.43482C-0.933043 10.6111 1.02411 15.0339 4.57906 17.6263C8.16191 20.239 13.1943 21.056 16.602 18.2191C19.4143 15.8778 18.023 11.8653 16.7983 8.33341C16.7186 8.10345 16.6396 7.87553 16.5624 7.65024ZM12.9543 11.6429C12.9543 13.4747 11.5233 14.6404 9.06857 14.6404C7.06405 14.6404 5.90451 13.9188 5.52211 13.0491C5.42959 12.8456 5.38642 12.6359 5.38642 12.4324C5.38642 11.8032 5.86133 11.3715 6.50895 11.3715C7.00237 11.3715 7.33543 11.5257 7.68699 12.0191C7.99538 12.457 8.51347 12.6359 9.09941 12.6359C9.88271 12.6359 10.3638 12.3152 10.3638 11.8773C10.3638 11.4578 10.0184 11.279 9.01923 11.1001L8.1249 10.9398C6.35475 10.6252 5.38642 9.73087 5.38642 8.34929C5.38642 6.56064 6.92836 5.43194 9.0439 5.43194C10.8079 5.43194 12.0723 6.05488 12.5349 7.16508C12.6089 7.34395 12.6459 7.51048 12.6459 7.71401C12.6459 8.30612 12.2141 8.70702 11.5603 8.71319C11.0052 8.71319 10.6537 8.52199 10.3391 8.04707C10.0492 7.60299 9.636 7.43646 9.07474 7.43646C8.34694 7.43646 7.97688 7.75719 7.97688 8.15809C7.97688 8.55899 8.35928 8.7502 9.24743 8.91056L10.1418 9.07092C12.0538 9.41631 12.9543 10.1996 12.9543 11.6429Z\"\n      />\n    </svg>\n  );\n}\n\nexport function SecurityChecklistIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n\nexport function AppDissectionIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n\nexport function HackerNewsIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n\nexport function TwitterIcon() {\n  return (\n    <svg\n      viewBox=\"0 0 16 14\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"14\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M14.3617 3.35401C14.3687 3.49999 14.3713 3.64777 14.3713 3.79376C14.3713 8.29039 11.0696 13.4737 5.03217 13.4737C3.17739 13.4737 1.45304 12.9105 0 11.9445C0.859457 12.0522 1.73097 11.9833 2.56473 11.7418C3.39849 11.5003 4.17814 11.0908 4.85913 10.5369C4.17428 10.5235 3.51059 10.2886 2.96085 9.86516C2.41112 9.44169 2.00282 8.85078 1.79304 8.17505C2.28527 8.27044 2.79186 8.25042 3.27565 8.11647C2.53271 7.96035 1.8647 7.54285 1.38482 6.9347C0.904951 6.32655 0.642734 5.56518 0.642609 4.77959V4.73724C1.09843 5.00001 1.60823 5.14614 2.12957 5.16347C1.4338 4.6828 0.941284 3.94507 0.752536 3.10088C0.563788 2.25669 0.693041 1.36968 1.11391 0.620882C1.93808 1.67201 2.96639 2.53173 4.13207 3.14418C5.29774 3.75663 6.5747 4.10813 7.88 4.17584C7.82353 3.92137 7.79523 3.66107 7.79565 3.39996C7.79565 2.9534 7.88054 2.51121 8.04548 2.09865C8.21041 1.68609 8.45215 1.31124 8.7569 0.995511C9.06165 0.679784 9.42344 0.429363 9.82159 0.258552C10.2197 0.0877414 10.6465 -0.00011384 11.0774 4.51813e-06C11.5265 -0.000754465 11.9709 0.0941183 12.3832 0.278738C12.7954 0.463357 13.1667 0.733786 13.4739 1.07325C14.2088 0.922489 14.9136 0.643368 15.5583 0.247815C15.3131 1.03559 14.8001 1.70424 14.1148 2.12937C14.7654 2.04944 15.4009 1.86901 16 1.5941C15.5599 2.27755 15.005 2.87363 14.3617 3.35401V3.35401Z\" />\n    </svg>\n  );\n}\n\nexport function GitHubIcon() {\n  return (\n    <svg\n      viewBox=\"0 0 17 16\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8.06478 0C3.61133 0 0 3.6722 0 8.20248C0 11.8266 2.31081 14.9013 5.51518 15.9859C5.91823 16.0618 6.06622 15.808 6.06622 15.5913C6.06622 15.3957 6.05875 14.7496 6.05528 14.0642C3.81164 14.5604 3.3382 13.0963 3.3382 13.0963C2.97134 12.1483 2.44275 11.8961 2.44275 11.8961C1.71103 11.387 2.49791 11.3975 2.49791 11.3975C3.30775 11.4552 3.73417 12.2428 3.73417 12.2428C4.45347 13.4968 5.62083 13.1343 6.08103 12.9247C6.15342 12.3947 6.36245 12.0325 6.59305 11.8278C4.80178 11.6204 2.91872 10.9171 2.91872 7.77405C2.91872 6.87851 3.23377 6.14679 3.74966 5.57235C3.66593 5.36561 3.38987 4.53148 3.8278 3.40163C3.8278 3.40163 4.50501 3.18118 6.04619 4.24243C6.68951 4.0607 7.37942 3.96953 8.06478 3.96644C8.75018 3.96953 9.44062 4.0607 10.0851 4.24243C11.6244 3.18118 12.3007 3.40163 12.3007 3.40163C12.7397 4.53148 12.4635 5.36561 12.3798 5.57235C12.8969 6.14679 13.2098 6.87851 13.2098 7.77405C13.2098 10.9245 11.3231 11.6182 9.52728 11.8213C9.81657 12.0758 10.0743 12.575 10.0743 13.3403C10.0743 14.4377 10.065 15.321 10.065 15.5913C10.065 15.8096 10.2101 16.0653 10.6189 15.9848C13.8216 14.899 16.1294 11.8254 16.1294 8.20248C16.1294 3.6722 12.5187 0 8.06478 0Z\"\n      />\n    </svg>\n  );\n}\n\nexport function YouTubeIcon() {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M0.734576 5.16761C0.805268 4.07928 1.68027 3.22636 2.76955 3.1724C4.34691 3.09425 6.60141 3 8.3001 3C9.99879 3 12.2533 3.09425 13.8306 3.1724C14.9199 3.22636 15.7949 4.07928 15.8656 5.16761C15.9333 6.21031 16.0001 7.49331 16.0001 8.5C16.0001 9.50669 15.9333 10.7897 15.8656 11.8324C15.7949 12.9207 14.9199 13.7736 13.8306 13.8276C12.2533 13.9058 9.99879 14 8.3001 14C6.60141 14 4.34691 13.9058 2.76955 13.8276C1.68027 13.7736 0.805268 12.9207 0.734576 11.8324C0.666848 10.7897 0.600098 9.50669 0.600098 8.5C0.600098 7.49331 0.666848 6.21031 0.734576 5.16761Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M6.6499 6.30005V10.7L11.0499 8.50005L6.6499 6.30005Z\"\n        fill=\"currentColor\"\n        className=\"text-gray-50 dark:text-gray-900\"\n      />\n    </svg>\n  );\n}\n\nexport function ExternalLinkIcon() {\n  return (\n    <svg\n      width=\"10\"\n      height=\"9\"\n      viewBox=\"0 0 10 9\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M9.00195 6.32617V0.824219C9.00195 0.490234 8.79102 0.267578 8.45117 0.267578L2.94922 0.279297C2.62109 0.279297 2.41016 0.519531 2.41016 0.794922C2.41016 1.07031 2.65039 1.30469 2.92578 1.30469H4.66602L7.45508 1.19922L6.39453 2.13672L1.16211 7.38086C1.05664 7.48633 0.998047 7.61523 0.998047 7.73828C0.998047 8.01367 1.24414 8.27734 1.53125 8.27734C1.66602 8.27734 1.78906 8.22461 1.89453 8.11914L7.13281 2.875L8.07617 1.81445L7.96484 4.48047V6.34961C7.96484 6.61914 8.19922 6.86523 8.48633 6.86523C8.76172 6.86523 9.00195 6.63672 9.00195 6.32617Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n\nexport function HeartIcon() {\n  return (\n    <svg\n      width=\"15\"\n      height=\"15\"\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M7.50001 13.125C7.09689 12.7675 6.64126 12.3956 6.15939 12H6.15314C4.45626 10.6125 2.53314 9.04247 1.68376 7.16122C1.40471 6.5623 1.25683 5.91067 1.25001 5.24997C1.24814 4.3434 1.61175 3.47434 2.25864 2.8392C2.90554 2.20406 3.78113 1.85647 4.68751 1.87497C5.42541 1.87614 6.14741 2.0894 6.76751 2.48935C7.03999 2.6662 7.28653 2.88013 7.50001 3.12497C7.71469 2.88109 7.96129 2.66729 8.23314 2.48935C8.85297 2.08932 9.5748 1.87604 10.3125 1.87497C11.2189 1.85647 12.0945 2.20406 12.7414 2.8392C13.3883 3.47434 13.7519 4.3434 13.75 5.24997C13.7436 5.91173 13.5957 6.56447 13.3163 7.16435C12.4669 9.0456 10.5444 10.615 8.84751 12L8.84126 12.005C8.35876 12.3981 7.90376 12.77 7.50064 13.13L7.50001 13.125ZM4.68751 3.12497C4.10533 3.11768 3.54381 3.3405 3.12501 3.74497C2.72151 4.14132 2.49599 4.68437 2.49996 5.24997C2.50709 5.73153 2.61616 6.20613 2.82001 6.64247C3.22096 7.45416 3.76196 8.18875 4.41814 8.81247C5.03751 9.43747 5.75001 10.0425 6.36626 10.5512C6.53689 10.6918 6.71064 10.8337 6.88439 10.9756L6.99376 11.065C7.16064 11.2012 7.33314 11.3425 7.50001 11.4812L7.50814 11.4737L7.51189 11.4706H7.51564L7.52126 11.4662H7.52439H7.52751L7.53876 11.4568L7.56439 11.4362L7.56876 11.4325L7.57564 11.4275H7.57939L7.58501 11.4225L8.00001 11.0818L8.10876 10.9925C8.28439 10.8493 8.45814 10.7075 8.62876 10.5668C9.24501 10.0581 9.95814 9.45372 10.5775 8.8256C11.2338 8.2022 11.7748 7.46779 12.1756 6.65622C12.3832 6.2161 12.4938 5.73654 12.5 5.24997C12.5026 4.68612 12.2772 4.14515 11.875 3.74997C11.457 3.34367 10.8954 3.11902 10.3125 3.12497C9.60122 3.11893 8.92122 3.41708 8.44376 3.94435L7.50001 5.03185L6.55626 3.94435C6.0788 3.41708 5.39881 3.11893 4.68751 3.12497Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n\nexport function HeartFillIcon() {\n  return (\n    <svg\n      width=\"15\"\n      height=\"15\"\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M1.25 5.25009C1.24984 4.34405 1.61399 3.476 2.26051 2.84123C2.90703 2.20647 3.78161 1.85831 4.6875 1.87509C5.76083 1.86939 6.78499 2.32458 7.5 3.12509C8.21501 2.32458 9.23917 1.86939 10.3125 1.87509C11.2184 1.85831 12.093 2.20647 12.7395 2.84123C13.386 3.476 13.7502 4.34405 13.75 5.25009C13.75 8.59759 9.76313 11.1251 7.5 13.1251C5.24188 11.1082 1.25 8.60009 1.25 5.25009Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n\nexport function SignOutIcon() {\n  return (\n    <svg\n      width=\"18\"\n      height=\"14\"\n      viewBox=\"0 0 17 17\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n\nexport function LinkedInIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      width=\"16\"\n      height=\"14\"\n      viewBox=\"0 0 192 192\"\n    >\n      {\n        <g\n          fill=\"none\"\n          fillRule=\"nonzero\"\n          stroke=\"none\"\n          strokeWidth=\"1\"\n          strokeLinecap=\"butt\"\n          strokeLinejoin=\"miter\"\n          strokeMiterlimit=\"10\"\n          strokeDasharray=\"\"\n          strokeDashoffset=\"0\"\n          fontFamily=\"none\"\n          fontWeight=\"none\"\n          fontSize=\"none\"\n          textAnchor=\"none\"\n        >\n          <path d=\"M0,192v-192h192v192z\" fill=\"none\"></path>\n          <g fill=\"#ffffff\">\n            <g id=\"surface1\">\n              <path d=\"M156,0h-120c-19.875,0 -36,16.125 -36,36v120c0,19.875 16.125,36 36,36h120c19.875,0 36,-16.125 36,-36v-120c0,-19.875 -16.125,-36 -36,-36zM59.36539,162.98077h-29.82693l-0.17307,-89.30769h29.82692zM43.70192,61.99038h-0.17308c-9.75,0 -16.03846,-6.72115 -16.03846,-15.08653c0,-8.56731 6.49039,-15.0577 16.41347,-15.0577c9.92308,0 16.00961,6.49038 16.21153,15.0577c0,8.36538 -6.31731,15.08653 -16.41346,15.08653zM162.77885,162.98077h-30.08654v-48.51923c0,-11.74039 -3.11538,-19.73077 -13.61538,-19.73077c-8.01923,0 -12.34615,5.39423 -14.42308,10.61538c-0.77885,1.875 -0.98077,4.44231 -0.98077,7.06731v50.56731h-30.23077l-0.17308,-89.30769h30.23077l0.17308,12.60577c3.86538,-5.97116 10.29808,-14.42308 25.70192,-14.42308c19.09616,0 33.37501,12.46154 33.37501,39.25961v51.86539z\"></path>\n            </g>\n          </g>\n        </g>\n      }\n    </svg>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport { classNames } from \"~/utils\";\nimport LogoutForm from \"../Forms/LogoutForm\";\n\nimport { GlobalNavigationContext } from \"../Providers\";\n\ninterface NavLink {\n  link: {\n    href: any;\n    label: any;\n    icon: any;\n    trailingAccessory: any;\n    trailingAction: any;\n    isActive?: boolean;\n    isExternal: any;\n  };\n}\n\nexport function NavigationLink({\n  link: {\n    href,\n    label,\n    icon: Icon,\n    trailingAccessory: Accessory,\n    trailingAction: Action,\n    isActive,\n    isExternal,\n  },\n}: NavLink) {\n  const { setIsOpen } = React.useContext(GlobalNavigationContext);\n  return (\n    <li\n      className=\"flex items-stretch space-x-1\"\n      onClick={() => setIsOpen(false)}\n    >\n      {href === \"/logout\" ? (\n        <LogoutForm info={{ href, label, Icon, Accessory, Action, isActive }} />\n      ) : !isExternal ? (\n        <Link\n          to={href}\n          className={classNames(\n            isActive\n              ? \" text-white hover:bg-black hover:text-white dark:bg-gray-700 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white\"\n              : \" text-gray-700 dark:text-gray-200 sm:hover:bg-gray-200 sm:hover:text-gray-900 sm:dark:hover:bg-gray-700 sm:dark:hover:text-gray-200\",\n            \"flex flex-1 items-center space-x-3 rounded-md px-2 py-1.5 text-sm font-medium\"\n          )}\n        >\n          <span className=\"flex w-4 items-center justify-center\">\n            <Icon />\n          </span>\n          <span className=\"flex-1\">{label}</span>\n          {Accessory && (\n            <span className=\"flex w-4 items-center justify-center text-black text-opacity-40 dark:text-white\">\n              <Accessory />\n            </span>\n          )}\n        </Link>\n      ) : (\n        // eslint-disable-next-line react/jsx-no-target-blank\n        <a\n          href={href}\n          target={isExternal ? \"_blank\" : undefined}\n          rel={isExternal ? \"noreferrer\" : undefined}\n          className={classNames(\n            isActive\n              ? \" text-white hover:bg-black hover:text-white dark:bg-gray-700 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white\"\n              : \" text-gray-700 dark:text-gray-200 sm:hover:bg-gray-200 sm:hover:text-gray-900 sm:dark:hover:bg-gray-700 sm:dark:hover:text-gray-200\",\n            \"flex flex-1 items-center space-x-3 rounded-md px-2 py-1.5 text-sm font-medium\"\n          )}\n        >\n          <span className=\"flex w-4 items-center justify-center\">\n            <Icon />\n          </span>\n          <span className=\"flex-1\">{label}</span>\n          {Accessory && (\n            <span className=\"flex w-4 items-center justify-center text-black text-opacity-40 dark:text-white\">\n              <Accessory />\n            </span>\n          )}\n        </a>\n      )}\n      {Action ? <Action /> : null}\n    </li>\n  );\n}\n", "import { Form } from \"@remix-run/react\";\nimport { classNames } from \"~/utils\";\n\ninterface LogoutType {\n  info: {\n    href: any;\n    label: any;\n    Icon: any;\n    Accessory: any;\n    Action: any;\n    isActive?: boolean;\n  };\n}\n\nexport default function LogoutForm({\n  info: { href, label, Icon, Accessory, Action, isActive },\n}: LogoutType) {\n  return (\n    <Form\n      action={href}\n      method=\"post\"\n      className={classNames(\n        isActive\n          ? \" text-white hover:bg-black hover:text-white dark:bg-gray-700 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white\"\n          : \" text-gray-700 dark:text-gray-200 sm:hover:bg-gray-200 sm:hover:text-gray-900 sm:dark:hover:bg-gray-700 sm:dark:hover:text-gray-200\",\n        \"flex flex-1 items-center space-x-3 rounded-md px-2 py-1.5 text-sm font-medium\"\n      )}\n    >\n      <span className=\"flex w-4 items-center justify-center\">\n        <Icon />\n      </span>\n      <span className=\"flex-1 cursor-pointer\">\n        <button type=\"submit\">{label}</button>\n      </span>\n\n      {Accessory && (\n        <span className=\"flex w-4 items-center justify-center text-black text-opacity-40 dark:text-white\">\n          <Accessory />\n        </span>\n      )}\n    </Form>\n  );\n}\n", "import { Form } from \"@remix-run/react\";\n\nexport default function SignOutAction() {\n  return (\n    <Form action=\"/logout\" method=\"post\">\n      <button\n        type=\"submit\"\n        className=\"hidden rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n      >\n        Logout\n      </button>\n    </Form>\n  );\n}\n", "import * as React from \"react\";\n\nimport { GlobalNavigationContext } from \"../Providers\";\n\nexport function SidebarOverlay() {\n  const { isOpen, setIsOpen } = React.useContext(GlobalNavigationContext);\n\n  return (\n    <div\n      className={`fixed inset-0 z-20 bg-black bg-opacity-10 transition duration-200 ease-in-out dark:bg-opacity-50 ${\n        isOpen ? \"pointer-events-auto opacity-100\" : \"pointer-events-none opacity-0\"\n      }`}\n      onClick={() => setIsOpen(false)}\n    />\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport { Settings } from \"react-feather\";\nimport { useTransition } from \"@remix-run/react\";\nimport { GhostButton } from \"../Button\";\nimport { LoadingSpinner } from \"../LoadingSpinner\";\nimport { GlobalNavigationContext } from \"../Providers\";\nimport { classNames, trimEmail, useOptionalUser } from \"~/utils\";\n\nfunction Container(\n  props: JSX.IntrinsicAttributes &\n    React.ClassAttributes<HTMLDivElement> &\n    React.HTMLAttributes<HTMLDivElement>\n) {\n  return (\n    <div\n      data-cy=\"sign-in-button\"\n      className=\"filter-blur sticky bottom-0 z-10 flex items-center justify-between space-x-3 border-t border-gray-150 bg-white bg-opacity-80 p-2 dark:border-gray-800 dark:bg-gray-900 dark:bg-opacity-60\"\n      {...props}\n    />\n  );\n}\n\nexport function UserFooter() {\n  // this is where I would set the user, but I think I can just pass the user to the Footer\n  const { setIsOpen } = React.useContext(GlobalNavigationContext);\n  const transition = useTransition();\n  const user = useOptionalUser();\n\n  function signInButton() {\n    return (\n      <GhostButton as={\"login\"} style={{ width: \"100%\" }}>\n        <Link to=\"/login\">Sign In</Link>\n      </GhostButton>\n    );\n  }\n\n  if (transition.state === \"loading\") {\n    return (\n      <Container>\n        <div className=\"flex w-full items-center justify-center py-1\">\n          <LoadingSpinner />\n        </div>\n      </Container>\n    );\n  }\n\n  if (!user) {\n    return <Container>{signInButton()}</Container>;\n  }\n\n  if (user) {\n    return (\n      <Container>\n        <Link\n          to={`/u/${user.username}`}\n          onClick={() => setIsOpen(false)}\n          className={classNames(\n            user\n              ? \" text-white hover:bg-black hover:text-white dark:bg-gray-700 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white\"\n              : \" text-gray-700 dark:text-gray-200 sm:hover:bg-gray-200 sm:hover:text-gray-900 sm:dark:hover:bg-gray-700 sm:dark:hover:text-gray-200\",\n            \"flex flex-1 items-center space-x-3 rounded-md px-2 py-1.5 text-sm font-medium\"\n          )}\n        >\n          \uD83D\uDC4B, {trimEmail(user.email)}\n        </Link>\n        <GhostButton\n          aria-label=\"Manage settings\"\n          onClick={() => setIsOpen(false)}\n          size=\"small-square\"\n          href=\"/settings\"\n        >\n          <Settings size={16} />\n        </GhostButton>\n      </Container>\n    );\n  }\n\n  return <Container>{signInButton()}</Container>;\n}\n", "/* eslint-disable react/display-name */\nimport { Link } from \"@remix-run/react\";\nimport * as React from \"react\";\n\ninterface BaseButtonProps {\n  [key: string]: unknown;\n  size: string;\n  disabled?: boolean;\n}\n\ntype ButtonAsButton = BaseButtonProps &\n  React.ButtonHTMLAttributes<HTMLButtonElement>;\n\ntype ButtonAsLink = BaseButtonProps &\n  React.AnchorHTMLAttributes<HTMLAnchorElement>;\n\ntype ButtonProps = ButtonAsButton | ButtonAsLink;\n\nconst actionChecker = \"delete_my_account\" || \"new_post\" || \"edit_post\";\n\nfunction BaseButton({\n  href = null,\n  as = null,\n  forwardedRef = null,\n  type = null,\n  ...rest\n}) {\n  if (href && as === actionChecker) {\n    <button type=\"submit\" />;\n  }\n  if (href && as) {\n    return (\n      <Link to={href}>\n        <div {...rest} />\n      </Link>\n    );\n  }\n\n  if (href) {\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    return <a ref={forwardedRef} href={href} {...rest} />;\n  }\n\n  return <button ref={forwardedRef} {...rest} />;\n}\n\ntype SIZE = string | null;\n\nconst baseClasses =\n  \"flex space-x-2 flex-none items-center justify-center cursor-pointer leading-none transition-all font-semibold\";\n\nfunction getSize(size: SIZE = null) {\n  switch (size) {\n    case \"large\": {\n      return \"px-4 py-3 text-sm\";\n    }\n    case \"small\": {\n      return \"px-2.5 py-1.5 text-xs\";\n    }\n    case \"small-square\": {\n      return \"p-2 text-sm\";\n    }\n    default: {\n      return \"px-4 py-2 text-sm\";\n    }\n  }\n}\n\nfunction getOpacity(disabled = false) {\n  return disabled ? \"opacity-50 cursor-not-allowed\" : \"opacity-100\";\n}\n\nfunction getRadius(size: SIZE = null) {\n  switch (size) {\n    case \"large\": {\n      return \"rounded-lg\";\n    }\n    case \"small\": {\n      return \"rounded\";\n    }\n    default: {\n      return \"rounded-md\";\n    }\n  }\n}\n\nconst composer = {\n  getSize,\n  getOpacity,\n  getRadius,\n};\n\nexport const Button = React.forwardRef((props: ButtonProps, ref) => {\n  const classes = `text-gray-700 hover:text-gray-1000 shadow-xs bg-white border border-gray-400 border-opacity-30 dark:border-gray-700 dark:hover:border-gray-600 dark:bg-white dark:bg-opacity-10 dark:text-gray-200 dark:hover:text-white hover:border-opacity-50 hover:shadow-sm`;\n  const size = composer.getSize(props.size);\n  const opacity = composer.getOpacity(props.disabled);\n  const radius = composer.getRadius(props.size);\n  const composed = `${baseClasses} ${size} ${opacity} ${radius} ${classes}`;\n  //@ts-ignore\n  return <BaseButton forwardedRef={ref} className={composed} {...props} />;\n});\n\nexport default Button;\n\nexport const PrimaryButton = React.forwardRef((props: ButtonProps, ref) => {\n  const classes = `text-white hover:text-white shadow-xs bg-blue-500 border border-blue-600 dark:border-blue-400 dark:border-opacity-50 hover:shadow-sm`;\n  const size = composer.getSize(props.size);\n  const opacity = composer.getOpacity(props.disabled);\n  const radius = composer.getRadius(props.size);\n  const composed = `${baseClasses} ${size} ${opacity} ${radius} ${classes}`;\n  //@ts-ignore\n  return <BaseButton forwardedRef={ref} className={composed} {...props} />;\n});\n\nexport const DeleteButton = React.forwardRef((props: ButtonProps, ref) => {\n  const classes = `bg-white border border-gray-200 dark:border-red-500 dark:hover:border-red-500  dark:bg-red-500 dark:border-opacity-20 dark:bg-opacity-10 text-red-500 hover:border-red-500 hover:text-white hover:bg-red-600 focus:bg-red-600 dark:focus:text-white`;\n\n  const size = composer.getSize(props.size);\n  const opacity = composer.getOpacity(props.disabled);\n  const radius = composer.getRadius(props.size);\n  const composed = `${baseClasses} ${size} ${opacity} ${radius} ${classes}`;\n  //@ts-ignore\n  return <BaseButton forwardedRef={ref} className={composed} {...props} />;\n});\n\nexport const RecordingButton = React.forwardRef((props: ButtonProps, ref) => {\n  const classes = `bg-green-500 border border-green-600 dark:border-green-500 dark:hover:border-green-500 dark:bg-green-500 dark:border-opacity-20 dark:bg-opacity-10  text-white hover:bg-green-600`;\n  const size = composer.getSize(props.size);\n  const opacity = composer.getOpacity(props.disabled);\n  const radius = composer.getRadius(props.size);\n  const composed = `${baseClasses} ${size} ${opacity} ${radius} ${classes}`;\n  //@ts-ignore\n  return <BaseButton forwardedRef={ref} className={composed} {...props} />;\n});\n\nexport const GhostButton = React.forwardRef((props: ButtonProps, ref) => {\n  const classes = `text-gray-700 hover:text-gray-1000 bg-gray-200 bg-opacity-0 hover:bg-opacity-100 dark:bg-gray-800 dark:text-gray-300 dark:hover:text-white`;\n  const size = composer.getSize(props.size);\n  const opacity = composer.getOpacity(props.disabled);\n  const radius = composer.getRadius(props.size);\n  const composed = `${baseClasses} ${size} ${opacity} ${radius} ${classes}`;\n  //@ts-ignore\n  return <BaseButton forwardedRef={ref} className={composed} {...props} />;\n});\n\nexport const CommentButton = React.forwardRef((props: ButtonProps, ref) => {\n  const classes = `${\n    props.disabled\n      ? \"text-gray-500 border-gray-400 bg-white dark:border-gray-700\"\n      : \"border-blue-600 bg-blue-500 dark:bg-opacity-100 text-white hover:bg-blue-600 dark:border-blue-400\"\n  } shadow-xs bg-white border border-opacity-30 dark:bg-opacity-10 hover:border-opacity-50 hover:shadow-sm w-8 rounded`;\n  const size = composer.getSize(props.size);\n  const opacity = composer.getOpacity(props.disabled);\n  const radius = composer.getRadius(props.size);\n  const composed = `${baseClasses} ${size} ${opacity} ${radius} ${classes}`;\n  //@ts-ignore\n  return <BaseButton className={composed} forwardedRef={ref} {...props} />;\n});\n\nexport const TwitterButton = React.forwardRef((props: ButtonProps, ref) => {\n  const classes = `bg-twitter text-white space-x-4 items-center`;\n  const size = composer.getSize(props.size);\n  const opacity = composer.getOpacity(props.disabled);\n  const radius = composer.getRadius(props.size);\n  const composed = `${baseClasses} ${size} ${opacity} ${radius} ${classes}`;\n  //@ts-ignore\n  return <BaseButton forwardedRef={ref} className={composed} {...props} />;\n});\n", "import * as React from 'react'\n\nexport function LoadingSpinner() {\n  return (\n    <svg\n      className=\"text-primary h-3.5 w-3.5 animate-spin\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n    >\n      <circle\n        className=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n      ></circle>\n      <path\n        className=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      ></path>\n    </svg>\n  )\n}\n", "import React from \"react\";\nimport { useOptionalUser } from \"~/utils\";\n\nimport { Detail } from \"../ListDetail/Detail\";\nimport { TitleBar } from \"../ListDetail/TitleBar\";\n\nexport function UserDetail() {\n  const scrollContainerRef = React.useRef(null);\n  const titleRef = React.useRef(null);\n  const user = useOptionalUser();\n\n  if (user) {\n    return (\n      <Detail.Container ref={scrollContainerRef}>\n        <TitleBar\n          magicTitle\n          title={user.name || user.email}\n          titleRef={titleRef}\n          scrollContainerRef={scrollContainerRef}\n        />\n\n        <Detail.ContentContainer>\n          <Detail.Header>\n            <Detail.Title ref={titleRef}>Profiles are coming soon</Detail.Title>\n            <p className=\"text-tertiary text-xl\">\n              Check back in the future to see questions, comments, and more...\n            </p>\n          </Detail.Header>\n        </Detail.ContentContainer>\n      </Detail.Container>\n    );\n  }\n\n  return null;\n}\n", "import * as React from \"react\";\nimport { Compass } from \"react-feather\";\n\nimport Button from \"../Button\";\nimport { LoadingSpinner } from \"../LoadingSpinner\";\nimport { TitleBar } from \"./TitleBar\";\n\nfunction ContentContainer(\n  props: JSX.IntrinsicAttributes &\n    React.ClassAttributes<HTMLDivElement> &\n    React.HTMLAttributes<HTMLDivElement>\n) {\n  return (\n    <div\n      className=\"mx-auto w-full max-w-3xl px-4 py-12 pb-10 md:px-8\"\n      {...props}\n    />\n  );\n}\n\ninterface DetailContainerProps {\n  children: React.ReactNode;\n}\n\n// eslint-disable-next-line react/display-name\nconst Container = React.forwardRef<HTMLDivElement, DetailContainerProps>(\n  (props, ref) => {\n    return (\n      <div\n        ref={ref}\n        id=\"main\"\n        className=\"relative flex max-h-screen w-full flex-col overflow-y-auto bg-white dark:bg-black\"\n        {...props}\n      />\n    );\n  }\n);\n\nfunction Header(\n  props: JSX.IntrinsicAttributes &\n    React.ClassAttributes<HTMLDivElement> &\n    React.HTMLAttributes<HTMLDivElement>\n) {\n  return <div className=\"space-y-3\" {...props} />;\n}\n\ninterface TitleProps {\n  children: React.ReactNode;\n}\n\n// eslint-disable-next-line react/display-name\nconst Title = React.forwardRef<HTMLHeadingElement, TitleProps>((props, ref) => {\n  return (\n    <h1\n      ref={ref}\n      className=\"text-primary font-sans text-2xl font-bold xl:text-3xl\"\n      {...props}\n    />\n  );\n});\n\nfunction Loading() {\n  return (\n    <Container>\n      <div className=\"flex flex-1 flex-col items-center justify-center\">\n        <LoadingSpinner />\n      </div>\n    </Container>\n  );\n}\n\nfunction Null() {\n  return (\n    <Container>\n      <TitleBar title=\"Not found\" />\n      <div className=\"flex flex-1 flex-col items-center justify-center space-y-6 px-8 text-center lg:px-16\">\n        <Compass className=\"text-secondary\" size={32} />\n        <div className=\"flex flex-col space-y-1\">\n          <p className=\"text-primary font-semibold\">\n            What you seek does not exist.\n          </p>\n          <p className=\"text-tertiary\">\n            Maybe this link is broken. Maybe something was deleted, or moved. In\n            any case, there\u2019s nothing to see here...\n          </p>\n        </div>\n        <Button href=\"/\">Go home</Button>\n      </div>\n    </Container>\n  );\n}\n\nexport const Detail = {\n  Container,\n  ContentContainer,\n  Header,\n  Title,\n  Loading,\n  Null,\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useActionData } from \"@remix-run/react\";\nimport { ListDetailView, SiteLayout } from \"~/components/Layouts\";\nimport { Detail } from \"~/components/ListDetail/Detail\";\n// import { withProviders } from '~/components/Providers/withProviders'\nimport { PostEditor } from \"~/components/Writing/Editor/PostEditor\";\nimport { trimBodyToExcerpt, useOptionalUser } from \"~/utils\";\nimport { z } from \"zod\";\n\nimport type { LoaderContext } from \"~/types\";\nimport slugify from \"slugify\";\n\ntype ActionData = {\n  errors?: {\n    title?: string;\n    body?: string;\n  };\n};\n\nconst FormDataSchema = z.object({\n  title: z.string().min(1),\n  body: z.string().min(1),\n});\n\nexport const action: ActionFunction = async ({ request, context }) => {\n  const { SessionServer, PostServer } = context as LoaderContext;\n\n  const parent = await SessionServer.requireUserId(request);\n\n  const formData = await request.formData();\n\n  const parsed = FormDataSchema.safeParse({\n    title: formData.get(\"title\") ?? null,\n    body: formData.get(\"body\") ?? null,\n  });\n\n  if (!parsed.success) {\n    const errors = parsed.error.format();\n    return json<ActionData>(\n      {\n        errors: {\n          title: errors.title?._errors.join(\". \"),\n          body: errors.body?._errors.join(\". \"),\n        },\n      },\n      { status: 400 }\n    );\n  }\n\n  const { title, body } = parsed.data;\n\n  let slug = slugify(title);\n  let excerpt = trimBodyToExcerpt(body);\n\n  const post = await PostServer.createPost({\n    title,\n    body,\n    parent,\n    slug,\n    excerpt,\n    publishedAt: new Date().toLocaleDateString(),\n    status: \"published\",\n  });\n\n  console.log(\"full post\", post);\n\n  return redirect(`/writing/${post.id}`);\n};\n\nfunction NewPostPage() {\n  const actionData = useActionData() as ActionData;\n  const user = useOptionalUser();\n  if (!user?.isAdmin) return <Detail.Null />;\n  return (\n    <SiteLayout>\n      <ListDetailView\n        list={null}\n        hasDetail={false}\n        detail={<PostEditor data={null} {...actionData} />}\n      />\n    </SiteLayout>\n  );\n}\n\nexport default NewPostPage;\n", "import * as React from \"react\";\nimport AddPostForm from \"~/components/Forms/AddPostForm\";\nimport type { Post } from \"~/services/models/post\";\n\nimport { Detail } from \"../../ListDetail/Detail\";\nimport { TitleBar } from \"../../ListDetail/TitleBar\";\nimport { PostEditorActions } from \"./PostEditorActions\";\nimport { PostEditorComposer } from \"./PostEditorComposer\";\nimport { PostEditorMetaSidebar } from \"./PostEditorMetaSidebar\";\nimport { PostEditorPreview } from \"./PostEditorPreview\";\nimport { PreviewSwitch } from \"./PreviewSwitch\";\n// import { getPostBySlug } from \"~/services/post.server\";\n\ninterface PostEditorData {\n  data: {\n    post: Post;\n  } | null;\n}\n\ninterface PostEditorActionData {\n  errors?: {\n    title?: string;\n    body?: string;\n    slug?: string;\n    excerpt?: string;\n    status?: string;\n  };\n}\n\ninterface PostEditorContextState {\n  draftState: {\n    title: string;\n    body: string;\n    slug: string;\n    excerpt: string;\n  };\n  setDraftState: (draftobj: any) => void;\n  existingPost?: Post | null;\n  sidebarIsOpen: boolean;\n  setSidebarIsOpen: (isOpen: boolean) => void;\n  isPreviewing: boolean;\n  setIsPreviewing: (isPreviewing: boolean) => void;\n}\n\nexport const PostEditorContext = React.createContext<PostEditorContextState>({\n  draftState: {\n    title: \"\",\n    body: \"\",\n    slug: \"\",\n    excerpt: \"\",\n  },\n  setDraftState: (draftObj: unknown) => {},\n  existingPost: null,\n  sidebarIsOpen: false,\n  setSidebarIsOpen: (isOpen: boolean) => {},\n  isPreviewing: false,\n  setIsPreviewing: (isPreviewing: boolean) => {},\n});\n\nexport function PostEditor(\n  { data }: PostEditorData,\n  actionData: PostEditorActionData\n) {\n  const scrollContainerRef = React.useRef(null);\n\n  const editOrCreatPost = data === null ? \"Add Post\" : \"Edit Post\";\n  const formData = {\n    method: \"post\",\n    action: \"/new-post\",\n  };\n\n  const defaultDraftState = {\n    title: data?.post?.title || \"\",\n    body: data?.post?.body || \"\",\n    slug: data?.post?.slug || \"\",\n    excerpt: data?.post?.excerpt || \"\",\n  };\n\n  const [draftState, setDraftState] = React.useState<any>(defaultDraftState);\n  const [isPreviewing, setIsPreviewing] = React.useState(false);\n\n  const existingPost = data?.post;\n  const [sidebarIsOpen, setSidebarIsOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    // if navigating between drafts, reset the state each time with the correct\n    // post data\n    setDraftState(defaultDraftState);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data?.post.slug]);\n\n  const defaultContextValue = {\n    existingPost,\n    draftState,\n    setDraftState,\n    sidebarIsOpen,\n    setSidebarIsOpen,\n    isPreviewing,\n    setIsPreviewing,\n  };\n\n  return (\n    <PostEditorContext.Provider value={defaultContextValue}>\n      <Detail.Container ref={scrollContainerRef}>\n        <AddPostForm>\n          <TitleBar\n            backButton\n            globalMenu={false}\n            backButtonHref={\"/writing\"}\n            scrollContainerRef={scrollContainerRef}\n            title=\"\"\n            trailingAccessory={<PostEditorActions />}\n            leadingAccessory={<PreviewSwitch />}\n          />\n\n          {isPreviewing ? (\n            <PostEditorPreview />\n          ) : (\n            <PostEditorComposer data={editOrCreatPost} {...actionData} />\n          )}\n        </AddPostForm>\n      </Detail.Container>\n      <PostEditorMetaSidebar formData={formData} {...actionData} />\n    </PostEditorContext.Provider>\n  );\n}\n", "import { Form } from \"@remix-run/react\";\n\nexport default function AddPostForm({ children }: any) {\n  return (\n    <Form method=\"post\" action=\"/new-post\">\n      {children}\n    </Form>\n  );\n}\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useLocation, useTransition } from \"@remix-run/react\";\nimport { equals, includes } from \"ramda\";\nimport * as React from \"react\";\nimport { Sidebar } from \"react-feather\";\n\nimport Button from \"../../Button\";\nimport { LoadingSpinner } from \"../../LoadingSpinner\";\nimport { PostEditorContext } from \"./PostEditor\";\n\nexport function PostEditorActions() {\n  const transition = useTransition();\n  const location = useLocation();\n  const context = React.useContext(PostEditorContext);\n  const {\n    draftState,\n    existingPost,\n    sidebarIsOpen,\n    setSidebarIsOpen,\n    isPreviewing,\n    setIsPreviewing,\n  } = context;\n\n  const loading = transition.state === \"loading\";\n\n  let isAdding =\n    transition.state === \"submitting\" &&\n    transition.submission.formData.get(\"_action\") === \"new_post\";\n\n  // This relies on /edit-post or /new-post actions\n  const handleEditOrCreate = existingPost?.id\n    ? `/writing/${existingPost.id}/edit`\n    : \"/new-post\";\n  const postButtonActions = equals(\"/new-post\", location.pathname)\n    ? \"new_post\"\n    : includes(\"edit\", location.pathname)\n    ? \"edit_post\"\n    : null;\n\n  const isSavingDraft = loading;\n\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <Button\n        disabled={isSavingDraft}\n        name=\"_action\"\n        value=\"/new_post\"\n        as=\"/new_post\"\n        type=\"submit\"\n      >\n        {isSavingDraft ? (\n          <LoadingSpinner />\n        ) : (\n          <>\n            <span>{existingPost?.publishedAt ? \"Update\" : \"Publish\"}</span>\n          </>\n        )}\n      </Button>\n      <Button onClick={() => setSidebarIsOpen(!sidebarIsOpen)}>\n        <Sidebar size={16} />\n      </Button>\n    </div>\n  );\n}\n", "import * as React from \"react\";\n\nimport { Dropzone } from \"../../Dropzone\";\nimport { Textarea } from \"../../Input\";\nimport { Detail } from \"../../ListDetail/Detail\";\nimport { PostEditorContext } from \"./PostEditor\";\n\ninterface EditOrAddPost {\n  data: \"Add Post\" | \"Edit Post\";\n}\n\ninterface ActionData {\n  errors?: {\n    title?: string;\n    body?: string;\n    slug?: string;\n    excerpt?: string;\n    status?: string;\n  };\n}\n\nexport function PostEditorComposer({ data }: EditOrAddPost, actionData: ActionData) {\n  const context = React.useContext(PostEditorContext);\n  const { draftState, setDraftState } = context;\n  const titleRef = React.useRef<HTMLInputElement>(null);\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\n  const uploadingImagePlaceholder = \"![](Uploading...)\";\n\n  function handleTitleChange(e: { target: { value: any } }) {\n    setDraftState((draft: any) => ({ ...draft, title: e.target.value }));\n  }\n\n  function handleTextBodyChange(e: { target: { value: any } }) {\n    setDraftState((draft: any) => ({ ...draft, body: e.target.value }));\n  }\n\n  function onUploadComplete(url: any) {\n    const image = `![](${url})`;\n    setDraftState((draft: { text: string }) => ({\n      ...draft,\n      text: draft.text.replace(uploadingImagePlaceholder, image),\n    }));\n  }\n\n  function onUploadFailed() {\n    setDraftState((draft: { text: string }) => ({\n      ...draft,\n      text: draft.text.replace(uploadingImagePlaceholder, \"\"),\n    }));\n  }\n\n  function onUploadStarted() {\n    setDraftState((draft: { text: string }) => ({\n      ...draft,\n      text: (draft.text += uploadingImagePlaceholder),\n    }));\n  }\n\n  return (\n    <Dropzone\n      onUploadStarted={onUploadStarted}\n      onUploadComplete={onUploadComplete}\n      onUploadFailed={onUploadFailed}\n    >\n      <Detail.ContentContainer>\n        <Detail.Header>\n          <Textarea\n            rows={1}\n            name=\"title\"\n            ref={titleRef}\n            value={draftState.title}\n            onChange={handleTitleChange}\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n            aria-errormessage={actionData?.errors?.title ? \"title-error\" : undefined}\n            placeholder={\"Post title\"}\n            className=\"composer text-primary block w-full resize-none border-none p-0 text-2xl font-bold focus:border-0 focus:outline-none focus:ring-0 dark:bg-black md:text-3xl\"\n          />\n          {actionData?.errors?.title && (\n            <div className=\"pt-1 text-red-700\" id=\"title-error\">\n              {actionData.errors.title}\n            </div>\n          )}\n          <Textarea\n            rows={20}\n            maxRows={2000}\n            name=\"body\"\n            ref={bodyRef}\n            value={draftState.body}\n            onChange={handleTextBodyChange}\n            aria-invalid={actionData?.errors?.body ? true : undefined}\n            aria-errormessage={actionData?.errors?.body ? \"body-error\" : undefined}\n            placeholder={\"Write a post...\"}\n            className=\"composer text-primary prose block w-full resize-none border-none p-0 pt-5 text-lg font-normal focus:border-0 focus:outline-none focus:ring-0 dark:bg-black\"\n          />\n          {actionData?.errors?.body && (\n            <div className=\"pt-1 text-red-700\" id=\"body-error\">\n              {actionData.errors.body}\n            </div>\n          )}\n        </Detail.Header>\n      </Detail.ContentContainer>\n    </Dropzone>\n  );\n}\n", "import React from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { ActiveDropzone } from \"./ActiveDropzone\";\n\ninterface DropzoneProps {\n  children: React.ReactNode;\n  onUploadStarted: () => void;\n  onUploadComplete: (url?: string) => void;\n  onUploadFailed: () => void;\n}\n\nexport function Dropzone(props: DropzoneProps) {\n  const { children, onUploadComplete, onUploadStarted, onUploadFailed } = props;\n\n  async function getSignedUrl() {\n    const data = await fetch(\"/api/images/sign\").then((res) => res.json());\n    return data?.uploadURL;\n  }\n\n  async function uploadFile({ file, signedUrl }: any) {\n    const data = new FormData();\n    data.append(\"file\", file);\n    const upload = await fetch(signedUrl, {\n      method: \"POST\",\n      body: data,\n    }).then((r) => r.json());\n    return upload?.result?.id;\n  }\n\n  const onDropAccepted = React.useCallback(async (acceptedFiles: File[]) => {\n    onUploadStarted();\n\n    const file = acceptedFiles[0];\n    const signedUrl = await getSignedUrl();\n\n    if (!signedUrl) {\n      onUploadFailed();\n      return console.error(\"No signed url\");\n    }\n\n    const id = await uploadFile({ file, signedUrl });\n    if (!id) {\n      onUploadFailed();\n      return console.error(\"Upload failed\");\n    }\n\n    const url = \"\"; // This is where I would like to do all of the hyper.storage.update or hyper.storage.download-ing\n    return onUploadComplete(url);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function onDropRejected() {\n    alert(\"File rejected\");\n  }\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDropAccepted,\n    onDropRejected,\n    noKeyboard: true,\n    multiple: false,\n    noClick: true,\n    maxSize: 1000 * 1000 * 3, // 3mb\n    accept: [\"image/jpeg\", \"image/png\", \"image/gif\"],\n  });\n\n  return (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? <ActiveDropzone /> : children}\n    </div>\n  );\n}\n", "import { Upload } from \"react-feather\";\n\nexport function ActiveDropzone() {\n  return (\n    <div className=\"filter-blur absolute inset-0 z-30 flex h-full w-full items-center justify-center bg-gray-200 bg-opacity-30 p-6\">\n      <div className=\"filter-blur flex h-full w-full flex-1 flex-col items-center justify-center space-y-6 rounded-xl border border-dashed border-gray-200 bg-white bg-opacity-80 px-8 text-center lg:px-16\">\n        <Upload className=\"text-secondary\" size={32} />\n        <div className=\"flex flex-col space-y-1\">\n          <p className=\"text-primary font-semibold\">Drop a file here...</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import * as React from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nconst styles =\n  \"w-full rounded-md text-primary px-4 py-2 text-primary bg-gray-1000 dark:bg-white dark:bg-opacity-5 bg-opacity-5 hover border-gray-200 dark:border-gray-700\";\n\nexport function Input(\n  props: JSX.IntrinsicAttributes &\n    React.ClassAttributes<HTMLInputElement> &\n    React.InputHTMLAttributes<HTMLInputElement>\n) {\n  return <input className={styles} {...props} />;\n}\n\nexport function Textarea({ maxRows = 8, rows = 1, ...props }) {\n  return (\n    <TextareaAutosize maxRows={maxRows} minRows={rows} className={`${styles} block`} {...props} />\n  );\n}\n\nexport function Select(\n  props: JSX.IntrinsicAttributes &\n    React.ClassAttributes<HTMLSelectElement> &\n    React.SelectHTMLAttributes<HTMLSelectElement>\n) {\n  return <select className={styles} {...props} />;\n}\n", "import { Form, useLocation, useTransition } from \"@remix-run/react\";\nimport { equals, includes } from \"ramda\";\nimport * as React from \"react\";\nimport { X } from \"react-feather\";\nimport SegmentedControl from \"~/components/SegmentedController\";\n\nimport Button, { GhostButton, PrimaryButton } from \"../../Button\";\nimport { Input, Textarea } from \"../../Input\";\nimport { TitleBar } from \"../../ListDetail/TitleBar\";\nimport { LoadingSpinner } from \"../../LoadingSpinner\";\nimport { WritingContext } from \"../PostsList\";\nimport { PostEditorContext } from \"./PostEditor\";\n\ninterface ActionData {\n  errors?: {\n    title?: string;\n    body?: string;\n    slug?: string;\n    excerpt?: string;\n    status?: string;\n  };\n}\n\ninterface SidebarFormData {\n  formData: {\n    method: string;\n    action: string;\n  };\n}\n\nexport function PostEditorMetaSidebar(\n  { formData }: SidebarFormData,\n  actionData: ActionData\n) {\n  const transition = useTransition();\n  const location = useLocation();\n  const context = React.useContext(PostEditorContext);\n  const {\n    draftState,\n    existingPost,\n    setDraftState,\n    sidebarIsOpen,\n    setSidebarIsOpen,\n  } = context;\n  const { setFilter, filter } = React.useContext(WritingContext);\n  const scrollContainerRef = React.useRef(null);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const filterRef = React.useRef(null);\n\n  const editingPost = location.pathname === `/writing/${existingPost?.id}/edit`;\n\n  let isAdding =\n    transition.state === \"submitting\" &&\n    transition.submission.formData.get(\"_action\") === \"new_post\";\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const postButtonActions = equals(\"/new-post\", location.pathname)\n    ? \"new_post\"\n    : includes(\"edit\", location.pathname)\n    ? \"edit_post\"\n    : null;\n\n  function handleSlugChange(e: { target: { value: any } }) {\n    return setDraftState((draft: any) => ({ ...draft, slug: e.target.value }));\n  }\n\n  function handleExcerptChange(e: { target: { value: any } }) {\n    return setDraftState((draft: any) => ({\n      ...draft,\n      excerpt: e.target.value,\n    }));\n  }\n\n  return (\n    <>\n      <nav\n        ref={scrollContainerRef}\n        className={`${\n          sidebarIsOpen\n            ? \"absolute inset-y-0 right-0 translate-x-0 shadow-lg\"\n            : \"absolute right-0 translate-x-full\"\n        } 3xl:w-80 z-30 flex h-full max-h-screen min-h-screen w-3/4 flex-none transform flex-col overflow-y-auto border-l border-gray-150 bg-white pb-10 transition duration-200 ease-in-out dark:border-gray-800 dark:bg-gray-900 sm:w-1/2 sm:pb-0 md:w-1/3 lg:w-56 2xl:w-72`}\n      >\n        <TitleBar\n          scrollContainerRef={scrollContainerRef}\n          leadingAccessory={null}\n          trailingAccessory={\n            <GhostButton size=\"small-square\" aria-label=\"Close details\">\n              <X size={16} onClick={() => setSidebarIsOpen(false)} />\n            </GhostButton>\n          }\n          globalMenu={false}\n          title=\"Details\"\n        />\n        <Form method=\"post\" action=\"/new-post\">\n          <div className=\"flex-1 space-y-4 px-3 py-3\">\n            <div className=\"flex flex-col space-y-1\">\n              <p className=\"text-primary text-sm font-semibold\">Slug</p>\n              <Input\n                name=\"slug\"\n                placeholder=\"Slug\"\n                value={draftState.slug}\n                onChange={handleSlugChange}\n              />\n            </div>\n\n            <div className=\"flex flex-col space-y-1\">\n              <p className=\"text-primary text-sm font-semibold\">Excerpt</p>\n              <Textarea\n                name=\"excerpt\"\n                value={draftState.excerpt}\n                placeholder=\"Excerpt\"\n                rows={8}\n                maxRows={8}\n                onChange={handleExcerptChange}\n              />\n            </div>\n            <div className=\"pt-2 pb-1\">\n              <SegmentedControl\n                onSetActiveItem={setFilter}\n                active={filter}\n                items={[\n                  { id: \"published\", label: \"Published\" },\n                  { id: \"draft\", label: \"Draft\" },\n                ]}\n              />\n            </div>\n          </div>\n\n          <div className=\"filter-blur sticky bottom-0 z-10 flex items-center justify-between space-x-3 border-t border-gray-150 bg-white bg-opacity-80 p-2 dark:border-gray-800 dark:bg-gray-900 dark:bg-opacity-60\">\n            {!existingPost?.id && !existingPost?.publishedAt && (\n              <PrimaryButton\n                style={{ width: \"100%\" }}\n                disabled={editingPost || isAdding}\n                name=\"_action\"\n                value=\"new_post\"\n                as=\"new_post\"\n              >\n                {editingPost ? <LoadingSpinner /> : \"Publish\"}\n              </PrimaryButton>\n            )}\n            {existingPost?.id && existingPost?.publishedAt && (\n              <Button style={{ width: \"100%\" }} disabled={editingPost}>\n                {editingPost ? <LoadingSpinner /> : \"Unpublish\"}\n              </Button>\n            )}\n          </div>\n        </Form>\n      </nav>\n\n      <div\n        className={`fixed inset-0 z-20 bg-black bg-opacity-5 transition duration-200 ease-in-out dark:bg-opacity-50 ${\n          sidebarIsOpen\n            ? \"pointer-events-auto opacity-100\"\n            : \"pointer-events-none opacity-0\"\n        }`}\n        onClick={() => setSidebarIsOpen(false)}\n      />\n    </>\n  );\n}\n", "// learned from https://samuelkraft.com/blog/segmented-control-framer-motion\nimport { AnimateSharedLayout, motion } from \"framer-motion\";\nimport { useState } from \"react\";\n\ntype Item = {\n  id: string;\n  label: string;\n};\n\ntype SegmentedControlProps = {\n  onSetActiveItem: Function;\n  items: Array<Item>;\n  active: String;\n};\n\nconst SegmentedControl = ({\n  onSetActiveItem,\n  items,\n  active,\n}: SegmentedControlProps): JSX.Element => {\n  const [activeItem, setActiveitem] = useState(active);\n\n  function onChange(i: number) {\n    setActiveitem(items[i].id);\n    onSetActiveItem(items[i].id);\n  }\n\n  return (\n    //@ts-ignore\n    <AnimateSharedLayout>\n      <ol\n        className={`flex list-none rounded-md bg-black bg-opacity-5 p-1 dark:bg-white dark:bg-opacity-5`}\n      >\n        {items.map((item, i) => {\n          const isActive = items[i].id === activeItem;\n          const statusInput = items[i].id === activeItem ? `${items[i].id}` : undefined; // should never be undefined\n          return (\n            <motion.li\n              className=\"relative flex-1 leading-none\"\n              whileTap={isActive ? { scale: 0.95 } : { opacity: 0.6 }}\n              key={item.id}\n            >\n              <input type=\"hidden\" name=\"status\" value={statusInput} />\n              <button\n                onClick={() => onChange(i)}\n                type=\"button\"\n                className={`relative w-full cursor-pointer bg-transparent px-4 py-1.5 text-xs font-semibold leading-none ${\n                  isActive\n                    ? `text-black text-opacity-100 dark:text-white`\n                    : `text-black text-opacity-60 hover:text-opacity-100 dark:text-white`\n                }`}\n              >\n                {isActive && (\n                  <motion.div\n                    layoutId=\"SegmentedControlActive\"\n                    className=\"z-1 absolute top-0 bottom-0 left-0 right-0 rounded bg-white shadow-sm content-none dark:bg-gray-700\"\n                  />\n                )}\n                <span className=\"z-2 relative\">{item.label}</span>\n              </button>\n            </motion.li>\n          );\n        })}\n      </ol>\n    </AnimateSharedLayout>\n  );\n};\n\nexport default SegmentedControl;\n", "import * as React from \"react\";\nimport type { Post } from \"~/services/models/post\";\nimport { usePostMatchesData } from \"~/utils\";\n\nimport { ListContainer } from \"../ListDetail/ListContainer\";\nimport { LoadingSpinner } from \"../LoadingSpinner\";\nimport { PostListItem } from \"./PostListItem\";\nimport { WritingTitlebar } from \"./WritingTitlebar\";\n\nexport const WritingContext = React.createContext({\n  filter: \"published\",\n  setFilter: (filter: string) => {},\n});\n\nexport function PostsList() {\n  const data = usePostMatchesData();\n  const [filter, setFilter] = React.useState(\"published\");\n  let [scrollContainerRef, setScrollContainerRef] = React.useState(null);\n  let slug: any;\n\n  if (!data) {\n    return (\n      <ListContainer onRef={setScrollContainerRef}>\n        <WritingTitlebar scrollContainerRef={scrollContainerRef} />\n        <div className=\"flex flex-1 items-center justify-center\">\n          <LoadingSpinner />\n        </div>\n      </ListContainer>\n    );\n  }\n\n  const defaultContextValue = {\n    filter,\n    setFilter,\n  };\n\n  return (\n    <WritingContext.Provider value={defaultContextValue}>\n      <ListContainer data-cy=\"posts-list\" onRef={setScrollContainerRef}>\n        <WritingTitlebar scrollContainerRef={scrollContainerRef} />\n\n        <div className=\"lg:space-y-1 lg:p-3\">\n          {data.map((post: Post) => {\n            const active = slug === post.slug; // use url query params or params?.slug\n\n            return <PostListItem key={post.id} post={post} active={active} />;\n          })}\n        </div>\n      </ListContainer>\n    </WritingContext.Provider>\n  );\n}\n", "import * as React from \"react\";\n\nexport function ListContainer({ children, onRef, ...rest }: any) {\n  const scrollContainerRef = React.useRef(null);\n\n  React.useEffect(() => {\n    onRef(scrollContainerRef);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scrollContainerRef]);\n\n  return (\n    <div\n      ref={scrollContainerRef}\n      className=\"relative h-full max-h-screen min-h-screen w-full flex-none overflow-y-auto border-r border-gray-150 bg-white dark:border-gray-800 dark:bg-gray-900 lg:w-80 lg:bg-gray-50 lg:dark:bg-gray-900 xl:w-96\"\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n}\n", "/* eslint-disable react/display-name */\nimport * as React from \"react\";\n\nimport type { Post } from \"~/services/models/post\";\nimport { timestampToCleanTime } from \"../../../lib/transformers\";\nimport { ListItem } from \"../ListDetail/ListItem\";\n\ninterface Props {\n  post: Post;\n  active: boolean;\n}\n\nexport const PostListItem = React.memo<Props>(({ post, active }) => {\n  const publishedAt = timestampToCleanTime({ timestamp: post.publishedAt });\n  return (\n    <ListItem\n      key={post.id}\n      href={`/writing/${post.id}`}\n      title={post.title}\n      byline={post.publishedAt ? publishedAt.formatted : \"Draft\"}\n      active={active}\n    />\n  );\n});\n", "type Props = {\n  timestamp?: number | string | null;\n  locale?: string;\n  year?: \"numeric\" | \"2-digit\";\n  month?: \"numeric\" | \"2-digit\" | \"long\" | \"short\" | \"narrow\";\n  day?: \"numeric\" | \"2-digit\";\n};\n\nexport function timestampToCleanTime({\n  timestamp = null,\n  locale = \"en-us\",\n  year = \"numeric\",\n  month = \"long\",\n  day = \"numeric\",\n}: Props) {\n  const date = timestamp ? new Date(timestamp) : new Date();\n\n  const formatted = date.toLocaleDateString(locale, {\n    year,\n    month,\n    day,\n  });\n\n  const raw = date.toISOString();\n\n  return {\n    formatted,\n    raw,\n  };\n}\n", "import { Link } from \"@remix-run/react\";\nimport * as React from \"react\";\n\ninterface Props {\n  title: string;\n  active: boolean;\n  href: string;\n  as?: string;\n  description?: string | React.ReactElement;\n  byline?: string | React.ReactElement;\n  leadingAccessory?: React.ReactElement;\n  onClick?: (e: any) => void;\n}\n\nexport function ListItem({\n  title,\n  description,\n  byline,\n  href,\n  as,\n  active,\n  leadingAccessory,\n  onClick,\n}: Props) {\n  return (\n    <Link to={href}>\n      <span\n        onClick={onClick && onClick}\n        className={`flex space-x-3 border-b border-gray-100 py-3 px-3.5 text-sm dark:border-gray-900 lg:rounded-lg lg:border-none lg:py-2 ${\n          active\n            ? \"bg-black dark:bg-gray-700\"\n            : \"sm:hover:bg-gray-200 sm:dark:hover:bg-gray-800\"\n        }`}\n      >\n        {leadingAccessory && <>{leadingAccessory}</>}\n        <div className=\"flex flex-col justify-center space-y-1\">\n          <div\n            className={`font-medium line-clamp-3 ${\n              active ? \"text-white\" : \"text-gray-1000 dark:text-gray-100\"\n            }`}\n          >\n            {title}\n          </div>\n          {description && (\n            <div\n              className={`line-clamp-2 ${\n                active\n                  ? \"text-white text-opacity-80\"\n                  : \"text-gray-1000 text-opacity-60 dark:text-white\"\n              }`}\n            >\n              {description}\n            </div>\n          )}\n          {byline && (\n            <div\n              className={`line-clamp-1 ${\n                active\n                  ? \"text-white text-opacity-60\"\n                  : \"text-gray-1000 text-opacity-40 dark:text-white dark:text-opacity-60\"\n              }`}\n            >\n              {byline}\n            </div>\n          )}\n        </div>\n      </span>\n    </Link>\n  );\n}\n", "import * as React from \"react\";\nimport { Plus, Radio } from \"react-feather\";\nimport { useOptionalUser } from \"~/utils\";\n\nimport Button, { GhostButton } from \"../Button\";\nimport { DialogComponent } from \"../Dialog\";\nimport { TitleBar } from \"../ListDetail/TitleBar\";\nimport SegmentedControl from \"../SegmentedController\";\nimport { WritingContext } from \"./PostsList\";\nimport { WritingSubscriptionForm } from \"./SubscriptionForm\";\n\nexport function WritingTitlebar({ scrollContainerRef }: any) {\n  const user = useOptionalUser();\n  const isAdmin = user?.role === \"ADMIN\";\n\n  function getAddButton() {\n    if (isAdmin) {\n      return (\n        <GhostButton\n          href=\"/new-post\"\n          data-cy=\"new-post-button\"\n          size=\"small-square\"\n          aria-label=\"Add post\"\n        >\n          <Plus size={16} />\n        </GhostButton>\n      );\n    }\n    return null;\n  }\n\n  function getSubscribeButton() {\n    if (isAdmin) return null;\n    return (\n      <DialogComponent\n        title=\"Newsletter\"\n        trigger={\n          <Button data-cy=\"open-subscribe-hn-dialog\" size=\"small\">\n            <Radio size={16} />\n            <span>Subscribe</span>\n          </Button>\n        }\n        modalContent={() => <WritingSubscriptionForm />}\n      />\n    );\n  }\n\n  function trailingAccessory() {\n    return (\n      <div className=\"flex space-x-2\">\n        {getSubscribeButton()}\n        {getAddButton()}\n      </div>\n    );\n  }\n\n  function getChildren() {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { setFilter, filter } = React.useContext(WritingContext);\n    if (isAdmin) {\n      return (\n        <div className=\"pt-2 pb-1\">\n          <SegmentedControl\n            onSetActiveItem={setFilter}\n            active={filter}\n            items={[\n              { id: \"published\", label: \"Published\" },\n              { id: \"draft\", label: \"Drafts\" },\n            ]}\n          />\n        </div>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <TitleBar\n      trailingAccessory={trailingAccessory()}\n      title=\"Writing\"\n      scrollContainerRef={scrollContainerRef}\n    >\n      {getChildren()}\n    </TitleBar>\n  );\n}\n", "import { Dialog, Transition } from \"@headlessui/react\";\nimport * as React from \"react\";\nimport { Fragment, useState } from \"react\";\nimport { X } from \"react-feather\";\n\nimport { GhostButton } from \"../Button\";\n\ninterface DialogProps {\n  trigger?: React.ReactElement | null;\n  children?: Function | null;\n  title: String;\n  modalContent: Function;\n}\n\nexport function DialogComponent({\n  trigger = null,\n  children = null,\n  title,\n  modalContent,\n}: DialogProps) {\n  let [isOpen, setIsOpen] = useState(false);\n  let closeButtonRef = React.useRef(null);\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  return (\n    <>\n      {trigger && <div onClick={openModal}>{trigger}</div>}\n\n      {/* \n        Rendering children as a function here allows us to\n        wrap any component in a dialog handler, while still rendering\n        that component. For example, we can wrap the CommentForm component\n        in a dialog, render the comment form itself, but pass it the SignIn\n        dialog's openModal and closeModal handlers. Those handlers can then\n        be invoked programatically in the CommentForm if a user tries to\n        send a comment without being signed in.  \n      */}\n      {children && children({ closeModal, openModal })}\n\n      <Transition appear show={isOpen} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"fixed inset-0 z-10 overflow-y-auto\"\n          onClose={closeModal}\n          initialFocus={closeButtonRef}\n        >\n          <div className=\"min-h-screen px-4\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-100\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0 bg-black bg-opacity-50\" />\n            </Transition.Child>\n\n            <Transition.Child\n              as={\"div\"}\n              enter=\"ease-out duration-100\"\n              enterFrom=\"opacity-0 scale-30\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-100\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <div className=\"fixed bottom-0 left-0 max-h-screen w-full transform-gpu overflow-y-auto rounded-t-xl border border-gray-200 bg-white pb-10 shadow-sm dark:border-gray-700 dark:bg-gray-800 dark:shadow-2xl sm:bottom-auto sm:top-1/4 sm:left-1/2 sm:max-w-sm sm:-translate-x-1/2 sm:rounded-xl sm:pb-0 md:max-w-md lg:max-w-lg\">\n                <div className=\"flex flex-col\">\n                  <div className=\"sticky top-0 flex w-full items-center justify-between border-b border-gray-150 bg-white py-2 pl-4 pr-2 dark:border-gray-700 dark:bg-gray-800\">\n                    <Dialog.Title as=\"h3\" className=\"text-primary text-left text-sm font-semibold\">\n                      {title}\n                    </Dialog.Title>\n                    <GhostButton\n                      aria-label=\"Close dialog\"\n                      size=\"small-square\"\n                      ref={closeButtonRef}\n                      onClick={closeModal}\n                    >\n                      <X size={16} />\n                    </GhostButton>\n                  </div>\n\n                  <div className=\"overflow-y-auto\">\n                    {/* \n                      A dialog must receive modal content to be rendered\n                      once the dialog is opened. That dialog content receives\n                      open and close handlers so that a dialog can be closed\n                      programatically. For example, after creating a bookmark\n                      we can close the dialog and then redirect the user\n                      to the new bookmark view.\n                    */}\n                    {modalContent({ closeModal, openModal })}\n                  </div>\n                </div>\n              </div>\n            </Transition.Child>\n          </div>\n        </Dialog>\n      </Transition>\n    </>\n  );\n}\n", "import * as React from \"react\";\n\nimport { ErrorAlert, SuccessAlert } from \"../Alert\";\nimport { PrimaryButton } from \"../Button\";\nimport { Input } from \"../Input\";\nimport { LoadingSpinner } from \"../LoadingSpinner\";\nimport { validEmail } from \"../../../lib/validators\";\n\nexport function WritingSubscriptionForm({ defaultValue = \"\" }) {\n  const [email, setEmail] = React.useState(defaultValue);\n  const [status, setStatus] = React.useState(\"default\");\n\n  function onChange(e: { target: { value: string } }) {\n    setStatus(\"default\");\n    return setEmail(e.target.value.trim());\n  }\n\n  async function submit(e: { preventDefault: () => void }) {\n    e.preventDefault();\n    setStatus(\"saving\");\n\n    if (!validEmail(email)) {\n      setStatus(\"saving\");\n      return setStatus(\"invalid-email\");\n    }\n\n    await fetch(`/api/newsletter`, {\n      method: \"POST\",\n      body: JSON.stringify({ email }),\n    }).then((res) => res.json());\n\n    setStatus(\"success\");\n  }\n\n  return (\n    <div className=\"space-y-4 p-4\">\n      <div className=\"flex flex-col space-y-4\">\n        <p className=\"text-tertiary\">\n          Get an email whenever I publish new posts. I also publish semi-regular newsletters\n          containing links to interesting articles about design, technology, and startups.\n        </p>\n        <form\n          data-cy=\"subscribe-hn-form\"\n          onSubmit={submit}\n          className=\"mt-2 grid grid-cols-1 gap-2 md:grid-cols-3\"\n        >\n          <label className=\"md:col-span-2\">\n            <span className=\"sr-only\">Email address</span>\n            <Input\n              value={email}\n              disabled={status === \"loading\"}\n              onChange={onChange}\n              placeholder=\"Email address\"\n              type=\"email\"\n              name=\"email\"\n            />\n          </label>\n          <PrimaryButton onClick={submit} disabled={status === \"saving\" || !email} type=\"submit\">\n            {status === \"saving\" ? <LoadingSpinner /> : \"Subscribe\"}\n          </PrimaryButton>\n        </form>\n        <p className=\"text-quaternary text-sm\">\n          Unsubscribe at any time. Powered by{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.getrevue.co/profile/brian_lovin\"\n            className=\"text-primary\"\n          >\n            Revue\n          </a>\n          .\n        </p>\n        {status === \"invalid-email\" && (\n          <ErrorAlert>That email doesn\u2019t look valid, try another?</ErrorAlert>\n        )}\n        {status === \"success\" && (\n          <SuccessAlert>A confirmation email was sent to {email} \u2014 go click the link!</SuccessAlert>\n        )}\n      </div>\n    </div>\n  );\n}\n", "export function ErrorAlert({ children }: any) {\n  return (\n    <div className=\"rounded-md bg-red-500 bg-opacity-10 px-4 py-3 text-sm text-red-700 dark:text-red-300\">\n      {children}\n    </div>\n  );\n}\n\nexport function SuccessAlert({ children }: any) {\n  return (\n    <div className=\"rounded-md bg-green-500 bg-opacity-10 px-4 py-3 text-sm text-green-700 dark:text-green-400\">\n      {children}\n    </div>\n  );\n}\n\nexport function WarnAlert({ children }: any) {\n  return (\n    <div className=\"rounded-md bg-yellow-500 bg-opacity-10 px-4 py-3 text-sm text-yellow-700 dark:text-yellow-400\">\n      {children}\n    </div>\n  );\n}\n", "export function validEmail(email: string) {\n  // eslint-disable-next-line\n  const re =\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nexport function validUsername(username: string) {\n  // eslint-disable-next-line\n  const re = /^(?=[a-zA-Z0-9_]{4,16}$)(?!.*[_.]{2})[^_.].*[^_.]$/;\n  return re.test(String(username));\n}\n\nexport function validUrl(string: string | URL) {\n  try {\n    new URL(string);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n", "import * as React from \"react\";\n\nimport { Detail } from \"../../ListDetail/Detail\";\nimport { MarkdownRenderer } from \"../../MarkdownRenderer\";\nimport { PostEditorContext } from \"./PostEditor\";\n\nexport function PostEditorPreview() {\n  const context = React.useContext(PostEditorContext);\n  const { draftState } = context;\n  const { title, body } = draftState;\n\n  return (\n    <Detail.ContentContainer>\n      <Detail.Header>\n        <Detail.Title>{title}</Detail.Title>\n      </Detail.Header>\n\n      <MarkdownRenderer children={body} className=\"prose mt-8\" />\n\n      {/* bottom padding to give space between post content and comments */}\n      <div className=\"py-6\" />\n    </Detail.ContentContainer>\n  );\n}\n", "/* eslint-disable jsx-a11y/anchor-has-content */\nimport deepmerge from \"deepmerge\";\nimport { Link } from \"@remix-run/react\";\nimport Markdown from \"react-markdown\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypeSanitize, { defaultSchema } from \"rehype-sanitize\";\nimport rehypeSlug from \"rehype-slug\";\nimport remarkGfm from \"remark-gfm\";\n//@ts-ignore\nimport linkifyRegex from \"remark-linkify-regex\";\n\nimport { CodeBlock } from \"./CodeBlock\";\n\nfunction LinkRenderer({ href, ...rest }: any) {\n  // auto-link headings\n  if (href.startsWith(\"#\")) {\n    return <a href={href} {...rest} />;\n  }\n\n  if (href.startsWith(\"@\")) {\n    // link to a mention\n    return (\n      <Link to={`/u/${href.slice(1)}`} {...rest}>\n        <a {...rest} />\n      </Link>\n    );\n  }\n  try {\n    const url = new URL(href);\n    if (url.origin === \"https://brianlovin.com\") {\n      return (\n        <Link to={href}>\n          <a {...rest} />\n        </Link>\n      );\n    }\n    return (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={href} {...rest} />\n    );\n  } catch (e) {\n    console.error(e);\n    return (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={href} {...rest} />\n    );\n  }\n}\n\nfunction getComponentsForVariant(variant: any) {\n  // Blog posts\n  switch (variant) {\n    case \"longform\": {\n      return {\n        a: LinkRenderer,\n        pre({ node, inline, className, children, ...props }: any) {\n          const language = /language-(\\w+)/.exec(className || \"\")?.[1];\n          return !inline && language ? (\n            <CodeBlock\n              text={String(children).replace(/\\n$/, \"\")}\n              language={language}\n              {...props}\n            />\n          ) : (\n            <>{children}</>\n          );\n        },\n        code({ node, inline, className, children, ...props }: any) {\n          const language = /language-(\\w+)/.exec(className || \"\")?.[1];\n          return !inline && language ? (\n            <CodeBlock\n              text={String(children).replace(/\\n$/, \"\")}\n              language={language}\n              {...props}\n            />\n          ) : (\n            <code className={className} {...props}>\n              {children}\n            </code>\n          );\n        },\n      };\n    }\n    // Questions, comments, descriptions on bookmarks, etc.\n    case \"comment\": {\n      return {\n        a: LinkRenderer,\n        h1: \"p\",\n        h2: \"p\",\n        h3: \"p\",\n        h4: \"p\",\n        h5: \"p\",\n        h6: \"p\",\n        pre({ children }: any) {\n          return <>{children}</>;\n        },\n        code({ node, inline, className, children, ...props }: any) {\n          const language = /language-(\\w+)/.exec(className || \"\")?.[1];\n          return !inline && language ? (\n            <CodeBlock\n              text={String(children).replace(/\\n$/, \"\")}\n              language={language}\n              {...props}\n            />\n          ) : (\n            <code className={className} {...props}>\n              {children}\n            </code>\n          );\n        },\n      };\n    }\n  }\n}\n\nexport function MarkdownRenderer(props: any) {\n  // variant = 'longform' | 'comment'\n  const { children, variant = \"longform\", ...rest } = props;\n\n  const schema = deepmerge(defaultSchema, {\n    //@ts-ignore\n    tagNames: [...defaultSchema.tagNames, \"sup\", \"sub\", \"section\"],\n    attributes: {\n      \"*\": [\"className\"],\n    },\n    clobberPrefix: \"\",\n    clobber: [\"name\", \"id\"],\n  });\n\n  const components = getComponentsForVariant(variant);\n\n  return (\n    <Markdown\n      {...rest}\n      remarkPlugins={[remarkGfm, linkifyRegex(/^(?!.*\\bRT\\b)(?:.+\\s)?@\\w+/i)]}\n      rehypePlugins={[\n        [rehypeSanitize, schema],\n        rehypeSlug,\n        [rehypeAutolinkHeadings, { behavior: \"wrap\" }],\n      ]}\n      components={components}\n    >\n      {children}\n    </Markdown>\n  );\n}\n", "/**\n * @typedef {import('./lib/react-markdown.js').ReactMarkdownOptions} Options\n * @typedef {import('./lib/ast-to-react.js').Components} Components\n */\n\nexport {uriTransformer} from './lib/uri-transformer.js'\n\nexport {ReactMarkdown as default} from './lib/react-markdown.js'\n", "const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n", "/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n", "export {VFile} from './lib/index.js'\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('..').VFileData} VFileData\n * @typedef {import('..').VFileValue} VFileValue\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {VFileValue|VFileOptions|VFile|URL} VFileCompatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {VFileValue} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {VFileData} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} VFileOptions\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} VFileReporterSettings\n * @typedef {<T = VFileReporterSettings>(files: Array<VFile>, options: T) => string} VFileReporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, treats it as `{value: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All other given fields are set on the newly created `VFile`.\n   *\n   * Path related properties are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It\u2019s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {VFileCompatible} [value]\n   */\n  constructor(value) {\n    /** @type {VFileOptions} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information.\n     * It\u2019s OK to store custom data directly on the file, moving it to `data`\n     * gives a little more privacy.\n     * @type {VFileData}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of file paths the file moved between.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path`.\n     * Defaults to `process.cwd()` (`/` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {VFileValue}\n     */\n    this.value\n\n    // The below are non-standard, they are \u201Cwell-known\u201D.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `RawSourceMap` type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Access full path (`~/index.min.js`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set full path (`~/index.min.js`).\n   * Cannot be nullified.\n   *\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Access parent path (`~`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set parent path (`~`).\n   * Cannot be set if there's no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Access basename (including extname) (`index.min.js`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (`index.min.js`).\n   * Cannot contain path separators.\n   * Cannot be nullified either (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Access extname (including dot) (`.js`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set extname (including dot) (`.js`).\n   * Cannot be set if there's no `path` yet and cannot contain path separators.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Access stem (w/o extname) (`index.min`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set stem (w/o extname) (`index.min`).\n   * Cannot be nullified, and cannot contain path separators.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8'] If `file.value` is a buffer, `encoding` is used to serialize buffers.\n   * @returns {string}\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Create a message and associates it w/ the file.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Info: create a message, associate it with the file, and mark the fatality\n   * as `null`.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Fail: create a message, associate it with the file, mark the fatality as\n   * `true`.\n   * Note: fatal errors mean a file is no longer processable.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {never}\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are \u201Cwell known\u201D.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that\u2019s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n", "/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node\u2019s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n", "export {default as path} from 'path'\n", "export {default as proc} from 'process'\n", "export {fileURLToPath as urlToPath} from 'url'\nexport {isUrl} from './minurl.shared.js'\n", "/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n", "export {unified} from './lib/index.js'\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can\u2019t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes\u2019 prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n", "/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n", "/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we\u2019re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n", "import remarkParse from './lib/index.js'\n\nexport default remarkParse\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n", "/**\n * @typedef {import('./lib/index.js').Value} Value\n * @typedef {import('./lib/index.js').Encoding} Encoding\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Extension} Extension\n * @typedef {import('./lib/index.js').Handle} Handle\n * @typedef {import('./lib/index.js').Transform} Transform\n * @typedef {import('./lib/index.js').Token} Token\n * @typedef {import('./lib/index.js').CompileContext} CompileContext\n * @typedef {import('./lib/index.js').OnEnterError} OnEnterError\n * @typedef {import('./lib/index.js').OnExitError} OnExitError\n *\n * @typedef {import('./lib/index.js').OnEnterError} OnError\n *   To do: deprecate next major.\n */\nexport {fromMarkdown} from './lib/index.js'\n", "/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it\u2019s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it\u2019s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we\u2019ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we\u2019re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we\u2019ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n", "/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node\u2019s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n", "/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n", "/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there\u2019s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it\u2019s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it\u2019s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n", "/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it\u2019s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they\u2019re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there\u2019s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can\u2019t have containers \u201Cpierce\u201D into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we\u2019d be interrupting it w/ a new container if there\u2019s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can\u2019t \u201Cunmake\u201D it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which \u201Cunmakes\u201D the first line\n    // and turns the whole into one content block.\n    //\n    // We\u2019ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending\u2026\n          childFlow.events[index][1].start.offset < lineStartOffset && // \u2026and either is not ended yet\u2026\n          (!childFlow.events[index][1].end || // \u2026or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there\u2019s still something open, which means it\u2019s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they\u2019re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n", "/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n", "export {attention} from './lib/attention.js'\nexport {autolink} from './lib/autolink.js'\nexport {blankLine} from './lib/blank-line.js'\nexport {blockQuote} from './lib/block-quote.js'\nexport {characterEscape} from './lib/character-escape.js'\nexport {characterReference} from './lib/character-reference.js'\nexport {codeFenced} from './lib/code-fenced.js'\nexport {codeIndented} from './lib/code-indented.js'\nexport {codeText} from './lib/code-text.js'\nexport {content} from './lib/content.js'\nexport {definition} from './lib/definition.js'\nexport {hardBreakEscape} from './lib/hard-break-escape.js'\nexport {headingAtx} from './lib/heading-atx.js'\nexport {htmlFlow} from './lib/html-flow.js'\nexport {htmlText} from './lib/html-text.js'\nexport {labelEnd} from './lib/label-end.js'\nexport {labelStartImage} from './lib/label-start-image.js'\nexport {labelStartLink} from './lib/label-start-link.js'\nexport {lineEnding} from './lib/line-ending.js'\nexport {list} from './lib/list.js'\nexport {setextUnderline} from './lib/setext-underline.js'\nexport {thematicBreak} from './lib/thematic-break.js'\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it\u2019s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don\u2019t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It\u2019s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n", "import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you\u2019re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n", "/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AEli: '\u00C6',\n  AElig: '\u00C6',\n  AM: '&',\n  AMP: '&',\n  Aacut: '\u00C1',\n  Aacute: '\u00C1',\n  Abreve: '\u0102',\n  Acir: '\u00C2',\n  Acirc: '\u00C2',\n  Acy: '\u0410',\n  Afr: '\uD835\uDD04',\n  Agrav: '\u00C0',\n  Agrave: '\u00C0',\n  Alpha: '\u0391',\n  Amacr: '\u0100',\n  And: '\u2A53',\n  Aogon: '\u0104',\n  Aopf: '\uD835\uDD38',\n  ApplyFunction: '\u2061',\n  Arin: '\u00C5',\n  Aring: '\u00C5',\n  Ascr: '\uD835\uDC9C',\n  Assign: '\u2254',\n  Atild: '\u00C3',\n  Atilde: '\u00C3',\n  Aum: '\u00C4',\n  Auml: '\u00C4',\n  Backslash: '\u2216',\n  Barv: '\u2AE7',\n  Barwed: '\u2306',\n  Bcy: '\u0411',\n  Because: '\u2235',\n  Bernoullis: '\u212C',\n  Beta: '\u0392',\n  Bfr: '\uD835\uDD05',\n  Bopf: '\uD835\uDD39',\n  Breve: '\u02D8',\n  Bscr: '\u212C',\n  Bumpeq: '\u224E',\n  CHcy: '\u0427',\n  COP: '\u00A9',\n  COPY: '\u00A9',\n  Cacute: '\u0106',\n  Cap: '\u22D2',\n  CapitalDifferentialD: '\u2145',\n  Cayleys: '\u212D',\n  Ccaron: '\u010C',\n  Ccedi: '\u00C7',\n  Ccedil: '\u00C7',\n  Ccirc: '\u0108',\n  Cconint: '\u2230',\n  Cdot: '\u010A',\n  Cedilla: '\u00B8',\n  CenterDot: '\u00B7',\n  Cfr: '\u212D',\n  Chi: '\u03A7',\n  CircleDot: '\u2299',\n  CircleMinus: '\u2296',\n  CirclePlus: '\u2295',\n  CircleTimes: '\u2297',\n  ClockwiseContourIntegral: '\u2232',\n  CloseCurlyDoubleQuote: '\u201D',\n  CloseCurlyQuote: '\u2019',\n  Colon: '\u2237',\n  Colone: '\u2A74',\n  Congruent: '\u2261',\n  Conint: '\u222F',\n  ContourIntegral: '\u222E',\n  Copf: '\u2102',\n  Coproduct: '\u2210',\n  CounterClockwiseContourIntegral: '\u2233',\n  Cross: '\u2A2F',\n  Cscr: '\uD835\uDC9E',\n  Cup: '\u22D3',\n  CupCap: '\u224D',\n  DD: '\u2145',\n  DDotrahd: '\u2911',\n  DJcy: '\u0402',\n  DScy: '\u0405',\n  DZcy: '\u040F',\n  Dagger: '\u2021',\n  Darr: '\u21A1',\n  Dashv: '\u2AE4',\n  Dcaron: '\u010E',\n  Dcy: '\u0414',\n  Del: '\u2207',\n  Delta: '\u0394',\n  Dfr: '\uD835\uDD07',\n  DiacriticalAcute: '\u00B4',\n  DiacriticalDot: '\u02D9',\n  DiacriticalDoubleAcute: '\u02DD',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '\u02DC',\n  Diamond: '\u22C4',\n  DifferentialD: '\u2146',\n  Dopf: '\uD835\uDD3B',\n  Dot: '\u00A8',\n  DotDot: '\u20DC',\n  DotEqual: '\u2250',\n  DoubleContourIntegral: '\u222F',\n  DoubleDot: '\u00A8',\n  DoubleDownArrow: '\u21D3',\n  DoubleLeftArrow: '\u21D0',\n  DoubleLeftRightArrow: '\u21D4',\n  DoubleLeftTee: '\u2AE4',\n  DoubleLongLeftArrow: '\u27F8',\n  DoubleLongLeftRightArrow: '\u27FA',\n  DoubleLongRightArrow: '\u27F9',\n  DoubleRightArrow: '\u21D2',\n  DoubleRightTee: '\u22A8',\n  DoubleUpArrow: '\u21D1',\n  DoubleUpDownArrow: '\u21D5',\n  DoubleVerticalBar: '\u2225',\n  DownArrow: '\u2193',\n  DownArrowBar: '\u2913',\n  DownArrowUpArrow: '\u21F5',\n  DownBreve: '\u0311',\n  DownLeftRightVector: '\u2950',\n  DownLeftTeeVector: '\u295E',\n  DownLeftVector: '\u21BD',\n  DownLeftVectorBar: '\u2956',\n  DownRightTeeVector: '\u295F',\n  DownRightVector: '\u21C1',\n  DownRightVectorBar: '\u2957',\n  DownTee: '\u22A4',\n  DownTeeArrow: '\u21A7',\n  Downarrow: '\u21D3',\n  Dscr: '\uD835\uDC9F',\n  Dstrok: '\u0110',\n  ENG: '\u014A',\n  ET: '\u00D0',\n  ETH: '\u00D0',\n  Eacut: '\u00C9',\n  Eacute: '\u00C9',\n  Ecaron: '\u011A',\n  Ecir: '\u00CA',\n  Ecirc: '\u00CA',\n  Ecy: '\u042D',\n  Edot: '\u0116',\n  Efr: '\uD835\uDD08',\n  Egrav: '\u00C8',\n  Egrave: '\u00C8',\n  Element: '\u2208',\n  Emacr: '\u0112',\n  EmptySmallSquare: '\u25FB',\n  EmptyVerySmallSquare: '\u25AB',\n  Eogon: '\u0118',\n  Eopf: '\uD835\uDD3C',\n  Epsilon: '\u0395',\n  Equal: '\u2A75',\n  EqualTilde: '\u2242',\n  Equilibrium: '\u21CC',\n  Escr: '\u2130',\n  Esim: '\u2A73',\n  Eta: '\u0397',\n  Eum: '\u00CB',\n  Euml: '\u00CB',\n  Exists: '\u2203',\n  ExponentialE: '\u2147',\n  Fcy: '\u0424',\n  Ffr: '\uD835\uDD09',\n  FilledSmallSquare: '\u25FC',\n  FilledVerySmallSquare: '\u25AA',\n  Fopf: '\uD835\uDD3D',\n  ForAll: '\u2200',\n  Fouriertrf: '\u2131',\n  Fscr: '\u2131',\n  GJcy: '\u0403',\n  G: '>',\n  GT: '>',\n  Gamma: '\u0393',\n  Gammad: '\u03DC',\n  Gbreve: '\u011E',\n  Gcedil: '\u0122',\n  Gcirc: '\u011C',\n  Gcy: '\u0413',\n  Gdot: '\u0120',\n  Gfr: '\uD835\uDD0A',\n  Gg: '\u22D9',\n  Gopf: '\uD835\uDD3E',\n  GreaterEqual: '\u2265',\n  GreaterEqualLess: '\u22DB',\n  GreaterFullEqual: '\u2267',\n  GreaterGreater: '\u2AA2',\n  GreaterLess: '\u2277',\n  GreaterSlantEqual: '\u2A7E',\n  GreaterTilde: '\u2273',\n  Gscr: '\uD835\uDCA2',\n  Gt: '\u226B',\n  HARDcy: '\u042A',\n  Hacek: '\u02C7',\n  Hat: '^',\n  Hcirc: '\u0124',\n  Hfr: '\u210C',\n  HilbertSpace: '\u210B',\n  Hopf: '\u210D',\n  HorizontalLine: '\u2500',\n  Hscr: '\u210B',\n  Hstrok: '\u0126',\n  HumpDownHump: '\u224E',\n  HumpEqual: '\u224F',\n  IEcy: '\u0415',\n  IJlig: '\u0132',\n  IOcy: '\u0401',\n  Iacut: '\u00CD',\n  Iacute: '\u00CD',\n  Icir: '\u00CE',\n  Icirc: '\u00CE',\n  Icy: '\u0418',\n  Idot: '\u0130',\n  Ifr: '\u2111',\n  Igrav: '\u00CC',\n  Igrave: '\u00CC',\n  Im: '\u2111',\n  Imacr: '\u012A',\n  ImaginaryI: '\u2148',\n  Implies: '\u21D2',\n  Int: '\u222C',\n  Integral: '\u222B',\n  Intersection: '\u22C2',\n  InvisibleComma: '\u2063',\n  InvisibleTimes: '\u2062',\n  Iogon: '\u012E',\n  Iopf: '\uD835\uDD40',\n  Iota: '\u0399',\n  Iscr: '\u2110',\n  Itilde: '\u0128',\n  Iukcy: '\u0406',\n  Ium: '\u00CF',\n  Iuml: '\u00CF',\n  Jcirc: '\u0134',\n  Jcy: '\u0419',\n  Jfr: '\uD835\uDD0D',\n  Jopf: '\uD835\uDD41',\n  Jscr: '\uD835\uDCA5',\n  Jsercy: '\u0408',\n  Jukcy: '\u0404',\n  KHcy: '\u0425',\n  KJcy: '\u040C',\n  Kappa: '\u039A',\n  Kcedil: '\u0136',\n  Kcy: '\u041A',\n  Kfr: '\uD835\uDD0E',\n  Kopf: '\uD835\uDD42',\n  Kscr: '\uD835\uDCA6',\n  LJcy: '\u0409',\n  L: '<',\n  LT: '<',\n  Lacute: '\u0139',\n  Lambda: '\u039B',\n  Lang: '\u27EA',\n  Laplacetrf: '\u2112',\n  Larr: '\u219E',\n  Lcaron: '\u013D',\n  Lcedil: '\u013B',\n  Lcy: '\u041B',\n  LeftAngleBracket: '\u27E8',\n  LeftArrow: '\u2190',\n  LeftArrowBar: '\u21E4',\n  LeftArrowRightArrow: '\u21C6',\n  LeftCeiling: '\u2308',\n  LeftDoubleBracket: '\u27E6',\n  LeftDownTeeVector: '\u2961',\n  LeftDownVector: '\u21C3',\n  LeftDownVectorBar: '\u2959',\n  LeftFloor: '\u230A',\n  LeftRightArrow: '\u2194',\n  LeftRightVector: '\u294E',\n  LeftTee: '\u22A3',\n  LeftTeeArrow: '\u21A4',\n  LeftTeeVector: '\u295A',\n  LeftTriangle: '\u22B2',\n  LeftTriangleBar: '\u29CF',\n  LeftTriangleEqual: '\u22B4',\n  LeftUpDownVector: '\u2951',\n  LeftUpTeeVector: '\u2960',\n  LeftUpVector: '\u21BF',\n  LeftUpVectorBar: '\u2958',\n  LeftVector: '\u21BC',\n  LeftVectorBar: '\u2952',\n  Leftarrow: '\u21D0',\n  Leftrightarrow: '\u21D4',\n  LessEqualGreater: '\u22DA',\n  LessFullEqual: '\u2266',\n  LessGreater: '\u2276',\n  LessLess: '\u2AA1',\n  LessSlantEqual: '\u2A7D',\n  LessTilde: '\u2272',\n  Lfr: '\uD835\uDD0F',\n  Ll: '\u22D8',\n  Lleftarrow: '\u21DA',\n  Lmidot: '\u013F',\n  LongLeftArrow: '\u27F5',\n  LongLeftRightArrow: '\u27F7',\n  LongRightArrow: '\u27F6',\n  Longleftarrow: '\u27F8',\n  Longleftrightarrow: '\u27FA',\n  Longrightarrow: '\u27F9',\n  Lopf: '\uD835\uDD43',\n  LowerLeftArrow: '\u2199',\n  LowerRightArrow: '\u2198',\n  Lscr: '\u2112',\n  Lsh: '\u21B0',\n  Lstrok: '\u0141',\n  Lt: '\u226A',\n  Map: '\u2905',\n  Mcy: '\u041C',\n  MediumSpace: '\u205F',\n  Mellintrf: '\u2133',\n  Mfr: '\uD835\uDD10',\n  MinusPlus: '\u2213',\n  Mopf: '\uD835\uDD44',\n  Mscr: '\u2133',\n  Mu: '\u039C',\n  NJcy: '\u040A',\n  Nacute: '\u0143',\n  Ncaron: '\u0147',\n  Ncedil: '\u0145',\n  Ncy: '\u041D',\n  NegativeMediumSpace: '\u200B',\n  NegativeThickSpace: '\u200B',\n  NegativeThinSpace: '\u200B',\n  NegativeVeryThinSpace: '\u200B',\n  NestedGreaterGreater: '\u226B',\n  NestedLessLess: '\u226A',\n  NewLine: '\\n',\n  Nfr: '\uD835\uDD11',\n  NoBreak: '\u2060',\n  NonBreakingSpace: '\u00A0',\n  Nopf: '\u2115',\n  Not: '\u2AEC',\n  NotCongruent: '\u2262',\n  NotCupCap: '\u226D',\n  NotDoubleVerticalBar: '\u2226',\n  NotElement: '\u2209',\n  NotEqual: '\u2260',\n  NotEqualTilde: '\u2242\u0338',\n  NotExists: '\u2204',\n  NotGreater: '\u226F',\n  NotGreaterEqual: '\u2271',\n  NotGreaterFullEqual: '\u2267\u0338',\n  NotGreaterGreater: '\u226B\u0338',\n  NotGreaterLess: '\u2279',\n  NotGreaterSlantEqual: '\u2A7E\u0338',\n  NotGreaterTilde: '\u2275',\n  NotHumpDownHump: '\u224E\u0338',\n  NotHumpEqual: '\u224F\u0338',\n  NotLeftTriangle: '\u22EA',\n  NotLeftTriangleBar: '\u29CF\u0338',\n  NotLeftTriangleEqual: '\u22EC',\n  NotLess: '\u226E',\n  NotLessEqual: '\u2270',\n  NotLessGreater: '\u2278',\n  NotLessLess: '\u226A\u0338',\n  NotLessSlantEqual: '\u2A7D\u0338',\n  NotLessTilde: '\u2274',\n  NotNestedGreaterGreater: '\u2AA2\u0338',\n  NotNestedLessLess: '\u2AA1\u0338',\n  NotPrecedes: '\u2280',\n  NotPrecedesEqual: '\u2AAF\u0338',\n  NotPrecedesSlantEqual: '\u22E0',\n  NotReverseElement: '\u220C',\n  NotRightTriangle: '\u22EB',\n  NotRightTriangleBar: '\u29D0\u0338',\n  NotRightTriangleEqual: '\u22ED',\n  NotSquareSubset: '\u228F\u0338',\n  NotSquareSubsetEqual: '\u22E2',\n  NotSquareSuperset: '\u2290\u0338',\n  NotSquareSupersetEqual: '\u22E3',\n  NotSubset: '\u2282\u20D2',\n  NotSubsetEqual: '\u2288',\n  NotSucceeds: '\u2281',\n  NotSucceedsEqual: '\u2AB0\u0338',\n  NotSucceedsSlantEqual: '\u22E1',\n  NotSucceedsTilde: '\u227F\u0338',\n  NotSuperset: '\u2283\u20D2',\n  NotSupersetEqual: '\u2289',\n  NotTilde: '\u2241',\n  NotTildeEqual: '\u2244',\n  NotTildeFullEqual: '\u2247',\n  NotTildeTilde: '\u2249',\n  NotVerticalBar: '\u2224',\n  Nscr: '\uD835\uDCA9',\n  Ntild: '\u00D1',\n  Ntilde: '\u00D1',\n  Nu: '\u039D',\n  OElig: '\u0152',\n  Oacut: '\u00D3',\n  Oacute: '\u00D3',\n  Ocir: '\u00D4',\n  Ocirc: '\u00D4',\n  Ocy: '\u041E',\n  Odblac: '\u0150',\n  Ofr: '\uD835\uDD12',\n  Ograv: '\u00D2',\n  Ograve: '\u00D2',\n  Omacr: '\u014C',\n  Omega: '\u03A9',\n  Omicron: '\u039F',\n  Oopf: '\uD835\uDD46',\n  OpenCurlyDoubleQuote: '\u201C',\n  OpenCurlyQuote: '\u2018',\n  Or: '\u2A54',\n  Oscr: '\uD835\uDCAA',\n  Oslas: '\u00D8',\n  Oslash: '\u00D8',\n  Otild: '\u00D5',\n  Otilde: '\u00D5',\n  Otimes: '\u2A37',\n  Oum: '\u00D6',\n  Ouml: '\u00D6',\n  OverBar: '\u203E',\n  OverBrace: '\u23DE',\n  OverBracket: '\u23B4',\n  OverParenthesis: '\u23DC',\n  PartialD: '\u2202',\n  Pcy: '\u041F',\n  Pfr: '\uD835\uDD13',\n  Phi: '\u03A6',\n  Pi: '\u03A0',\n  PlusMinus: '\u00B1',\n  Poincareplane: '\u210C',\n  Popf: '\u2119',\n  Pr: '\u2ABB',\n  Precedes: '\u227A',\n  PrecedesEqual: '\u2AAF',\n  PrecedesSlantEqual: '\u227C',\n  PrecedesTilde: '\u227E',\n  Prime: '\u2033',\n  Product: '\u220F',\n  Proportion: '\u2237',\n  Proportional: '\u221D',\n  Pscr: '\uD835\uDCAB',\n  Psi: '\u03A8',\n  QUO: '\"',\n  QUOT: '\"',\n  Qfr: '\uD835\uDD14',\n  Qopf: '\u211A',\n  Qscr: '\uD835\uDCAC',\n  RBarr: '\u2910',\n  RE: '\u00AE',\n  REG: '\u00AE',\n  Racute: '\u0154',\n  Rang: '\u27EB',\n  Rarr: '\u21A0',\n  Rarrtl: '\u2916',\n  Rcaron: '\u0158',\n  Rcedil: '\u0156',\n  Rcy: '\u0420',\n  Re: '\u211C',\n  ReverseElement: '\u220B',\n  ReverseEquilibrium: '\u21CB',\n  ReverseUpEquilibrium: '\u296F',\n  Rfr: '\u211C',\n  Rho: '\u03A1',\n  RightAngleBracket: '\u27E9',\n  RightArrow: '\u2192',\n  RightArrowBar: '\u21E5',\n  RightArrowLeftArrow: '\u21C4',\n  RightCeiling: '\u2309',\n  RightDoubleBracket: '\u27E7',\n  RightDownTeeVector: '\u295D',\n  RightDownVector: '\u21C2',\n  RightDownVectorBar: '\u2955',\n  RightFloor: '\u230B',\n  RightTee: '\u22A2',\n  RightTeeArrow: '\u21A6',\n  RightTeeVector: '\u295B',\n  RightTriangle: '\u22B3',\n  RightTriangleBar: '\u29D0',\n  RightTriangleEqual: '\u22B5',\n  RightUpDownVector: '\u294F',\n  RightUpTeeVector: '\u295C',\n  RightUpVector: '\u21BE',\n  RightUpVectorBar: '\u2954',\n  RightVector: '\u21C0',\n  RightVectorBar: '\u2953',\n  Rightarrow: '\u21D2',\n  Ropf: '\u211D',\n  RoundImplies: '\u2970',\n  Rrightarrow: '\u21DB',\n  Rscr: '\u211B',\n  Rsh: '\u21B1',\n  RuleDelayed: '\u29F4',\n  SHCHcy: '\u0429',\n  SHcy: '\u0428',\n  SOFTcy: '\u042C',\n  Sacute: '\u015A',\n  Sc: '\u2ABC',\n  Scaron: '\u0160',\n  Scedil: '\u015E',\n  Scirc: '\u015C',\n  Scy: '\u0421',\n  Sfr: '\uD835\uDD16',\n  ShortDownArrow: '\u2193',\n  ShortLeftArrow: '\u2190',\n  ShortRightArrow: '\u2192',\n  ShortUpArrow: '\u2191',\n  Sigma: '\u03A3',\n  SmallCircle: '\u2218',\n  Sopf: '\uD835\uDD4A',\n  Sqrt: '\u221A',\n  Square: '\u25A1',\n  SquareIntersection: '\u2293',\n  SquareSubset: '\u228F',\n  SquareSubsetEqual: '\u2291',\n  SquareSuperset: '\u2290',\n  SquareSupersetEqual: '\u2292',\n  SquareUnion: '\u2294',\n  Sscr: '\uD835\uDCAE',\n  Star: '\u22C6',\n  Sub: '\u22D0',\n  Subset: '\u22D0',\n  SubsetEqual: '\u2286',\n  Succeeds: '\u227B',\n  SucceedsEqual: '\u2AB0',\n  SucceedsSlantEqual: '\u227D',\n  SucceedsTilde: '\u227F',\n  SuchThat: '\u220B',\n  Sum: '\u2211',\n  Sup: '\u22D1',\n  Superset: '\u2283',\n  SupersetEqual: '\u2287',\n  Supset: '\u22D1',\n  THOR: '\u00DE',\n  THORN: '\u00DE',\n  TRADE: '\u2122',\n  TSHcy: '\u040B',\n  TScy: '\u0426',\n  Tab: '\\t',\n  Tau: '\u03A4',\n  Tcaron: '\u0164',\n  Tcedil: '\u0162',\n  Tcy: '\u0422',\n  Tfr: '\uD835\uDD17',\n  Therefore: '\u2234',\n  Theta: '\u0398',\n  ThickSpace: '\u205F\u200A',\n  ThinSpace: '\u2009',\n  Tilde: '\u223C',\n  TildeEqual: '\u2243',\n  TildeFullEqual: '\u2245',\n  TildeTilde: '\u2248',\n  Topf: '\uD835\uDD4B',\n  TripleDot: '\u20DB',\n  Tscr: '\uD835\uDCAF',\n  Tstrok: '\u0166',\n  Uacut: '\u00DA',\n  Uacute: '\u00DA',\n  Uarr: '\u219F',\n  Uarrocir: '\u2949',\n  Ubrcy: '\u040E',\n  Ubreve: '\u016C',\n  Ucir: '\u00DB',\n  Ucirc: '\u00DB',\n  Ucy: '\u0423',\n  Udblac: '\u0170',\n  Ufr: '\uD835\uDD18',\n  Ugrav: '\u00D9',\n  Ugrave: '\u00D9',\n  Umacr: '\u016A',\n  UnderBar: '_',\n  UnderBrace: '\u23DF',\n  UnderBracket: '\u23B5',\n  UnderParenthesis: '\u23DD',\n  Union: '\u22C3',\n  UnionPlus: '\u228E',\n  Uogon: '\u0172',\n  Uopf: '\uD835\uDD4C',\n  UpArrow: '\u2191',\n  UpArrowBar: '\u2912',\n  UpArrowDownArrow: '\u21C5',\n  UpDownArrow: '\u2195',\n  UpEquilibrium: '\u296E',\n  UpTee: '\u22A5',\n  UpTeeArrow: '\u21A5',\n  Uparrow: '\u21D1',\n  Updownarrow: '\u21D5',\n  UpperLeftArrow: '\u2196',\n  UpperRightArrow: '\u2197',\n  Upsi: '\u03D2',\n  Upsilon: '\u03A5',\n  Uring: '\u016E',\n  Uscr: '\uD835\uDCB0',\n  Utilde: '\u0168',\n  Uum: '\u00DC',\n  Uuml: '\u00DC',\n  VDash: '\u22AB',\n  Vbar: '\u2AEB',\n  Vcy: '\u0412',\n  Vdash: '\u22A9',\n  Vdashl: '\u2AE6',\n  Vee: '\u22C1',\n  Verbar: '\u2016',\n  Vert: '\u2016',\n  VerticalBar: '\u2223',\n  VerticalLine: '|',\n  VerticalSeparator: '\u2758',\n  VerticalTilde: '\u2240',\n  VeryThinSpace: '\u200A',\n  Vfr: '\uD835\uDD19',\n  Vopf: '\uD835\uDD4D',\n  Vscr: '\uD835\uDCB1',\n  Vvdash: '\u22AA',\n  Wcirc: '\u0174',\n  Wedge: '\u22C0',\n  Wfr: '\uD835\uDD1A',\n  Wopf: '\uD835\uDD4E',\n  Wscr: '\uD835\uDCB2',\n  Xfr: '\uD835\uDD1B',\n  Xi: '\u039E',\n  Xopf: '\uD835\uDD4F',\n  Xscr: '\uD835\uDCB3',\n  YAcy: '\u042F',\n  YIcy: '\u0407',\n  YUcy: '\u042E',\n  Yacut: '\u00DD',\n  Yacute: '\u00DD',\n  Ycirc: '\u0176',\n  Ycy: '\u042B',\n  Yfr: '\uD835\uDD1C',\n  Yopf: '\uD835\uDD50',\n  Yscr: '\uD835\uDCB4',\n  Yuml: '\u0178',\n  ZHcy: '\u0416',\n  Zacute: '\u0179',\n  Zcaron: '\u017D',\n  Zcy: '\u0417',\n  Zdot: '\u017B',\n  ZeroWidthSpace: '\u200B',\n  Zeta: '\u0396',\n  Zfr: '\u2128',\n  Zopf: '\u2124',\n  Zscr: '\uD835\uDCB5',\n  aacut: '\u00E1',\n  aacute: '\u00E1',\n  abreve: '\u0103',\n  ac: '\u223E',\n  acE: '\u223E\u0333',\n  acd: '\u223F',\n  acir: '\u00E2',\n  acirc: '\u00E2',\n  acut: '\u00B4',\n  acute: '\u00B4',\n  acy: '\u0430',\n  aeli: '\u00E6',\n  aelig: '\u00E6',\n  af: '\u2061',\n  afr: '\uD835\uDD1E',\n  agrav: '\u00E0',\n  agrave: '\u00E0',\n  alefsym: '\u2135',\n  aleph: '\u2135',\n  alpha: '\u03B1',\n  amacr: '\u0101',\n  amalg: '\u2A3F',\n  am: '&',\n  amp: '&',\n  and: '\u2227',\n  andand: '\u2A55',\n  andd: '\u2A5C',\n  andslope: '\u2A58',\n  andv: '\u2A5A',\n  ang: '\u2220',\n  ange: '\u29A4',\n  angle: '\u2220',\n  angmsd: '\u2221',\n  angmsdaa: '\u29A8',\n  angmsdab: '\u29A9',\n  angmsdac: '\u29AA',\n  angmsdad: '\u29AB',\n  angmsdae: '\u29AC',\n  angmsdaf: '\u29AD',\n  angmsdag: '\u29AE',\n  angmsdah: '\u29AF',\n  angrt: '\u221F',\n  angrtvb: '\u22BE',\n  angrtvbd: '\u299D',\n  angsph: '\u2222',\n  angst: '\u00C5',\n  angzarr: '\u237C',\n  aogon: '\u0105',\n  aopf: '\uD835\uDD52',\n  ap: '\u2248',\n  apE: '\u2A70',\n  apacir: '\u2A6F',\n  ape: '\u224A',\n  apid: '\u224B',\n  apos: \"'\",\n  approx: '\u2248',\n  approxeq: '\u224A',\n  arin: '\u00E5',\n  aring: '\u00E5',\n  ascr: '\uD835\uDCB6',\n  ast: '*',\n  asymp: '\u2248',\n  asympeq: '\u224D',\n  atild: '\u00E3',\n  atilde: '\u00E3',\n  aum: '\u00E4',\n  auml: '\u00E4',\n  awconint: '\u2233',\n  awint: '\u2A11',\n  bNot: '\u2AED',\n  backcong: '\u224C',\n  backepsilon: '\u03F6',\n  backprime: '\u2035',\n  backsim: '\u223D',\n  backsimeq: '\u22CD',\n  barvee: '\u22BD',\n  barwed: '\u2305',\n  barwedge: '\u2305',\n  bbrk: '\u23B5',\n  bbrktbrk: '\u23B6',\n  bcong: '\u224C',\n  bcy: '\u0431',\n  bdquo: '\u201E',\n  becaus: '\u2235',\n  because: '\u2235',\n  bemptyv: '\u29B0',\n  bepsi: '\u03F6',\n  bernou: '\u212C',\n  beta: '\u03B2',\n  beth: '\u2136',\n  between: '\u226C',\n  bfr: '\uD835\uDD1F',\n  bigcap: '\u22C2',\n  bigcirc: '\u25EF',\n  bigcup: '\u22C3',\n  bigodot: '\u2A00',\n  bigoplus: '\u2A01',\n  bigotimes: '\u2A02',\n  bigsqcup: '\u2A06',\n  bigstar: '\u2605',\n  bigtriangledown: '\u25BD',\n  bigtriangleup: '\u25B3',\n  biguplus: '\u2A04',\n  bigvee: '\u22C1',\n  bigwedge: '\u22C0',\n  bkarow: '\u290D',\n  blacklozenge: '\u29EB',\n  blacksquare: '\u25AA',\n  blacktriangle: '\u25B4',\n  blacktriangledown: '\u25BE',\n  blacktriangleleft: '\u25C2',\n  blacktriangleright: '\u25B8',\n  blank: '\u2423',\n  blk12: '\u2592',\n  blk14: '\u2591',\n  blk34: '\u2593',\n  block: '\u2588',\n  bne: '=\u20E5',\n  bnequiv: '\u2261\u20E5',\n  bnot: '\u2310',\n  bopf: '\uD835\uDD53',\n  bot: '\u22A5',\n  bottom: '\u22A5',\n  bowtie: '\u22C8',\n  boxDL: '\u2557',\n  boxDR: '\u2554',\n  boxDl: '\u2556',\n  boxDr: '\u2553',\n  boxH: '\u2550',\n  boxHD: '\u2566',\n  boxHU: '\u2569',\n  boxHd: '\u2564',\n  boxHu: '\u2567',\n  boxUL: '\u255D',\n  boxUR: '\u255A',\n  boxUl: '\u255C',\n  boxUr: '\u2559',\n  boxV: '\u2551',\n  boxVH: '\u256C',\n  boxVL: '\u2563',\n  boxVR: '\u2560',\n  boxVh: '\u256B',\n  boxVl: '\u2562',\n  boxVr: '\u255F',\n  boxbox: '\u29C9',\n  boxdL: '\u2555',\n  boxdR: '\u2552',\n  boxdl: '\u2510',\n  boxdr: '\u250C',\n  boxh: '\u2500',\n  boxhD: '\u2565',\n  boxhU: '\u2568',\n  boxhd: '\u252C',\n  boxhu: '\u2534',\n  boxminus: '\u229F',\n  boxplus: '\u229E',\n  boxtimes: '\u22A0',\n  boxuL: '\u255B',\n  boxuR: '\u2558',\n  boxul: '\u2518',\n  boxur: '\u2514',\n  boxv: '\u2502',\n  boxvH: '\u256A',\n  boxvL: '\u2561',\n  boxvR: '\u255E',\n  boxvh: '\u253C',\n  boxvl: '\u2524',\n  boxvr: '\u251C',\n  bprime: '\u2035',\n  breve: '\u02D8',\n  brvba: '\u00A6',\n  brvbar: '\u00A6',\n  bscr: '\uD835\uDCB7',\n  bsemi: '\u204F',\n  bsim: '\u223D',\n  bsime: '\u22CD',\n  bsol: '\\\\',\n  bsolb: '\u29C5',\n  bsolhsub: '\u27C8',\n  bull: '\u2022',\n  bullet: '\u2022',\n  bump: '\u224E',\n  bumpE: '\u2AAE',\n  bumpe: '\u224F',\n  bumpeq: '\u224F',\n  cacute: '\u0107',\n  cap: '\u2229',\n  capand: '\u2A44',\n  capbrcup: '\u2A49',\n  capcap: '\u2A4B',\n  capcup: '\u2A47',\n  capdot: '\u2A40',\n  caps: '\u2229\uFE00',\n  caret: '\u2041',\n  caron: '\u02C7',\n  ccaps: '\u2A4D',\n  ccaron: '\u010D',\n  ccedi: '\u00E7',\n  ccedil: '\u00E7',\n  ccirc: '\u0109',\n  ccups: '\u2A4C',\n  ccupssm: '\u2A50',\n  cdot: '\u010B',\n  cedi: '\u00B8',\n  cedil: '\u00B8',\n  cemptyv: '\u29B2',\n  cen: '\u00A2',\n  cent: '\u00A2',\n  centerdot: '\u00B7',\n  cfr: '\uD835\uDD20',\n  chcy: '\u0447',\n  check: '\u2713',\n  checkmark: '\u2713',\n  chi: '\u03C7',\n  cir: '\u25CB',\n  cirE: '\u29C3',\n  circ: '\u02C6',\n  circeq: '\u2257',\n  circlearrowleft: '\u21BA',\n  circlearrowright: '\u21BB',\n  circledR: '\u00AE',\n  circledS: '\u24C8',\n  circledast: '\u229B',\n  circledcirc: '\u229A',\n  circleddash: '\u229D',\n  cire: '\u2257',\n  cirfnint: '\u2A10',\n  cirmid: '\u2AEF',\n  cirscir: '\u29C2',\n  clubs: '\u2663',\n  clubsuit: '\u2663',\n  colon: ':',\n  colone: '\u2254',\n  coloneq: '\u2254',\n  comma: ',',\n  commat: '@',\n  comp: '\u2201',\n  compfn: '\u2218',\n  complement: '\u2201',\n  complexes: '\u2102',\n  cong: '\u2245',\n  congdot: '\u2A6D',\n  conint: '\u222E',\n  copf: '\uD835\uDD54',\n  coprod: '\u2210',\n  cop: '\u00A9',\n  copy: '\u00A9',\n  copysr: '\u2117',\n  crarr: '\u21B5',\n  cross: '\u2717',\n  cscr: '\uD835\uDCB8',\n  csub: '\u2ACF',\n  csube: '\u2AD1',\n  csup: '\u2AD0',\n  csupe: '\u2AD2',\n  ctdot: '\u22EF',\n  cudarrl: '\u2938',\n  cudarrr: '\u2935',\n  cuepr: '\u22DE',\n  cuesc: '\u22DF',\n  cularr: '\u21B6',\n  cularrp: '\u293D',\n  cup: '\u222A',\n  cupbrcap: '\u2A48',\n  cupcap: '\u2A46',\n  cupcup: '\u2A4A',\n  cupdot: '\u228D',\n  cupor: '\u2A45',\n  cups: '\u222A\uFE00',\n  curarr: '\u21B7',\n  curarrm: '\u293C',\n  curlyeqprec: '\u22DE',\n  curlyeqsucc: '\u22DF',\n  curlyvee: '\u22CE',\n  curlywedge: '\u22CF',\n  curre: '\u00A4',\n  curren: '\u00A4',\n  curvearrowleft: '\u21B6',\n  curvearrowright: '\u21B7',\n  cuvee: '\u22CE',\n  cuwed: '\u22CF',\n  cwconint: '\u2232',\n  cwint: '\u2231',\n  cylcty: '\u232D',\n  dArr: '\u21D3',\n  dHar: '\u2965',\n  dagger: '\u2020',\n  daleth: '\u2138',\n  darr: '\u2193',\n  dash: '\u2010',\n  dashv: '\u22A3',\n  dbkarow: '\u290F',\n  dblac: '\u02DD',\n  dcaron: '\u010F',\n  dcy: '\u0434',\n  dd: '\u2146',\n  ddagger: '\u2021',\n  ddarr: '\u21CA',\n  ddotseq: '\u2A77',\n  de: '\u00B0',\n  deg: '\u00B0',\n  delta: '\u03B4',\n  demptyv: '\u29B1',\n  dfisht: '\u297F',\n  dfr: '\uD835\uDD21',\n  dharl: '\u21C3',\n  dharr: '\u21C2',\n  diam: '\u22C4',\n  diamond: '\u22C4',\n  diamondsuit: '\u2666',\n  diams: '\u2666',\n  die: '\u00A8',\n  digamma: '\u03DD',\n  disin: '\u22F2',\n  div: '\u00F7',\n  divid: '\u00F7',\n  divide: '\u00F7',\n  divideontimes: '\u22C7',\n  divonx: '\u22C7',\n  djcy: '\u0452',\n  dlcorn: '\u231E',\n  dlcrop: '\u230D',\n  dollar: '$',\n  dopf: '\uD835\uDD55',\n  dot: '\u02D9',\n  doteq: '\u2250',\n  doteqdot: '\u2251',\n  dotminus: '\u2238',\n  dotplus: '\u2214',\n  dotsquare: '\u22A1',\n  doublebarwedge: '\u2306',\n  downarrow: '\u2193',\n  downdownarrows: '\u21CA',\n  downharpoonleft: '\u21C3',\n  downharpoonright: '\u21C2',\n  drbkarow: '\u2910',\n  drcorn: '\u231F',\n  drcrop: '\u230C',\n  dscr: '\uD835\uDCB9',\n  dscy: '\u0455',\n  dsol: '\u29F6',\n  dstrok: '\u0111',\n  dtdot: '\u22F1',\n  dtri: '\u25BF',\n  dtrif: '\u25BE',\n  duarr: '\u21F5',\n  duhar: '\u296F',\n  dwangle: '\u29A6',\n  dzcy: '\u045F',\n  dzigrarr: '\u27FF',\n  eDDot: '\u2A77',\n  eDot: '\u2251',\n  eacut: '\u00E9',\n  eacute: '\u00E9',\n  easter: '\u2A6E',\n  ecaron: '\u011B',\n  ecir: '\u00EA',\n  ecirc: '\u00EA',\n  ecolon: '\u2255',\n  ecy: '\u044D',\n  edot: '\u0117',\n  ee: '\u2147',\n  efDot: '\u2252',\n  efr: '\uD835\uDD22',\n  eg: '\u2A9A',\n  egrav: '\u00E8',\n  egrave: '\u00E8',\n  egs: '\u2A96',\n  egsdot: '\u2A98',\n  el: '\u2A99',\n  elinters: '\u23E7',\n  ell: '\u2113',\n  els: '\u2A95',\n  elsdot: '\u2A97',\n  emacr: '\u0113',\n  empty: '\u2205',\n  emptyset: '\u2205',\n  emptyv: '\u2205',\n  emsp13: '\u2004',\n  emsp14: '\u2005',\n  emsp: '\u2003',\n  eng: '\u014B',\n  ensp: '\u2002',\n  eogon: '\u0119',\n  eopf: '\uD835\uDD56',\n  epar: '\u22D5',\n  eparsl: '\u29E3',\n  eplus: '\u2A71',\n  epsi: '\u03B5',\n  epsilon: '\u03B5',\n  epsiv: '\u03F5',\n  eqcirc: '\u2256',\n  eqcolon: '\u2255',\n  eqsim: '\u2242',\n  eqslantgtr: '\u2A96',\n  eqslantless: '\u2A95',\n  equals: '=',\n  equest: '\u225F',\n  equiv: '\u2261',\n  equivDD: '\u2A78',\n  eqvparsl: '\u29E5',\n  erDot: '\u2253',\n  erarr: '\u2971',\n  escr: '\u212F',\n  esdot: '\u2250',\n  esim: '\u2242',\n  eta: '\u03B7',\n  et: '\u00F0',\n  eth: '\u00F0',\n  eum: '\u00EB',\n  euml: '\u00EB',\n  euro: '\u20AC',\n  excl: '!',\n  exist: '\u2203',\n  expectation: '\u2130',\n  exponentiale: '\u2147',\n  fallingdotseq: '\u2252',\n  fcy: '\u0444',\n  female: '\u2640',\n  ffilig: '\uFB03',\n  fflig: '\uFB00',\n  ffllig: '\uFB04',\n  ffr: '\uD835\uDD23',\n  filig: '\uFB01',\n  fjlig: 'fj',\n  flat: '\u266D',\n  fllig: '\uFB02',\n  fltns: '\u25B1',\n  fnof: '\u0192',\n  fopf: '\uD835\uDD57',\n  forall: '\u2200',\n  fork: '\u22D4',\n  forkv: '\u2AD9',\n  fpartint: '\u2A0D',\n  frac1: '\u00BC',\n  frac12: '\u00BD',\n  frac13: '\u2153',\n  frac14: '\u00BC',\n  frac15: '\u2155',\n  frac16: '\u2159',\n  frac18: '\u215B',\n  frac23: '\u2154',\n  frac25: '\u2156',\n  frac3: '\u00BE',\n  frac34: '\u00BE',\n  frac35: '\u2157',\n  frac38: '\u215C',\n  frac45: '\u2158',\n  frac56: '\u215A',\n  frac58: '\u215D',\n  frac78: '\u215E',\n  frasl: '\u2044',\n  frown: '\u2322',\n  fscr: '\uD835\uDCBB',\n  gE: '\u2267',\n  gEl: '\u2A8C',\n  gacute: '\u01F5',\n  gamma: '\u03B3',\n  gammad: '\u03DD',\n  gap: '\u2A86',\n  gbreve: '\u011F',\n  gcirc: '\u011D',\n  gcy: '\u0433',\n  gdot: '\u0121',\n  ge: '\u2265',\n  gel: '\u22DB',\n  geq: '\u2265',\n  geqq: '\u2267',\n  geqslant: '\u2A7E',\n  ges: '\u2A7E',\n  gescc: '\u2AA9',\n  gesdot: '\u2A80',\n  gesdoto: '\u2A82',\n  gesdotol: '\u2A84',\n  gesl: '\u22DB\uFE00',\n  gesles: '\u2A94',\n  gfr: '\uD835\uDD24',\n  gg: '\u226B',\n  ggg: '\u22D9',\n  gimel: '\u2137',\n  gjcy: '\u0453',\n  gl: '\u2277',\n  glE: '\u2A92',\n  gla: '\u2AA5',\n  glj: '\u2AA4',\n  gnE: '\u2269',\n  gnap: '\u2A8A',\n  gnapprox: '\u2A8A',\n  gne: '\u2A88',\n  gneq: '\u2A88',\n  gneqq: '\u2269',\n  gnsim: '\u22E7',\n  gopf: '\uD835\uDD58',\n  grave: '`',\n  gscr: '\u210A',\n  gsim: '\u2273',\n  gsime: '\u2A8E',\n  gsiml: '\u2A90',\n  g: '>',\n  gt: '>',\n  gtcc: '\u2AA7',\n  gtcir: '\u2A7A',\n  gtdot: '\u22D7',\n  gtlPar: '\u2995',\n  gtquest: '\u2A7C',\n  gtrapprox: '\u2A86',\n  gtrarr: '\u2978',\n  gtrdot: '\u22D7',\n  gtreqless: '\u22DB',\n  gtreqqless: '\u2A8C',\n  gtrless: '\u2277',\n  gtrsim: '\u2273',\n  gvertneqq: '\u2269\uFE00',\n  gvnE: '\u2269\uFE00',\n  hArr: '\u21D4',\n  hairsp: '\u200A',\n  half: '\u00BD',\n  hamilt: '\u210B',\n  hardcy: '\u044A',\n  harr: '\u2194',\n  harrcir: '\u2948',\n  harrw: '\u21AD',\n  hbar: '\u210F',\n  hcirc: '\u0125',\n  hearts: '\u2665',\n  heartsuit: '\u2665',\n  hellip: '\u2026',\n  hercon: '\u22B9',\n  hfr: '\uD835\uDD25',\n  hksearow: '\u2925',\n  hkswarow: '\u2926',\n  hoarr: '\u21FF',\n  homtht: '\u223B',\n  hookleftarrow: '\u21A9',\n  hookrightarrow: '\u21AA',\n  hopf: '\uD835\uDD59',\n  horbar: '\u2015',\n  hscr: '\uD835\uDCBD',\n  hslash: '\u210F',\n  hstrok: '\u0127',\n  hybull: '\u2043',\n  hyphen: '\u2010',\n  iacut: '\u00ED',\n  iacute: '\u00ED',\n  ic: '\u2063',\n  icir: '\u00EE',\n  icirc: '\u00EE',\n  icy: '\u0438',\n  iecy: '\u0435',\n  iexc: '\u00A1',\n  iexcl: '\u00A1',\n  iff: '\u21D4',\n  ifr: '\uD835\uDD26',\n  igrav: '\u00EC',\n  igrave: '\u00EC',\n  ii: '\u2148',\n  iiiint: '\u2A0C',\n  iiint: '\u222D',\n  iinfin: '\u29DC',\n  iiota: '\u2129',\n  ijlig: '\u0133',\n  imacr: '\u012B',\n  image: '\u2111',\n  imagline: '\u2110',\n  imagpart: '\u2111',\n  imath: '\u0131',\n  imof: '\u22B7',\n  imped: '\u01B5',\n  in: '\u2208',\n  incare: '\u2105',\n  infin: '\u221E',\n  infintie: '\u29DD',\n  inodot: '\u0131',\n  int: '\u222B',\n  intcal: '\u22BA',\n  integers: '\u2124',\n  intercal: '\u22BA',\n  intlarhk: '\u2A17',\n  intprod: '\u2A3C',\n  iocy: '\u0451',\n  iogon: '\u012F',\n  iopf: '\uD835\uDD5A',\n  iota: '\u03B9',\n  iprod: '\u2A3C',\n  iques: '\u00BF',\n  iquest: '\u00BF',\n  iscr: '\uD835\uDCBE',\n  isin: '\u2208',\n  isinE: '\u22F9',\n  isindot: '\u22F5',\n  isins: '\u22F4',\n  isinsv: '\u22F3',\n  isinv: '\u2208',\n  it: '\u2062',\n  itilde: '\u0129',\n  iukcy: '\u0456',\n  ium: '\u00EF',\n  iuml: '\u00EF',\n  jcirc: '\u0135',\n  jcy: '\u0439',\n  jfr: '\uD835\uDD27',\n  jmath: '\u0237',\n  jopf: '\uD835\uDD5B',\n  jscr: '\uD835\uDCBF',\n  jsercy: '\u0458',\n  jukcy: '\u0454',\n  kappa: '\u03BA',\n  kappav: '\u03F0',\n  kcedil: '\u0137',\n  kcy: '\u043A',\n  kfr: '\uD835\uDD28',\n  kgreen: '\u0138',\n  khcy: '\u0445',\n  kjcy: '\u045C',\n  kopf: '\uD835\uDD5C',\n  kscr: '\uD835\uDCC0',\n  lAarr: '\u21DA',\n  lArr: '\u21D0',\n  lAtail: '\u291B',\n  lBarr: '\u290E',\n  lE: '\u2266',\n  lEg: '\u2A8B',\n  lHar: '\u2962',\n  lacute: '\u013A',\n  laemptyv: '\u29B4',\n  lagran: '\u2112',\n  lambda: '\u03BB',\n  lang: '\u27E8',\n  langd: '\u2991',\n  langle: '\u27E8',\n  lap: '\u2A85',\n  laqu: '\u00AB',\n  laquo: '\u00AB',\n  larr: '\u2190',\n  larrb: '\u21E4',\n  larrbfs: '\u291F',\n  larrfs: '\u291D',\n  larrhk: '\u21A9',\n  larrlp: '\u21AB',\n  larrpl: '\u2939',\n  larrsim: '\u2973',\n  larrtl: '\u21A2',\n  lat: '\u2AAB',\n  latail: '\u2919',\n  late: '\u2AAD',\n  lates: '\u2AAD\uFE00',\n  lbarr: '\u290C',\n  lbbrk: '\u2772',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '\u298B',\n  lbrksld: '\u298F',\n  lbrkslu: '\u298D',\n  lcaron: '\u013E',\n  lcedil: '\u013C',\n  lceil: '\u2308',\n  lcub: '{',\n  lcy: '\u043B',\n  ldca: '\u2936',\n  ldquo: '\u201C',\n  ldquor: '\u201E',\n  ldrdhar: '\u2967',\n  ldrushar: '\u294B',\n  ldsh: '\u21B2',\n  le: '\u2264',\n  leftarrow: '\u2190',\n  leftarrowtail: '\u21A2',\n  leftharpoondown: '\u21BD',\n  leftharpoonup: '\u21BC',\n  leftleftarrows: '\u21C7',\n  leftrightarrow: '\u2194',\n  leftrightarrows: '\u21C6',\n  leftrightharpoons: '\u21CB',\n  leftrightsquigarrow: '\u21AD',\n  leftthreetimes: '\u22CB',\n  leg: '\u22DA',\n  leq: '\u2264',\n  leqq: '\u2266',\n  leqslant: '\u2A7D',\n  les: '\u2A7D',\n  lescc: '\u2AA8',\n  lesdot: '\u2A7F',\n  lesdoto: '\u2A81',\n  lesdotor: '\u2A83',\n  lesg: '\u22DA\uFE00',\n  lesges: '\u2A93',\n  lessapprox: '\u2A85',\n  lessdot: '\u22D6',\n  lesseqgtr: '\u22DA',\n  lesseqqgtr: '\u2A8B',\n  lessgtr: '\u2276',\n  lesssim: '\u2272',\n  lfisht: '\u297C',\n  lfloor: '\u230A',\n  lfr: '\uD835\uDD29',\n  lg: '\u2276',\n  lgE: '\u2A91',\n  lhard: '\u21BD',\n  lharu: '\u21BC',\n  lharul: '\u296A',\n  lhblk: '\u2584',\n  ljcy: '\u0459',\n  ll: '\u226A',\n  llarr: '\u21C7',\n  llcorner: '\u231E',\n  llhard: '\u296B',\n  lltri: '\u25FA',\n  lmidot: '\u0140',\n  lmoust: '\u23B0',\n  lmoustache: '\u23B0',\n  lnE: '\u2268',\n  lnap: '\u2A89',\n  lnapprox: '\u2A89',\n  lne: '\u2A87',\n  lneq: '\u2A87',\n  lneqq: '\u2268',\n  lnsim: '\u22E6',\n  loang: '\u27EC',\n  loarr: '\u21FD',\n  lobrk: '\u27E6',\n  longleftarrow: '\u27F5',\n  longleftrightarrow: '\u27F7',\n  longmapsto: '\u27FC',\n  longrightarrow: '\u27F6',\n  looparrowleft: '\u21AB',\n  looparrowright: '\u21AC',\n  lopar: '\u2985',\n  lopf: '\uD835\uDD5D',\n  loplus: '\u2A2D',\n  lotimes: '\u2A34',\n  lowast: '\u2217',\n  lowbar: '_',\n  loz: '\u25CA',\n  lozenge: '\u25CA',\n  lozf: '\u29EB',\n  lpar: '(',\n  lparlt: '\u2993',\n  lrarr: '\u21C6',\n  lrcorner: '\u231F',\n  lrhar: '\u21CB',\n  lrhard: '\u296D',\n  lrm: '\u200E',\n  lrtri: '\u22BF',\n  lsaquo: '\u2039',\n  lscr: '\uD835\uDCC1',\n  lsh: '\u21B0',\n  lsim: '\u2272',\n  lsime: '\u2A8D',\n  lsimg: '\u2A8F',\n  lsqb: '[',\n  lsquo: '\u2018',\n  lsquor: '\u201A',\n  lstrok: '\u0142',\n  l: '<',\n  lt: '<',\n  ltcc: '\u2AA6',\n  ltcir: '\u2A79',\n  ltdot: '\u22D6',\n  lthree: '\u22CB',\n  ltimes: '\u22C9',\n  ltlarr: '\u2976',\n  ltquest: '\u2A7B',\n  ltrPar: '\u2996',\n  ltri: '\u25C3',\n  ltrie: '\u22B4',\n  ltrif: '\u25C2',\n  lurdshar: '\u294A',\n  luruhar: '\u2966',\n  lvertneqq: '\u2268\uFE00',\n  lvnE: '\u2268\uFE00',\n  mDDot: '\u223A',\n  mac: '\u00AF',\n  macr: '\u00AF',\n  male: '\u2642',\n  malt: '\u2720',\n  maltese: '\u2720',\n  map: '\u21A6',\n  mapsto: '\u21A6',\n  mapstodown: '\u21A7',\n  mapstoleft: '\u21A4',\n  mapstoup: '\u21A5',\n  marker: '\u25AE',\n  mcomma: '\u2A29',\n  mcy: '\u043C',\n  mdash: '\u2014',\n  measuredangle: '\u2221',\n  mfr: '\uD835\uDD2A',\n  mho: '\u2127',\n  micr: '\u00B5',\n  micro: '\u00B5',\n  mid: '\u2223',\n  midast: '*',\n  midcir: '\u2AF0',\n  middo: '\u00B7',\n  middot: '\u00B7',\n  minus: '\u2212',\n  minusb: '\u229F',\n  minusd: '\u2238',\n  minusdu: '\u2A2A',\n  mlcp: '\u2ADB',\n  mldr: '\u2026',\n  mnplus: '\u2213',\n  models: '\u22A7',\n  mopf: '\uD835\uDD5E',\n  mp: '\u2213',\n  mscr: '\uD835\uDCC2',\n  mstpos: '\u223E',\n  mu: '\u03BC',\n  multimap: '\u22B8',\n  mumap: '\u22B8',\n  nGg: '\u22D9\u0338',\n  nGt: '\u226B\u20D2',\n  nGtv: '\u226B\u0338',\n  nLeftarrow: '\u21CD',\n  nLeftrightarrow: '\u21CE',\n  nLl: '\u22D8\u0338',\n  nLt: '\u226A\u20D2',\n  nLtv: '\u226A\u0338',\n  nRightarrow: '\u21CF',\n  nVDash: '\u22AF',\n  nVdash: '\u22AE',\n  nabla: '\u2207',\n  nacute: '\u0144',\n  nang: '\u2220\u20D2',\n  nap: '\u2249',\n  napE: '\u2A70\u0338',\n  napid: '\u224B\u0338',\n  napos: '\u0149',\n  napprox: '\u2249',\n  natur: '\u266E',\n  natural: '\u266E',\n  naturals: '\u2115',\n  nbs: '\u00A0',\n  nbsp: '\u00A0',\n  nbump: '\u224E\u0338',\n  nbumpe: '\u224F\u0338',\n  ncap: '\u2A43',\n  ncaron: '\u0148',\n  ncedil: '\u0146',\n  ncong: '\u2247',\n  ncongdot: '\u2A6D\u0338',\n  ncup: '\u2A42',\n  ncy: '\u043D',\n  ndash: '\u2013',\n  ne: '\u2260',\n  neArr: '\u21D7',\n  nearhk: '\u2924',\n  nearr: '\u2197',\n  nearrow: '\u2197',\n  nedot: '\u2250\u0338',\n  nequiv: '\u2262',\n  nesear: '\u2928',\n  nesim: '\u2242\u0338',\n  nexist: '\u2204',\n  nexists: '\u2204',\n  nfr: '\uD835\uDD2B',\n  ngE: '\u2267\u0338',\n  nge: '\u2271',\n  ngeq: '\u2271',\n  ngeqq: '\u2267\u0338',\n  ngeqslant: '\u2A7E\u0338',\n  nges: '\u2A7E\u0338',\n  ngsim: '\u2275',\n  ngt: '\u226F',\n  ngtr: '\u226F',\n  nhArr: '\u21CE',\n  nharr: '\u21AE',\n  nhpar: '\u2AF2',\n  ni: '\u220B',\n  nis: '\u22FC',\n  nisd: '\u22FA',\n  niv: '\u220B',\n  njcy: '\u045A',\n  nlArr: '\u21CD',\n  nlE: '\u2266\u0338',\n  nlarr: '\u219A',\n  nldr: '\u2025',\n  nle: '\u2270',\n  nleftarrow: '\u219A',\n  nleftrightarrow: '\u21AE',\n  nleq: '\u2270',\n  nleqq: '\u2266\u0338',\n  nleqslant: '\u2A7D\u0338',\n  nles: '\u2A7D\u0338',\n  nless: '\u226E',\n  nlsim: '\u2274',\n  nlt: '\u226E',\n  nltri: '\u22EA',\n  nltrie: '\u22EC',\n  nmid: '\u2224',\n  nopf: '\uD835\uDD5F',\n  no: '\u00AC',\n  not: '\u00AC',\n  notin: '\u2209',\n  notinE: '\u22F9\u0338',\n  notindot: '\u22F5\u0338',\n  notinva: '\u2209',\n  notinvb: '\u22F7',\n  notinvc: '\u22F6',\n  notni: '\u220C',\n  notniva: '\u220C',\n  notnivb: '\u22FE',\n  notnivc: '\u22FD',\n  npar: '\u2226',\n  nparallel: '\u2226',\n  nparsl: '\u2AFD\u20E5',\n  npart: '\u2202\u0338',\n  npolint: '\u2A14',\n  npr: '\u2280',\n  nprcue: '\u22E0',\n  npre: '\u2AAF\u0338',\n  nprec: '\u2280',\n  npreceq: '\u2AAF\u0338',\n  nrArr: '\u21CF',\n  nrarr: '\u219B',\n  nrarrc: '\u2933\u0338',\n  nrarrw: '\u219D\u0338',\n  nrightarrow: '\u219B',\n  nrtri: '\u22EB',\n  nrtrie: '\u22ED',\n  nsc: '\u2281',\n  nsccue: '\u22E1',\n  nsce: '\u2AB0\u0338',\n  nscr: '\uD835\uDCC3',\n  nshortmid: '\u2224',\n  nshortparallel: '\u2226',\n  nsim: '\u2241',\n  nsime: '\u2244',\n  nsimeq: '\u2244',\n  nsmid: '\u2224',\n  nspar: '\u2226',\n  nsqsube: '\u22E2',\n  nsqsupe: '\u22E3',\n  nsub: '\u2284',\n  nsubE: '\u2AC5\u0338',\n  nsube: '\u2288',\n  nsubset: '\u2282\u20D2',\n  nsubseteq: '\u2288',\n  nsubseteqq: '\u2AC5\u0338',\n  nsucc: '\u2281',\n  nsucceq: '\u2AB0\u0338',\n  nsup: '\u2285',\n  nsupE: '\u2AC6\u0338',\n  nsupe: '\u2289',\n  nsupset: '\u2283\u20D2',\n  nsupseteq: '\u2289',\n  nsupseteqq: '\u2AC6\u0338',\n  ntgl: '\u2279',\n  ntild: '\u00F1',\n  ntilde: '\u00F1',\n  ntlg: '\u2278',\n  ntriangleleft: '\u22EA',\n  ntrianglelefteq: '\u22EC',\n  ntriangleright: '\u22EB',\n  ntrianglerighteq: '\u22ED',\n  nu: '\u03BD',\n  num: '#',\n  numero: '\u2116',\n  numsp: '\u2007',\n  nvDash: '\u22AD',\n  nvHarr: '\u2904',\n  nvap: '\u224D\u20D2',\n  nvdash: '\u22AC',\n  nvge: '\u2265\u20D2',\n  nvgt: '>\u20D2',\n  nvinfin: '\u29DE',\n  nvlArr: '\u2902',\n  nvle: '\u2264\u20D2',\n  nvlt: '<\u20D2',\n  nvltrie: '\u22B4\u20D2',\n  nvrArr: '\u2903',\n  nvrtrie: '\u22B5\u20D2',\n  nvsim: '\u223C\u20D2',\n  nwArr: '\u21D6',\n  nwarhk: '\u2923',\n  nwarr: '\u2196',\n  nwarrow: '\u2196',\n  nwnear: '\u2927',\n  oS: '\u24C8',\n  oacut: '\u00F3',\n  oacute: '\u00F3',\n  oast: '\u229B',\n  ocir: '\u00F4',\n  ocirc: '\u00F4',\n  ocy: '\u043E',\n  odash: '\u229D',\n  odblac: '\u0151',\n  odiv: '\u2A38',\n  odot: '\u2299',\n  odsold: '\u29BC',\n  oelig: '\u0153',\n  ofcir: '\u29BF',\n  ofr: '\uD835\uDD2C',\n  ogon: '\u02DB',\n  ograv: '\u00F2',\n  ograve: '\u00F2',\n  ogt: '\u29C1',\n  ohbar: '\u29B5',\n  ohm: '\u03A9',\n  oint: '\u222E',\n  olarr: '\u21BA',\n  olcir: '\u29BE',\n  olcross: '\u29BB',\n  oline: '\u203E',\n  olt: '\u29C0',\n  omacr: '\u014D',\n  omega: '\u03C9',\n  omicron: '\u03BF',\n  omid: '\u29B6',\n  ominus: '\u2296',\n  oopf: '\uD835\uDD60',\n  opar: '\u29B7',\n  operp: '\u29B9',\n  oplus: '\u2295',\n  or: '\u2228',\n  orarr: '\u21BB',\n  ord: '\u00BA',\n  order: '\u2134',\n  orderof: '\u2134',\n  ordf: '\u00AA',\n  ordm: '\u00BA',\n  origof: '\u22B6',\n  oror: '\u2A56',\n  orslope: '\u2A57',\n  orv: '\u2A5B',\n  oscr: '\u2134',\n  oslas: '\u00F8',\n  oslash: '\u00F8',\n  osol: '\u2298',\n  otild: '\u00F5',\n  otilde: '\u00F5',\n  otimes: '\u2297',\n  otimesas: '\u2A36',\n  oum: '\u00F6',\n  ouml: '\u00F6',\n  ovbar: '\u233D',\n  par: '\u00B6',\n  para: '\u00B6',\n  parallel: '\u2225',\n  parsim: '\u2AF3',\n  parsl: '\u2AFD',\n  part: '\u2202',\n  pcy: '\u043F',\n  percnt: '%',\n  period: '.',\n  permil: '\u2030',\n  perp: '\u22A5',\n  pertenk: '\u2031',\n  pfr: '\uD835\uDD2D',\n  phi: '\u03C6',\n  phiv: '\u03D5',\n  phmmat: '\u2133',\n  phone: '\u260E',\n  pi: '\u03C0',\n  pitchfork: '\u22D4',\n  piv: '\u03D6',\n  planck: '\u210F',\n  planckh: '\u210E',\n  plankv: '\u210F',\n  plus: '+',\n  plusacir: '\u2A23',\n  plusb: '\u229E',\n  pluscir: '\u2A22',\n  plusdo: '\u2214',\n  plusdu: '\u2A25',\n  pluse: '\u2A72',\n  plusm: '\u00B1',\n  plusmn: '\u00B1',\n  plussim: '\u2A26',\n  plustwo: '\u2A27',\n  pm: '\u00B1',\n  pointint: '\u2A15',\n  popf: '\uD835\uDD61',\n  poun: '\u00A3',\n  pound: '\u00A3',\n  pr: '\u227A',\n  prE: '\u2AB3',\n  prap: '\u2AB7',\n  prcue: '\u227C',\n  pre: '\u2AAF',\n  prec: '\u227A',\n  precapprox: '\u2AB7',\n  preccurlyeq: '\u227C',\n  preceq: '\u2AAF',\n  precnapprox: '\u2AB9',\n  precneqq: '\u2AB5',\n  precnsim: '\u22E8',\n  precsim: '\u227E',\n  prime: '\u2032',\n  primes: '\u2119',\n  prnE: '\u2AB5',\n  prnap: '\u2AB9',\n  prnsim: '\u22E8',\n  prod: '\u220F',\n  profalar: '\u232E',\n  profline: '\u2312',\n  profsurf: '\u2313',\n  prop: '\u221D',\n  propto: '\u221D',\n  prsim: '\u227E',\n  prurel: '\u22B0',\n  pscr: '\uD835\uDCC5',\n  psi: '\u03C8',\n  puncsp: '\u2008',\n  qfr: '\uD835\uDD2E',\n  qint: '\u2A0C',\n  qopf: '\uD835\uDD62',\n  qprime: '\u2057',\n  qscr: '\uD835\uDCC6',\n  quaternions: '\u210D',\n  quatint: '\u2A16',\n  quest: '?',\n  questeq: '\u225F',\n  quo: '\"',\n  quot: '\"',\n  rAarr: '\u21DB',\n  rArr: '\u21D2',\n  rAtail: '\u291C',\n  rBarr: '\u290F',\n  rHar: '\u2964',\n  race: '\u223D\u0331',\n  racute: '\u0155',\n  radic: '\u221A',\n  raemptyv: '\u29B3',\n  rang: '\u27E9',\n  rangd: '\u2992',\n  range: '\u29A5',\n  rangle: '\u27E9',\n  raqu: '\u00BB',\n  raquo: '\u00BB',\n  rarr: '\u2192',\n  rarrap: '\u2975',\n  rarrb: '\u21E5',\n  rarrbfs: '\u2920',\n  rarrc: '\u2933',\n  rarrfs: '\u291E',\n  rarrhk: '\u21AA',\n  rarrlp: '\u21AC',\n  rarrpl: '\u2945',\n  rarrsim: '\u2974',\n  rarrtl: '\u21A3',\n  rarrw: '\u219D',\n  ratail: '\u291A',\n  ratio: '\u2236',\n  rationals: '\u211A',\n  rbarr: '\u290D',\n  rbbrk: '\u2773',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '\u298C',\n  rbrksld: '\u298E',\n  rbrkslu: '\u2990',\n  rcaron: '\u0159',\n  rcedil: '\u0157',\n  rceil: '\u2309',\n  rcub: '}',\n  rcy: '\u0440',\n  rdca: '\u2937',\n  rdldhar: '\u2969',\n  rdquo: '\u201D',\n  rdquor: '\u201D',\n  rdsh: '\u21B3',\n  real: '\u211C',\n  realine: '\u211B',\n  realpart: '\u211C',\n  reals: '\u211D',\n  rect: '\u25AD',\n  re: '\u00AE',\n  reg: '\u00AE',\n  rfisht: '\u297D',\n  rfloor: '\u230B',\n  rfr: '\uD835\uDD2F',\n  rhard: '\u21C1',\n  rharu: '\u21C0',\n  rharul: '\u296C',\n  rho: '\u03C1',\n  rhov: '\u03F1',\n  rightarrow: '\u2192',\n  rightarrowtail: '\u21A3',\n  rightharpoondown: '\u21C1',\n  rightharpoonup: '\u21C0',\n  rightleftarrows: '\u21C4',\n  rightleftharpoons: '\u21CC',\n  rightrightarrows: '\u21C9',\n  rightsquigarrow: '\u219D',\n  rightthreetimes: '\u22CC',\n  ring: '\u02DA',\n  risingdotseq: '\u2253',\n  rlarr: '\u21C4',\n  rlhar: '\u21CC',\n  rlm: '\u200F',\n  rmoust: '\u23B1',\n  rmoustache: '\u23B1',\n  rnmid: '\u2AEE',\n  roang: '\u27ED',\n  roarr: '\u21FE',\n  robrk: '\u27E7',\n  ropar: '\u2986',\n  ropf: '\uD835\uDD63',\n  roplus: '\u2A2E',\n  rotimes: '\u2A35',\n  rpar: ')',\n  rpargt: '\u2994',\n  rppolint: '\u2A12',\n  rrarr: '\u21C9',\n  rsaquo: '\u203A',\n  rscr: '\uD835\uDCC7',\n  rsh: '\u21B1',\n  rsqb: ']',\n  rsquo: '\u2019',\n  rsquor: '\u2019',\n  rthree: '\u22CC',\n  rtimes: '\u22CA',\n  rtri: '\u25B9',\n  rtrie: '\u22B5',\n  rtrif: '\u25B8',\n  rtriltri: '\u29CE',\n  ruluhar: '\u2968',\n  rx: '\u211E',\n  sacute: '\u015B',\n  sbquo: '\u201A',\n  sc: '\u227B',\n  scE: '\u2AB4',\n  scap: '\u2AB8',\n  scaron: '\u0161',\n  sccue: '\u227D',\n  sce: '\u2AB0',\n  scedil: '\u015F',\n  scirc: '\u015D',\n  scnE: '\u2AB6',\n  scnap: '\u2ABA',\n  scnsim: '\u22E9',\n  scpolint: '\u2A13',\n  scsim: '\u227F',\n  scy: '\u0441',\n  sdot: '\u22C5',\n  sdotb: '\u22A1',\n  sdote: '\u2A66',\n  seArr: '\u21D8',\n  searhk: '\u2925',\n  searr: '\u2198',\n  searrow: '\u2198',\n  sec: '\u00A7',\n  sect: '\u00A7',\n  semi: ';',\n  seswar: '\u2929',\n  setminus: '\u2216',\n  setmn: '\u2216',\n  sext: '\u2736',\n  sfr: '\uD835\uDD30',\n  sfrown: '\u2322',\n  sharp: '\u266F',\n  shchcy: '\u0449',\n  shcy: '\u0448',\n  shortmid: '\u2223',\n  shortparallel: '\u2225',\n  sh: '\u00AD',\n  shy: '\u00AD',\n  sigma: '\u03C3',\n  sigmaf: '\u03C2',\n  sigmav: '\u03C2',\n  sim: '\u223C',\n  simdot: '\u2A6A',\n  sime: '\u2243',\n  simeq: '\u2243',\n  simg: '\u2A9E',\n  simgE: '\u2AA0',\n  siml: '\u2A9D',\n  simlE: '\u2A9F',\n  simne: '\u2246',\n  simplus: '\u2A24',\n  simrarr: '\u2972',\n  slarr: '\u2190',\n  smallsetminus: '\u2216',\n  smashp: '\u2A33',\n  smeparsl: '\u29E4',\n  smid: '\u2223',\n  smile: '\u2323',\n  smt: '\u2AAA',\n  smte: '\u2AAC',\n  smtes: '\u2AAC\uFE00',\n  softcy: '\u044C',\n  sol: '/',\n  solb: '\u29C4',\n  solbar: '\u233F',\n  sopf: '\uD835\uDD64',\n  spades: '\u2660',\n  spadesuit: '\u2660',\n  spar: '\u2225',\n  sqcap: '\u2293',\n  sqcaps: '\u2293\uFE00',\n  sqcup: '\u2294',\n  sqcups: '\u2294\uFE00',\n  sqsub: '\u228F',\n  sqsube: '\u2291',\n  sqsubset: '\u228F',\n  sqsubseteq: '\u2291',\n  sqsup: '\u2290',\n  sqsupe: '\u2292',\n  sqsupset: '\u2290',\n  sqsupseteq: '\u2292',\n  squ: '\u25A1',\n  square: '\u25A1',\n  squarf: '\u25AA',\n  squf: '\u25AA',\n  srarr: '\u2192',\n  sscr: '\uD835\uDCC8',\n  ssetmn: '\u2216',\n  ssmile: '\u2323',\n  sstarf: '\u22C6',\n  star: '\u2606',\n  starf: '\u2605',\n  straightepsilon: '\u03F5',\n  straightphi: '\u03D5',\n  strns: '\u00AF',\n  sub: '\u2282',\n  subE: '\u2AC5',\n  subdot: '\u2ABD',\n  sube: '\u2286',\n  subedot: '\u2AC3',\n  submult: '\u2AC1',\n  subnE: '\u2ACB',\n  subne: '\u228A',\n  subplus: '\u2ABF',\n  subrarr: '\u2979',\n  subset: '\u2282',\n  subseteq: '\u2286',\n  subseteqq: '\u2AC5',\n  subsetneq: '\u228A',\n  subsetneqq: '\u2ACB',\n  subsim: '\u2AC7',\n  subsub: '\u2AD5',\n  subsup: '\u2AD3',\n  succ: '\u227B',\n  succapprox: '\u2AB8',\n  succcurlyeq: '\u227D',\n  succeq: '\u2AB0',\n  succnapprox: '\u2ABA',\n  succneqq: '\u2AB6',\n  succnsim: '\u22E9',\n  succsim: '\u227F',\n  sum: '\u2211',\n  sung: '\u266A',\n  sup: '\u2283',\n  sup1: '\u00B9',\n  sup2: '\u00B2',\n  sup3: '\u00B3',\n  supE: '\u2AC6',\n  supdot: '\u2ABE',\n  supdsub: '\u2AD8',\n  supe: '\u2287',\n  supedot: '\u2AC4',\n  suphsol: '\u27C9',\n  suphsub: '\u2AD7',\n  suplarr: '\u297B',\n  supmult: '\u2AC2',\n  supnE: '\u2ACC',\n  supne: '\u228B',\n  supplus: '\u2AC0',\n  supset: '\u2283',\n  supseteq: '\u2287',\n  supseteqq: '\u2AC6',\n  supsetneq: '\u228B',\n  supsetneqq: '\u2ACC',\n  supsim: '\u2AC8',\n  supsub: '\u2AD4',\n  supsup: '\u2AD6',\n  swArr: '\u21D9',\n  swarhk: '\u2926',\n  swarr: '\u2199',\n  swarrow: '\u2199',\n  swnwar: '\u292A',\n  szli: '\u00DF',\n  szlig: '\u00DF',\n  target: '\u2316',\n  tau: '\u03C4',\n  tbrk: '\u23B4',\n  tcaron: '\u0165',\n  tcedil: '\u0163',\n  tcy: '\u0442',\n  tdot: '\u20DB',\n  telrec: '\u2315',\n  tfr: '\uD835\uDD31',\n  there4: '\u2234',\n  therefore: '\u2234',\n  theta: '\u03B8',\n  thetasym: '\u03D1',\n  thetav: '\u03D1',\n  thickapprox: '\u2248',\n  thicksim: '\u223C',\n  thinsp: '\u2009',\n  thkap: '\u2248',\n  thksim: '\u223C',\n  thor: '\u00FE',\n  thorn: '\u00FE',\n  tilde: '\u02DC',\n  time: '\u00D7',\n  times: '\u00D7',\n  timesb: '\u22A0',\n  timesbar: '\u2A31',\n  timesd: '\u2A30',\n  tint: '\u222D',\n  toea: '\u2928',\n  top: '\u22A4',\n  topbot: '\u2336',\n  topcir: '\u2AF1',\n  topf: '\uD835\uDD65',\n  topfork: '\u2ADA',\n  tosa: '\u2929',\n  tprime: '\u2034',\n  trade: '\u2122',\n  triangle: '\u25B5',\n  triangledown: '\u25BF',\n  triangleleft: '\u25C3',\n  trianglelefteq: '\u22B4',\n  triangleq: '\u225C',\n  triangleright: '\u25B9',\n  trianglerighteq: '\u22B5',\n  tridot: '\u25EC',\n  trie: '\u225C',\n  triminus: '\u2A3A',\n  triplus: '\u2A39',\n  trisb: '\u29CD',\n  tritime: '\u2A3B',\n  trpezium: '\u23E2',\n  tscr: '\uD835\uDCC9',\n  tscy: '\u0446',\n  tshcy: '\u045B',\n  tstrok: '\u0167',\n  twixt: '\u226C',\n  twoheadleftarrow: '\u219E',\n  twoheadrightarrow: '\u21A0',\n  uArr: '\u21D1',\n  uHar: '\u2963',\n  uacut: '\u00FA',\n  uacute: '\u00FA',\n  uarr: '\u2191',\n  ubrcy: '\u045E',\n  ubreve: '\u016D',\n  ucir: '\u00FB',\n  ucirc: '\u00FB',\n  ucy: '\u0443',\n  udarr: '\u21C5',\n  udblac: '\u0171',\n  udhar: '\u296E',\n  ufisht: '\u297E',\n  ufr: '\uD835\uDD32',\n  ugrav: '\u00F9',\n  ugrave: '\u00F9',\n  uharl: '\u21BF',\n  uharr: '\u21BE',\n  uhblk: '\u2580',\n  ulcorn: '\u231C',\n  ulcorner: '\u231C',\n  ulcrop: '\u230F',\n  ultri: '\u25F8',\n  umacr: '\u016B',\n  um: '\u00A8',\n  uml: '\u00A8',\n  uogon: '\u0173',\n  uopf: '\uD835\uDD66',\n  uparrow: '\u2191',\n  updownarrow: '\u2195',\n  upharpoonleft: '\u21BF',\n  upharpoonright: '\u21BE',\n  uplus: '\u228E',\n  upsi: '\u03C5',\n  upsih: '\u03D2',\n  upsilon: '\u03C5',\n  upuparrows: '\u21C8',\n  urcorn: '\u231D',\n  urcorner: '\u231D',\n  urcrop: '\u230E',\n  uring: '\u016F',\n  urtri: '\u25F9',\n  uscr: '\uD835\uDCCA',\n  utdot: '\u22F0',\n  utilde: '\u0169',\n  utri: '\u25B5',\n  utrif: '\u25B4',\n  uuarr: '\u21C8',\n  uum: '\u00FC',\n  uuml: '\u00FC',\n  uwangle: '\u29A7',\n  vArr: '\u21D5',\n  vBar: '\u2AE8',\n  vBarv: '\u2AE9',\n  vDash: '\u22A8',\n  vangrt: '\u299C',\n  varepsilon: '\u03F5',\n  varkappa: '\u03F0',\n  varnothing: '\u2205',\n  varphi: '\u03D5',\n  varpi: '\u03D6',\n  varpropto: '\u221D',\n  varr: '\u2195',\n  varrho: '\u03F1',\n  varsigma: '\u03C2',\n  varsubsetneq: '\u228A\uFE00',\n  varsubsetneqq: '\u2ACB\uFE00',\n  varsupsetneq: '\u228B\uFE00',\n  varsupsetneqq: '\u2ACC\uFE00',\n  vartheta: '\u03D1',\n  vartriangleleft: '\u22B2',\n  vartriangleright: '\u22B3',\n  vcy: '\u0432',\n  vdash: '\u22A2',\n  vee: '\u2228',\n  veebar: '\u22BB',\n  veeeq: '\u225A',\n  vellip: '\u22EE',\n  verbar: '|',\n  vert: '|',\n  vfr: '\uD835\uDD33',\n  vltri: '\u22B2',\n  vnsub: '\u2282\u20D2',\n  vnsup: '\u2283\u20D2',\n  vopf: '\uD835\uDD67',\n  vprop: '\u221D',\n  vrtri: '\u22B3',\n  vscr: '\uD835\uDCCB',\n  vsubnE: '\u2ACB\uFE00',\n  vsubne: '\u228A\uFE00',\n  vsupnE: '\u2ACC\uFE00',\n  vsupne: '\u228B\uFE00',\n  vzigzag: '\u299A',\n  wcirc: '\u0175',\n  wedbar: '\u2A5F',\n  wedge: '\u2227',\n  wedgeq: '\u2259',\n  weierp: '\u2118',\n  wfr: '\uD835\uDD34',\n  wopf: '\uD835\uDD68',\n  wp: '\u2118',\n  wr: '\u2240',\n  wreath: '\u2240',\n  wscr: '\uD835\uDCCC',\n  xcap: '\u22C2',\n  xcirc: '\u25EF',\n  xcup: '\u22C3',\n  xdtri: '\u25BD',\n  xfr: '\uD835\uDD35',\n  xhArr: '\u27FA',\n  xharr: '\u27F7',\n  xi: '\u03BE',\n  xlArr: '\u27F8',\n  xlarr: '\u27F5',\n  xmap: '\u27FC',\n  xnis: '\u22FB',\n  xodot: '\u2A00',\n  xopf: '\uD835\uDD69',\n  xoplus: '\u2A01',\n  xotime: '\u2A02',\n  xrArr: '\u27F9',\n  xrarr: '\u27F6',\n  xscr: '\uD835\uDCCD',\n  xsqcup: '\u2A06',\n  xuplus: '\u2A04',\n  xutri: '\u25B3',\n  xvee: '\u22C1',\n  xwedge: '\u22C0',\n  yacut: '\u00FD',\n  yacute: '\u00FD',\n  yacy: '\u044F',\n  ycirc: '\u0177',\n  ycy: '\u044B',\n  ye: '\u00A5',\n  yen: '\u00A5',\n  yfr: '\uD835\uDD36',\n  yicy: '\u0457',\n  yopf: '\uD835\uDD6A',\n  yscr: '\uD835\uDCCE',\n  yucy: '\u044E',\n  yum: '\u00FF',\n  yuml: '\u00FF',\n  zacute: '\u017A',\n  zcaron: '\u017E',\n  zcy: '\u0437',\n  zdot: '\u017C',\n  zeetrf: '\u2128',\n  zeta: '\u03B6',\n  zfr: '\uD835\uDD37',\n  zhcy: '\u0436',\n  zigrarr: '\u21DD',\n  zopf: '\uD835\uDD6B',\n  zscr: '\uD835\uDCCF',\n  zwj: '\u200D',\n  zwnj: '\u200C'\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can\u2019t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don\u2019t work, and virtual spaces don\u2019t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it\u2019s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there\u2019s one more token (which is the cases for lines that end in an\n  // EOF), that\u2019s perfect: the last point we found starts it.\n  // If there isn\u2019t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren\u2019t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can\u2019t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we\u2019ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn\u2019t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can\u2019t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n", "/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered \u201Cuppercase\u201D, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we\u2019re in an instruction instead of a declaration, we\u2019re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n", "/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn\u2019t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.29/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.29/#html-blocks>.\n *\n * Note that `textarea` is not available in `CommonMark@0.29` but has been\n * merged to the primary branch and is slated to be released in the next release\n * of CommonMark.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can\u2019t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we\u2019ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can\u2019t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It\u2019s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we\u2019ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn\u2019t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we\u2019ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn\u2019t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can\u2019t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we\u2019re closing flow, we\u2019re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It\u2019ll always exist: we don\u2019t tokenize if it isn\u2019t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we\u2019ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we\u2019ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don\u2019t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can\u2019t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn\u2019t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we\u2019re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we\u2019re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn\u2019t work because `inspect` in document does a check\n          // w/o a bogus, which doesn\u2019t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a \u201Clive binding\u201D, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it\u2019s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n", "/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n", "/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n", "import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The \u201Cstring\u201D content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Processor} Processor\n */\n\nexport {defaultHandlers, all, one} from 'mdast-util-to-hast'\n\nexport {default} from './lib/index.js'\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Handler} Handler\n * @typedef {import('./lib/index.js').Handlers} Handlers\n * @typedef {import('./lib/index.js').H} H\n * @typedef {import('./complex-types').Raw} Raw\n */\n\nexport {one, all} from './lib/traverse.js'\nexport {defaultHandlers, toHast} from './lib/index.js'\n", "/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n", "/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {string} clobberPrefix Prefix to use to prevent DOM clobbering\n * @property {string} footnoteLabel Label to use to introduce the footnote section\n * @property {string} footnoteBackLabel Label to use to go back to a footnote call from the footnote section\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Record<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array<string>} footnoteOrder Order in which footnotes occur\n * @property {Record<string, number>} footnoteCounts Counts the same footnote was used\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you\u2019re authoring in a different language.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you\u2019re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it\u2019s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there\u2019s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node\u2019s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node\u2019s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node\u2019s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n", "/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n", "/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n", "/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n", "/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('unist-util-visit').Visitor<Definition>} DefinitionVisitor\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Object.<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', ondefinition)\n\n  return getDefinition\n\n  /** @type {DefinitionVisitor} */\n  function ondefinition(definition) {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  }\n\n  /**\n   * Get a node from the bound definition-cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function getDefinition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {number|null} index Position of `node` in `parent`\n * @param {Parent|null} parent Parent of `node`\n * @returns {VisitorResult}\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\nexport const visit =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        var parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {CONTINUE|SKIP|EXIT} Action Union of the action types\n * @typedef {number} Index Move to the sibling at index next (after node itself is completely traversed). Useful if mutating the tree, such as removing the node the visitor is currently on, or any of its previous siblings (or next siblings, in case of reverse) Results less than 0 or greater than or equal to children.length stop traversing the parent\n * @typedef {[(Action|null|undefined|void)?, (Index|null|undefined)?]} ActionTuple List with one or two values, the first an action, the second an index.\n * @typedef {null|undefined|Action|Index|ActionTuple|void} VisitorResult Any value that can be returned from a visitor\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {Array.<Parent>} ancestors Ancestors of node\n * @returns {VisitorResult}\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node\u2019s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-ignore no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      var is = convert(test)\n      var step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        var value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string} */\n        var name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          var result = []\n          /** @type {ActionTuple} */\n          var subresult\n          /** @type {number} */\n          var offset\n          /** @type {Array.<Parent>} */\n          var grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          if (node.children && result[0] !== SKIP) {\n            // @ts-ignore looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-ignore looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-ignore looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n", "/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n", "/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '\u21A9'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: 'h2',\n        properties: {id: 'footnote-label', className: ['sr-only']},\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n", "import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it\u2019s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it\u2019s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n", "const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it\u2019s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n", "/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n", "import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n", "/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n", "/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting\u2019s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n", "/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n", "/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n", "/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n", "/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or \u201Cinline note\u201D) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n", "/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n", "/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n", "/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n", "/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n", "/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n", "/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n", "/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n", "/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n", "/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n", "/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n", "/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n", "/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n", "/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n", "/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(\n    node,\n    u('text', String(node.value).replace(/[ \\t]*(\\r?\\n|\\r)[ \\t]*/g, '$1'))\n  )\n}\n", "/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n", "/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn\u2019t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It\u2019s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It\u2019s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n", "/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n", "/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n", "/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n", "import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n", "/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n", "/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n", "import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n", "export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n", "let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n", "import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n", "import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n", "import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n", "/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n", "import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n", "import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n", "import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n", "/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n", "export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n", "import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n", "/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n", "/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n", "/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n", "/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport {default} from './lib/index.js'\n", "/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast-util-is-element').Test} Test\n *\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\n *\n * @callback Build\n * @param {Element} node\n * @returns {ElementChild|ElementChild[]}\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior} [behavior='prepend']\n *   How to create links.\n * @property {Behavior} [behaviour]\n *   Please use `behavior` instead\n * @property {Properties} [properties]\n *   Extra properties to set on the link when injecting.\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\n *   `'append'`.\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\n *   hast nodes to insert in the link.\n * @property {ElementChild|ElementChild[]|Build} [group]\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\n *   `'after'`.\n *   There is no default.\n * @property {Test} [test]\n *   Test to define which heading elements are linked.\n *   Any test that can be given to `hast-util-is-element` is supported.\n *   The default (no test) is to link all headings.\n *   Can be used to link only h1-h3, or for example all except h1.\n */\n\nimport extend from 'extend'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {visit, SKIP} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/**\n * Plugin to automatically add links to headings (h1-h6).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeAutolinkHeadings(options = {}) {\n  let props = options.properties\n  const behavior = options.behaviour || options.behavior || 'prepend'\n  const content = options.content || contentDefaults\n  const group = options.group\n  const is = convertElement(options.test)\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  let method\n\n  if (behavior === 'wrap') {\n    method = wrap\n  } else if (behavior === 'before' || behavior === 'after') {\n    method = around\n  } else {\n    if (!props) {\n      props = {ariaHidden: 'true', tabIndex: -1}\n    }\n\n    method = inject\n  }\n\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (\n        headingRank(node) &&\n        hasProperty(node, 'id') &&\n        is(node, index, parent)\n      ) {\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function inject(node) {\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, extend(true, {}, props), toChildren(content, node))\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function around(node, index, parent) {\n    // Uncommon.\n    /* c8 ignore next */\n    if (typeof index !== 'number' || !parent) return\n\n    const link = create(\n      node,\n      extend(true, {}, props),\n      toChildren(content, node)\n    )\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function wrap(node) {\n    node.children = [create(node, extend(true, {}, props), node.children)]\n    return [SKIP]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild[]}\n   */\n  function toChildren(value, node) {\n    const result = toNode(value, node)\n    return Array.isArray(result) ? result : [result]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild|ElementChild[]}\n   */\n  function toNode(value, node) {\n    if (typeof value === 'function') return value(node)\n    return extend(true, Array.isArray(value) ? [] : {}, value)\n  }\n\n  /**\n   * @param {Element} node\n   * @param {Properties} props\n   * @param {ElementChild[]} children\n   * @returns {Element}\n   */\n  function create(node, props, children) {\n    return {\n      type: 'element',\n      tagName: 'a',\n      properties: Object.assign({}, props, {\n        // Fix hast types and make them required.\n        /* c8 ignore next */\n        href: '#' + (node.properties || {}).id\n      }),\n      children\n    }\n  }\n}\n", "var own = {}.hasOwnProperty\n\n/**\n * Check if `node` has a set `name` property.\n *\n * @param {unknown} node\n * @param {string} name\n * @returns {boolean}\n */\nexport function hasProperty(node, name) {\n  /** @type {unknown} */\n  var value =\n    name &&\n    node &&\n    typeof node === 'object' &&\n    // @ts-ignore Looks like a node.\n    node.type === 'element' &&\n    // @ts-ignore Looks like an element.\n    node.properties &&\n    // @ts-ignore Looks like an element.\n    own.call(node.properties, name) &&\n    // @ts-ignore Looks like an element.\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n", "/**\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Parent['children'][number]} Node\n */\n\n/**\n * Rank of a heading: H1 -> 1, H2 -> 2, etc.\n *\n * @param {Node} node\n * @returns {number|null}\n */\nexport function headingRank(node) {\n  var name =\n    (node && node.type === 'element' && node.tagName.toLowerCase()) || ''\n  var code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */ ? code - 48 /* `0` */ : null\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n *\n * @typedef {string} TagName\n * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test\n */\n\n/**\n * @template {Element} T\n * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest\n */\n\n/**\n * Check if an element passes a test\n *\n * @callback TestFunctionAnything\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if an element passes a certain node test\n *\n * @template {Element} X\n * @callback TestFunctionPredicate\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {element is X}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\n// Check if `node` is an `element` and whether it passes the given test.\nexport const isElement =\n  /**\n   * Check if a node is an element and passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test] When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number} [index] Position of `node` in `parent`\n     * @param {Parent} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * @param {Array.<TagName|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node\u2019s tag\n * name for said string.\n *\n * @param {TagName} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Utility to return true if this is an element.\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n", "/**\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('hast-util-sanitize').Schema} Options\n *   The sanitation schema defines how and if nodes and properties should be cleaned.\n *   See `hast-util-sanitize`.\n *   The default schema is exported as `defaultSchema`.\n */\n\nimport {sanitize as hastUtilSanitize, defaultSchema} from 'hast-util-sanitize'\n\n/**\n * Plugin to sanitize HTML.\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root, Root>}\n */\nexport default function rehypeSanitize(options = defaultSchema) {\n  // @ts-expect-error: assume input `root` matches output root.\n  return (tree) => hastUtilSanitize(tree, options)\n}\n\nexport {defaultSchema} from 'hast-util-sanitize'\n", "/**\n * @typedef {import('./lib/index.js').Schema} Schema\n */\n\nexport {sanitize} from './lib/index.js'\nexport {defaultSchema} from './lib/schema.js'\n", "/**\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Properties} Properties\n * @typedef {Parent['children'][number]|Root} Node\n *\n * @typedef {Properties[string]} PropertyValue Possible property values\n * @typedef {string|number|boolean} PrimitivePropertyValue Possible primitive HTML attribute values\n * @typedef {string|[string, ...PrimitivePropertyValue[]]} AttributeValue\n * @typedef {Object.<string, Array.<PrimitivePropertyValue>>} AttributeMap\n *\n * @typedef Schema Sanitization configuration\n * @property {Object<string, Array<AttributeValue>>} [attributes] Map of tag names to allowed property names. The special '*' key defines property names allowed on all elements\n * @property {Object<string, Object<string, PropertyValue>>} [required] Map of tag names to required property names and their default property value\n * @property {Array.<string>} [tagNames] List of allowed tag names\n * @property {Object<string, Array.<string>>} [protocols] Map of protocols to allow in property values\n * @property {Object<string, Array.<string>>} [ancestors] Map of tag names to their required ancestor elements\n * @property {Array.<string>} [clobber] List of allowed property names which can clobber\n * @property {string} [clobberPrefix] Prefix to use before potentially clobbering property names\n * @property {Array.<string>} [strip] Names of elements to strip from the tree\n * @property {boolean} [allowComments] Whether to allow comments\n * @property {boolean} [allowDoctypes] Whether to allow doctypes\n *\n * @typedef {(schema: Schema, value: unknown, node: Node, stack: Array.<string>) => unknown} Handler\n * @typedef {Object.<string, Handler>} NodeDefinition\n * @typedef {((schema: Schema, node: Node) => NodeDefinition)} NodeDefinitionGetter\n * @typedef {Object.<string, NodeDefinition|NodeDefinitionGetter>} NodeSchema\n */\n\nimport {defaultSchema} from './schema.js'\n\nvar own = {}.hasOwnProperty\nvar push = [].push\n\n/** @type {NodeSchema} */\nvar nodeSchema = {\n  root: {children: all},\n  doctype: handleDoctype,\n  comment: handleComment,\n  element: {\n    tagName: handleTagName,\n    properties: handleProperties,\n    children: all\n  },\n  text: {value: handleValue},\n  '*': {data: allow, position: allow}\n}\n\n/**\n * Utility to sanitize a tree\n *\n * @param {Node} node Hast tree to sanitize\n * @param {Schema} [schema] Schema defining how to sanitize - defaults to Github style sanitation\n */\nexport function sanitize(node, schema) {\n  /** @type {Node} */\n  var ctx = {type: 'root', children: []}\n  /** @type {Node|Array.<Node>} */\n  var replace\n\n  if (node && typeof node === 'object' && node.type) {\n    replace = one(Object.assign({}, defaultSchema, schema || {}), node, [])\n\n    if (replace) {\n      if (Array.isArray(replace)) {\n        if (replace.length === 1) {\n          ctx = replace[0]\n        } else {\n          // @ts-ignore Assume `root` is not a child.\n          ctx.children = replace\n        }\n      } else {\n        ctx = replace\n      }\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {Schema} schema\n * @param {Node} node\n * @param {Array.<string>} stack\n * @returns {Node|Array.<Node>|null}\n */\nfunction one(schema, node, stack) {\n  var type = node && node.type\n  /** @type {Node} */\n  // @ts-ignore rest of props added later.\n  var replacement = {type: node.type}\n  /** @type {boolean} */\n  var replace\n  /** @type {NodeDefinition|NodeDefinitionGetter} */\n  var definition\n  /** @type {NodeDefinition} */\n  var allowed\n  /** @type {unknown} */\n  var result\n  /** @type {string} */\n  var key\n\n  if (own.call(nodeSchema, type)) {\n    definition = nodeSchema[type]\n\n    if (typeof definition === 'function') {\n      definition = definition(schema, node)\n    }\n\n    if (definition) {\n      replace = true\n      allowed = Object.assign({}, definition, nodeSchema['*'])\n\n      for (key in allowed) {\n        if (own.call(allowed, key)) {\n          result = allowed[key](schema, node[key], node, stack)\n\n          // eslint-disable-next-line max-depth\n          if (result === false) {\n            replace = null\n            // Set the non-safe value.\n            replacement[key] = node[key]\n          } else if (result !== undefined && result !== null) {\n            replacement[key] = result\n          }\n        }\n      }\n    }\n  }\n\n  if (replace) {\n    return replacement\n  }\n\n  return replacement.type === 'element' &&\n    !schema.strip.includes(replacement.tagName)\n    ? replacement.children\n    : null\n}\n\n/**\n * Sanitize `children`.\n *\n * @type {Handler}\n * @param {Array.<Node>} children\n * @returns {Array.<Node>}\n */\nfunction all(schema, children, node, stack) {\n  /** @type {Array.<Node>} */\n  var results = []\n  var index = -1\n  /** @type {Node|Array.<Node>} */\n  var value\n\n  if (Array.isArray(children)) {\n    if (node.type === 'element') {\n      stack.push(node.tagName)\n    }\n\n    while (++index < children.length) {\n      value = one(schema, children[index], stack)\n\n      if (value) {\n        if ('length' in value) {\n          push.apply(results, value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      stack.pop()\n    }\n  }\n\n  return results\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleDoctype(schema) {\n  return schema.allowDoctypes ? {name: handleDoctypeName} : null\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleComment(schema) {\n  return schema.allowComments ? {value: handleCommentValue} : null\n}\n\n/**\n * Sanitize `properties`.\n *\n * @type {Handler}\n * @param {Properties} properties\n * @returns {Properties}\n */\nfunction handleProperties(schema, properties, node, stack) {\n  var name = handleTagName(schema, node.tagName, node, stack)\n  /* c8 ignore next */\n  var reqs = schema.required || {}\n  var props = properties || {}\n  var allowed = Object.assign(\n    {},\n    toPropertyValueMap(schema.attributes['*']),\n    toPropertyValueMap(\n      name && own.call(schema.attributes, name) ? schema.attributes[name] : []\n    )\n  )\n  /** @type {Properties} */\n  var result = {}\n  /** @type {Array.<PrimitivePropertyValue>} */\n  var definition\n  /** @type {PropertyValue} */\n  var value\n  /** @type {string} */\n  var key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      if (own.call(allowed, key)) {\n        definition = allowed[key]\n      } else if (data(key) && own.call(allowed, 'data*')) {\n        definition = allowed['data*']\n      } else {\n        continue\n      }\n\n      value = props[key]\n      value = Array.isArray(value)\n        ? handlePropertyValues(schema, value, key, definition)\n        : handlePropertyValue(schema, value, key, definition)\n\n      if (value !== undefined && value !== null) {\n        result[key] = value\n      }\n    }\n  }\n\n  if (name && own.call(reqs, name)) {\n    for (key in reqs[name]) {\n      if (!own.call(result, key)) {\n        result[key] = reqs[name][key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Always return a valid HTML5 doctype.\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleDoctypeName() {\n  return 'html'\n}\n\n/**\n * Sanitize `tagName`.\n *\n * @type {Handler}\n * @returns {string|false}\n */\nfunction handleTagName(schema, tagName, _, stack) {\n  var name = typeof tagName === 'string' ? tagName : ''\n  var index = -1\n\n  if (!name || name === '*' || !schema.tagNames.includes(name)) {\n    return false\n  }\n\n  // Some nodes can break out of their context if they don\u2019t have a certain\n  // ancestor.\n  if (own.call(schema.ancestors, name)) {\n    while (++index < schema.ancestors[name].length) {\n      if (stack.includes(schema.ancestors[name][index])) {\n        return name\n      }\n    }\n\n    return false\n  }\n\n  return name\n}\n\n/**\n * See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleCommentValue(_, value) {\n  /** @type {string} */\n  var result = typeof value === 'string' ? value : ''\n  var index = result.indexOf('-->')\n  return index < 0 ? result : result.slice(0, index)\n}\n\n/**\n * Sanitize `value`.\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleValue(_, value) {\n  return typeof value === 'string' ? value : ''\n}\n\n/**\n * Allow `value`.\n *\n * @type {Handler}\n */\nfunction allow(_, value) {\n  return value\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {Schema} schema\n * @param {Array.<unknown>} values\n * @param {string} prop\n * @param {Array.<PrimitivePropertyValue>} definition\n * @returns {Array.<string|number>}\n */\nfunction handlePropertyValues(schema, values, prop, definition) {\n  var index = -1\n  /** @type {Array.<string|number>} */\n  var result = []\n  /** @type {PropertyValue} */\n  var value\n\n  while (++index < values.length) {\n    value = handlePropertyValue(schema, values[index], prop, definition)\n\n    if (value !== undefined && value !== null) {\n      // @ts-ignore Assume no booleans were in arrays.\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @param {Array.<PropertyValue>} definition\n * @returns {PropertyValue}\n */\nfunction handlePropertyValue(schema, value, prop, definition) {\n  if (\n    (typeof value === 'boolean' ||\n      typeof value === 'number' ||\n      typeof value === 'string') &&\n    safeProtocol(schema, value, prop) &&\n    (definition.length === 0 || definition.includes(value))\n  ) {\n    return schema.clobber.includes(prop) ? schema.clobberPrefix + value : value\n  }\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @returns {boolean}\n */\nfunction safeProtocol(schema, value, prop) {\n  var url = String(value)\n  var colon = url.indexOf(':')\n  var questionMark = url.indexOf('?')\n  var numberSign = url.indexOf('#')\n  var slash = url.indexOf('/')\n  var protocols = own.call(schema.protocols, prop)\n    ? schema.protocols[prop].concat()\n    : []\n  var index = -1\n\n  if (\n    protocols.length === 0 ||\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it\u2019s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  while (++index < protocols.length) {\n    if (\n      colon === protocols[index].length &&\n      url.slice(0, protocols[index].length) === protocols[index]\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a map from a list of props or a list of properties and values.\n *\n * @param {Array.<AttributeValue>} values\n * @returns {AttributeMap}\n */\nfunction toPropertyValueMap(values) {\n  /** @type {AttributeMap} */\n  var result = {}\n  var index = -1\n  /** @type {AttributeValue} */\n  var value\n\n  while (++index < values.length) {\n    value = values[index]\n\n    if (Array.isArray(value)) {\n      result[value[0]] = value.slice(1)\n    } else {\n      result[value] = []\n    }\n  }\n\n  return result\n}\n\n/**\n * Check if `prop` is a data property.\n *\n * @param {string} prop\n * @returns {boolean}\n */\nfunction data(prop) {\n  return prop.length > 4 && prop.slice(0, 4).toLowerCase() === 'data'\n}\n", "/** @type {import('./index.js').Schema} */\nexport const defaultSchema = {\n  strip: ['script'],\n  clobberPrefix: 'user-content-',\n  clobber: ['name', 'id'],\n  ancestors: {\n    tbody: ['table'],\n    tfoot: ['table'],\n    thead: ['table'],\n    td: ['table'],\n    th: ['table'],\n    tr: ['table']\n  },\n  protocols: {\n    href: ['http', 'https', 'mailto', 'xmpp', 'irc', 'ircs'],\n    cite: ['http', 'https'],\n    src: ['http', 'https'],\n    longDesc: ['http', 'https']\n  },\n  tagNames: [\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'br',\n    'b',\n    'i',\n    'strong',\n    'em',\n    'a',\n    'pre',\n    'code',\n    'img',\n    'tt',\n    'div',\n    'ins',\n    'del',\n    'sup',\n    'sub',\n    'p',\n    'ol',\n    'ul',\n    'table',\n    'thead',\n    'tbody',\n    'tfoot',\n    'blockquote',\n    'dl',\n    'dt',\n    'dd',\n    'kbd',\n    'q',\n    'samp',\n    'var',\n    'hr',\n    'ruby',\n    'rt',\n    'rp',\n    'li',\n    'tr',\n    'td',\n    'th',\n    's',\n    'strike',\n    'summary',\n    'details',\n    'caption',\n    'figure',\n    'figcaption',\n    'abbr',\n    'bdo',\n    'cite',\n    'dfn',\n    'mark',\n    'small',\n    'span',\n    'time',\n    'wbr',\n    'input'\n  ],\n  attributes: {\n    a: ['href'],\n    img: ['src', 'longDesc'],\n    input: [\n      ['type', 'checkbox'],\n      ['disabled', true]\n    ],\n    li: [['className', 'task-list-item']],\n    div: ['itemScope', 'itemType'],\n    blockquote: ['cite'],\n    del: ['cite'],\n    ins: ['cite'],\n    q: ['cite'],\n    '*': [\n      'abbr',\n      'accept',\n      'acceptCharset',\n      'accessKey',\n      'action',\n      'align',\n      'alt',\n      'ariaDescribedBy',\n      'ariaHidden',\n      'ariaLabel',\n      'ariaLabelledBy',\n      'axis',\n      'border',\n      'cellPadding',\n      'cellSpacing',\n      'char',\n      'charOff',\n      'charSet',\n      'checked',\n      'clear',\n      'cols',\n      'colSpan',\n      'color',\n      'compact',\n      'coords',\n      'dateTime',\n      'dir',\n      'disabled',\n      'encType',\n      'htmlFor',\n      'frame',\n      'headers',\n      'height',\n      'hrefLang',\n      'hSpace',\n      'isMap',\n      'id',\n      'label',\n      'lang',\n      'maxLength',\n      'media',\n      'method',\n      'multiple',\n      'name',\n      'noHref',\n      'noShade',\n      'noWrap',\n      'open',\n      'prompt',\n      'readOnly',\n      'rel',\n      'rev',\n      'rows',\n      'rowSpan',\n      'rules',\n      'scope',\n      'selected',\n      'shape',\n      'size',\n      'span',\n      'start',\n      'summary',\n      'tabIndex',\n      'target',\n      'title',\n      'type',\n      'useMap',\n      'vAlign',\n      'value',\n      'vSpace',\n      'width',\n      'itemProp'\n    ]\n  },\n  required: {\n    input: {\n      type: 'checkbox',\n      disabled: true\n    }\n  }\n}\n", "/**\n * @typedef {import('hast').Root} Root\n */\n\nimport Slugger from 'github-slugger'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\nconst slugs = new Slugger()\n\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<Array<void>, Root>}\n */\nexport default function rehypeSlug() {\n  return (tree) => {\n    slugs.reset()\n\n    visit(tree, 'element', (node) => {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = slugs.slug(toString(node))\n      }\n    })\n  }\n}\n", "/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // \u201CThe concatenation of data of all the Text node descendants of the context\n  // object, in tree order.\u201D\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // \u201CContext object\u2019s data.\u201D\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n", "export {gfmAutolinkLiteral} from './lib/syntax.js'\nexport {gfmAutolinkLiteralHtml} from './lib/html.js'\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that\u2019s not how it\u2019s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.\u9EDE\u770B.com`,\n    // so that\u2019s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it\u2019s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it\u2019s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we\u2019ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as \u201Cwalked into\u201D w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n", "/**\n * @typedef {import('./lib/html.js').Options} HtmlOptions\n */\nexport {gfmFootnote} from './lib/syntax.js'\nexport {gfmFootnoteHtml} from './lib/html.js'\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It\u2019s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we\u2019ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It\u2019s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It\u2019s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n", "/**\n * @typedef {import('./lib/syntax.js').Options} Options\n */\nexport {gfmStrikethroughHtml} from './lib/html.js'\nexport {gfmStrikethrough} from './lib/syntax.js'\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n", "export {gfmTableHtml} from './lib/html.js'\nexport {gfmTable} from './lib/syntax.js'\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It\u2019s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can\u2019t be space or eols at the start of a construct, so we\u2019re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can\u2019t be space or eols at the start of a construct, so we\u2019re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don\u2019t care about tokens, but we open a bogus one\n    // so we\u2019re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n", "export {gfmTaskListItemHtml} from './lib/html.js'\nexport {gfmTaskListItem} from './lib/syntax.js'\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there\u2019s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces\u2026\n      ((tail && tail[1].type === 'whitespace') || // \u2026or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we\u2019d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport {gfmFromMarkdown, gfmToMarkdown} from './lib/index.js'\n", "/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n", "/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n", "/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('./lib/index.js').Find} Find\n * @typedef {import('./lib/index.js').Replace} Replace\n * @typedef {import('./lib/index.js').ReplaceFunction} ReplaceFunction\n * @typedef {import('./lib/index.js').FindAndReplaceTuple} FindAndReplaceTuple\n * @typedef {import('./lib/index.js').FindAndReplaceSchema} FindAndReplaceSchema\n * @typedef {import('./lib/index.js').FindAndReplaceList} FindAndReplaceList\n */\n\nexport {findAndReplace} from './lib/index.js'\n", "/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don\u2019t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don\u2019t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value === false) {\n            position = undefined\n          } else {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (position === undefined) {\n          nodes = [node]\n        } else {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n", "/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n", "/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don\u2019t work in this matching: `&copy;` does\n * not match `\u00A9`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we\u2019re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n", "/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n", "/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn\u2019t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n", "/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n", "/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n", "/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n", "/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n", "/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [{character: '~', inConstruct: 'phrasing'}],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n", "/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it\u2019s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we\u2019d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can\u2019t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport {gfmTableFromMarkdown, gfmTableToMarkdown} from './lib/index.js'\n", "/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don\u2019t (but can\u2019t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn\u2019t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n", "/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don\u2019t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can\u2019t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n", "/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|Array<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn\u2019t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > \uD83D\uDC49 **Note**: please don\u2019t use this: it could create fragile structures\n *   > that aren\u2019t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > \uD83D\uDC49 **Note**: please don\u2019t use this: it could create fragile structures\n *   > that aren\u2019t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its \u201Cvisible\u201D size.\n *   Note that what is and isn\u2019t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['\u4E2D\u6587', 'Charlie'],\n *     ['\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | \u4E2D\u6587 | Charlie |\n *   | \uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['\u4E2D\u6587', 'Charlie'],\n *       ['\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | \u4E2D\u6587  | Charlie |\n *   | \uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {Array<Array<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don\u2019t align delimiters, but otherwise we\u2019d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don\u2019t add the opening space if we\u2019re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n", "/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We\u2019re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n", "/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n", "/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n", "import React from \"react\";\n// @ts-ignore\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nexport function CodeBlock({\n  text,\n  language,\n  ...rest\n}: {\n  text: string;\n  language: string;\n  [key: string]: any;\n}) {\n  return (\n    <SyntaxHighlighter\n      showLineNumbers={false}\n      useInlineStyles={false}\n      language={language}\n      children={text}\n      wrapLongLines\n      {...rest}\n    />\n  );\n}\n", "import * as React from 'react'\n\nimport { Switch } from '../../Switch'\nimport { PostEditorContext } from './PostEditor'\n\nexport function PreviewSwitch() {\n  const context = React.useContext(PostEditorContext)\n  const { isPreviewing, setIsPreviewing } = context\n\n  return (\n    <Switch\n      label={'Preview'}\n      defaultEnabled={isPreviewing}\n      onChange={(val) => setIsPreviewing(val)}\n    />\n  )\n}\n", "import { Switch as SwitchComponent } from \"@headlessui/react\";\nimport { useState } from \"react\";\n\ninterface SwitchProps {\n  label: string | null;\n  onChange: (arg: boolean) => void;\n  defaultEnabled: boolean;\n}\n\nexport function Switch({\n  label = null,\n  onChange = () => null,\n  defaultEnabled = false,\n}: SwitchProps) {\n  const [enabled, setEnabled] = useState(defaultEnabled);\n  function handleChange() {\n    onChange && onChange(!enabled);\n    setEnabled(!enabled);\n  }\n  return (\n    <SwitchComponent.Group>\n      <div className=\"flex items-center\">\n        {label && (\n          <SwitchComponent.Label className=\"text-primary mr-2 text-sm font-medium\">\n            {label}\n          </SwitchComponent.Label>\n        )}\n        <SwitchComponent\n          checked={enabled}\n          onChange={handleChange}\n          className={`${\n            enabled ? \"bg-blue-500\" : \"bg-gray-200 dark:bg-gray-700\"\n          } relative inline-flex h-5 w-9 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2`}\n        >\n          <span\n            className={`${\n              enabled ? \"translate-x-5\" : \"translate-x-1\"\n            } inline-block h-3 w-3 transform rounded-full bg-white transition-transform`}\n          />\n        </SwitchComponent>\n      </div>\n    </SwitchComponent.Group>\n  );\n}\n", "import type { MetaFunction } from \"@remix-run/server-runtime\";\nimport { ListDetailView, SiteLayout } from \"../components/Layouts\";\nimport { UserSettings } from \"../components/UserSettings\";\nimport routes from \"../../config/routes\";\nimport { Meta } from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  title: routes.settings.seo.title,\n  description: routes.settings.seo.description,\n});\n\nexport default function Settings() {\n  return (\n    <>\n      <head>\n        <Meta />\n      </head>\n      <SiteLayout>\n        <ListDetailView list={null} hasDetail detail={<UserSettings />} />\n      </SiteLayout>\n    </>\n  );\n}\n", "import { useTransition } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport { useOptionalUser } from \"~/utils\";\n\nimport { Detail } from \"../ListDetail/Detail\";\nimport { TitleBar } from \"../ListDetail/TitleBar\";\nimport { EmailForm } from \"./Email\";\n//import { EmailPreferences } from \"./EmailPreferences\";\nimport { UserSettingsFooter } from \"./Footer\";\nimport { SignedOut } from \"./SignedOut\";\nimport { UsernameForm } from \"./Username\";\n\nexport function UserSettings() {\n  const user = useOptionalUser();\n  const transition = useTransition();\n\n  const titleRef = React.useRef(null);\n  const scrollContainerRef = React.useRef(null);\n\n  if (!user && transition.state === \"loading\") {\n    return <Detail.Loading />;\n  }\n\n  if (!user) {\n    return <SignedOut />;\n  }\n\n  return (\n    <Detail.Container ref={scrollContainerRef}>\n      <TitleBar\n        magicTitle\n        title={\"Settings\"}\n        titleRef={titleRef}\n        scrollContainerRef={scrollContainerRef}\n      />\n      <Detail.ContentContainer>\n        <Detail.Header>\n          <Detail.Title ref={titleRef}>Settings</Detail.Title>\n        </Detail.Header>\n\n        <div className=\"divide-y divide-gray-200 py-12 dark:divide-gray-800\">\n          <div className=\"space-y-8 py-12\">\n            <h3 className=\"text-primary text-lg font-bold\">Account</h3>\n            <EmailForm viewer={user} />\n            <UsernameForm viewer={user} />\n          </div>\n\n          {/* {user.email && (\n            <div className=\"space-y-8 py-12\">\n              <h3 className=\"text-primary text-lg font-bold\">Emails</h3>\n              <EmailPreferences viewer={user} />\n            </div>\n          )} */}\n\n          <UserSettingsFooter />\n        </div>\n      </Detail.ContentContainer>\n    </Detail.Container>\n  );\n}\n", "import { Form, useTransition } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport type { User } from \"~/services/models/user\";\n\n// import { WarnAlert } from \"../Alert\";\nimport Button from \"../Button\";\nimport { Input } from \"../Input\";\nimport { LoadingSpinner } from \"../LoadingSpinner\";\n\nexport function EmailForm(props: { viewer: User }) {\n  const { viewer } = props;\n  const isNew = !viewer.email;\n\n  const [isEditing, setIsEditing] = React.useState(isNew);\n  const [email, setEmail] = React.useState(\"\");\n  const transition = useTransition();\n\n  let isSettingEmail =\n    transition.state === \"submitting\" &&\n    transition.submission.formData.get(\"_action\") === \"set_email\";\n\n  function handleEmailChange(e: { target: { value: string } }) {\n    setEmail(e.target.value.trim());\n  }\n\n  return (\n    <div className=\"space-y-2\">\n      <p className=\"text-primary font-semibold\">Email</p>\n\n      {viewer.email && (\n        <div className=\"text-primary flex space-x-2\">\n          <span>{viewer.email}</span>\n          <span>\u00B7</span>\n          <button\n            className=\"cursor-pointer font-medium text-blue-500\"\n            onClick={() => setIsEditing(!isEditing)}\n          >\n            {isEditing ? \"Cancel\" : \"Edit\"}\n          </button>\n        </div>\n      )}\n\n      {(isNew || isEditing) && (\n        <Form method=\"post\" className=\"space-y-2\" noValidate>\n          {isNew && (\n            <p className=\"text-quaternary text-sm\">\n              Adding your email will allow you to turn on replies for comments\n              or AMA questions.\n            </p>\n          )}\n          <Input\n            type=\"email\"\n            placeholder={\n              isNew ? \"Add your email address\" : \"Update your email address\"\n            }\n            value={email}\n            autoFocus\n            onChange={handleEmailChange}\n          />\n          <div className=\"flex justify-between\">\n            <Button type=\"submit\" value=\"set_email\" name=\"_action\">\n              {isSettingEmail ? <LoadingSpinner /> : \"Save email\"}\n            </Button>\n          </div>\n        </Form>\n      )}\n    </div>\n  );\n}\n", "import { Form } from \"@remix-run/react\";\nimport { useOptionalUser } from \"~/utils\";\n\nimport Button, { DeleteButton } from \"../Button\";\nimport { DeleteUserDialog } from \"./DeleteUserDialog\";\n\nexport function UserSettingsFooter() {\n  const user = useOptionalUser();\n\n  if (user) {\n    return (\n      <div className=\"flex justify-between space-x-4 py-12\">\n        <Form action=\"/logout\" method=\"post\">\n          <Button href=\"/logout\" as=\"logout\" type=\"submit\">\n            Log out\n          </Button>\n        </Form>\n        <DeleteUserDialog trigger={<DeleteButton>Delete account</DeleteButton>} />\n      </div>\n    );\n  }\n  return null;\n}\n", "import { Form, useTransition } from \"@remix-run/react\";\nimport { useOptionalUser } from \"~/utils\";\n\nimport { DeleteButton } from \"../Button\";\nimport { DialogComponent } from \"../Dialog\";\nimport { LoadingSpinner } from \"../LoadingSpinner\";\n\nexport function DeleteUserDialog({ trigger }: any) {\n  const transition = useTransition();\n  const user = useOptionalUser();\n\n  let isDeleting =\n    transition.state === \"submitting\" &&\n    transition.submission.formData.get(\"_action\") === \"delete_my_account\";\n\n  return (\n    <DialogComponent\n      trigger={trigger}\n      title={\"Delete account\"}\n      modalContent={() => (\n        <div className=\"text-primary flex flex-col space-y-4 p-4 text-left\">\n          <p>All comments, reactions, and AMA questions will be deleted.</p>\n          <Form action=\"/delete-account\" method=\"post\">\n            <input type=\"hidden\" name=\"user_email\" value={user?.email} />\n            <DeleteButton\n              as=\"delete_my_account\"\n              value=\"delete_my_account\"\n              name=\"_action\"\n              type=\"submit\"\n            >\n              {isDeleting ? <LoadingSpinner /> : \"Delete my account\"}\n            </DeleteButton>\n          </Form>\n        </div>\n      )}\n    />\n  );\n}\n", "import { useOptionalUser } from \"~/utils\";\n\nimport { GhostButton } from \"../Button\";\nimport { Detail } from \"../ListDetail/Detail\";\nimport { TitleBar } from \"../ListDetail/TitleBar\";\n\nexport function SignedOut() {\n  const user = useOptionalUser();\n\n  if (!user) {\n    return (\n      <Detail.Container>\n        <TitleBar title=\"Settings\" />\n        <div className=\"flex flex-1 flex-col items-center justify-center\">\n          <GhostButton href=\"/login\" size=\"large\">\n            <svg\n              viewBox=\"0 0 16 14\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"14\"\n              fill=\"currentColor\"\n            >\n              <path d=\"M14.3617 3.35401C14.3687 3.49999 14.3713 3.64777 14.3713 3.79376C14.3713 8.29039 11.0696 13.4737 5.03217 13.4737C3.17739 13.4737 1.45304 12.9105 0 11.9445C0.859457 12.0522 1.73097 11.9833 2.56473 11.7418C3.39849 11.5003 4.17814 11.0908 4.85913 10.5369C4.17428 10.5235 3.51059 10.2886 2.96085 9.86516C2.41112 9.44169 2.00282 8.85078 1.79304 8.17505C2.28527 8.27044 2.79186 8.25042 3.27565 8.11647C2.53271 7.96035 1.8647 7.54285 1.38482 6.9347C0.904951 6.32655 0.642734 5.56518 0.642609 4.77959V4.73724C1.09843 5.00001 1.60823 5.14614 2.12957 5.16347C1.4338 4.6828 0.941284 3.94507 0.752536 3.10088C0.563788 2.25669 0.693041 1.36968 1.11391 0.620882C1.93808 1.67201 2.96639 2.53173 4.13207 3.14418C5.29774 3.75663 6.5747 4.10813 7.88 4.17584C7.82353 3.92137 7.79523 3.66107 7.79565 3.39996C7.79565 2.9534 7.88054 2.51121 8.04548 2.09865C8.21041 1.68609 8.45215 1.31124 8.7569 0.995511C9.06165 0.679784 9.42344 0.429363 9.82159 0.258552C10.2197 0.0877414 10.6465 -0.00011384 11.0774 4.51813e-06C11.5265 -0.000754465 11.9709 0.0941183 12.3832 0.278738C12.7954 0.463357 13.1667 0.733786 13.4739 1.07325C14.2088 0.922489 14.9136 0.643368 15.5583 0.247815C15.3131 1.03559 14.8001 1.70424 14.1148 2.12937C14.7654 2.04944 15.4009 1.86901 16 1.5941C15.5599 2.27755 15.005 2.87363 14.3617 3.35401V3.35401Z\" />\n            </svg>\n            <span>Sign in</span>\n          </GhostButton>\n        </div>\n      </Detail.Container>\n    );\n  }\n  return null;\n}\n", "import { Form, useTransition } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport type { User } from \"~/services/models/user\";\n\nimport Button from \"../Button\";\nimport { Input } from \"../Input\";\nimport { LoadingSpinner } from \"../LoadingSpinner\";\n\nexport function UsernameForm(props: { viewer: User }) {\n  const { viewer } = props;\n  const [username, setUsername] = React.useState(\"\");\n  const [isEditing, setIsEditing] = React.useState(false);\n  const [error, setError] = React.useState<boolean | null>(null);\n  const transition = useTransition();\n\n  let isAdding =\n    transition.state === \"submitting\" &&\n    transition.submission.formData.get(\"_action\") === \"save_username\";\n\n  // function onSubmit(e: { preventDefault: () => void }) {\n  //   e.preventDefault()\n  //   if (editUserResponse.loading) return\n  //   if (username === viewer.username) return setIsEditing(false)\n  //   if (!validUsername(username)) return setError(true)\n  //   editUser()\n  // }\n\n  function handleUsernameChange(e: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setError(false);\n    setUsername(e.target.value);\n  }\n\n  return (\n    <div className=\"space-y-2\">\n      <p className=\"text-primary font-semibold\">Username</p>\n\n      {viewer.username || !viewer.username ? (\n        <div className=\"text-primary flex space-x-2\">\n          <span>@{viewer.username}</span>\n          <span>\u00B7</span>\n          <button\n            className=\"cursor-pointer font-medium text-blue-500\"\n            onClick={() => setIsEditing(!isEditing)}\n          >\n            {isEditing ? \"Cancel\" : \"Edit\"}\n          </button>\n        </div>\n      ) : null}\n\n      {isEditing && (\n        <Form className=\"space-y-2\" action=\"/settings\" method=\"post\">\n          <Input\n            type=\"text\"\n            placeholder={\"Choose a username\"}\n            value={username}\n            autoFocus\n            onChange={handleUsernameChange}\n          />\n          {error && (\n            <p className={`text-xs text-red-500`}>\n              Usernames should be between 4 and 16 characters and only have\n              numbers, letters, or underscores.\n            </p>\n          )}\n          <p className=\"text-quaternary text-xs\">\n            Updating your username will break any existing links to your\n            profile, so you know, don\u2019t do it too often.\n          </p>\n          <div className=\"flex justify-between\">\n            <Button type=\"submit\" name=\"_action\" value=\"save_username\">\n              {isAdding ? <LoadingSpinner /> : \"Save username\"}\n            </Button>\n          </div>\n        </Form>\n      )}\n    </div>\n  );\n}\n", "import { defaultSEO, extendSEO } from './seo'\n\nconst routes = {\n  home: {\n    label: 'Home',\n    path: '/',\n    seo: defaultSEO,\n  },\n  about: {\n    label: 'About',\n    path: '/about',\n    seo: extendSEO({\n      title: 'About',\n      url: 'about',\n    }),\n  },\n  writing: {\n    label: 'Writing',\n    path: '/writing',\n    seo: extendSEO({\n      title: 'Writing',\n      description: 'Thinking out loud about software design and development.',\n      image: 'og/writing.png',\n      url: 'writing',\n    }),\n  },\n  crit: {\n    label: 'Crit',\n    path: '/crit',\n    seo: extendSEO({\n      title: 'Crit',\n      description: 'A comprehensive product design health report.',\n      image: 'og/crit.png',\n      url: 'crit',\n    }),\n  },\n  hn: {\n    label: 'HN',\n    path: '/hn',\n    seo: extendSEO({\n      title: 'HN',\n      description: 'A better Hacker News.',\n      image: 'og/hn.png',\n      url: 'hn',\n    }),\n  },\n  bookmarks: {\n    label: 'Bookmarks',\n    path: '/bookmarks',\n    seo: extendSEO({\n      title: 'Bookmarks',\n      description: 'Internet things, saved for later.',\n      image: 'og/bookmarks.png',\n      url: 'bookmarks',\n    }),\n  },\n  appDissection: {\n    label: 'App Dissection',\n    path: '/app-dissection',\n    seo: extendSEO({\n      title: 'App Dissection',\n      description: 'In-depth design explorations.',\n      image: 'og/app-dissection.png',\n      url: 'app-dissection',\n    }),\n  },\n  ama: {\n    label: 'AMA',\n    path: '/ama',\n    seo: extendSEO({\n      title: 'AMA',\n      description: 'Ask me anything.',\n      image: 'og/ama.png',\n      url: 'ama',\n    }),\n  },\n  security: {\n    label: 'Security Checklist',\n    path: '/security',\n    seo: extendSEO({\n      title: 'Security Checklist',\n      description: 'Staying safe on the internet.',\n      image: 'og/security.png',\n      url: 'security',\n    }),\n  },\n  stack: {\n    label: 'Stack',\n    path: '/stack',\n    seo: extendSEO({\n      title: 'Stack',\n      description: 'My favorite tools and software.',\n      image: 'og/stack.png',\n      url: 'stack',\n    }),\n  },\n  settings: {\n    label: 'Settings',\n    path: '/settings',\n    seo: extendSEO({\n      title: 'Settings',\n      description: 'Manage your profile.',\n      image: 'og/settings.png',\n      url: 'settings',\n    }),\n  },\n}\n\nexport default routes\n", "import { Outlet } from \"@remix-run/react\";\n\nexport default function WritingPage() {\n  return (\n    <div>\n      <Outlet />\n    </div>\n  );\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport type { Post } from \"~/services/models/post\";\nimport type { LoaderContext } from \"~/types\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { json } from \"@remix-run/node\";\nimport { ListDetailView, SiteLayout } from \"~/components/Layouts\";\nimport { PostEditor } from \"~/components/Writing/Editor/PostEditor\";\nimport PostDetail from \"~/components/Writing/PostDetail\";\nimport { PostsList } from \"~/components/Writing/PostsList\";\nimport * as z from \"zod\";\n\ntype LoaderData = {\n  data: {\n    post: Post;\n  };\n};\n\nconst PostIdSchema = z.string().min(1);\n\n// function checkPost(post: Post, parent: string) {\n//   if (post.parent !== parent) {\n//     console.warn(\n//       `user ${parent} attempted to access post ${post.id} belonging to ${post.parent}`\n//     );\n//     throw new Response(\"Forbidden\", { status: 403 });\n//   }\n// }\n\nexport const loader: LoaderFunction = async ({ params, context, request }) => {\n  const { PostServer } = context as LoaderContext;\n\n  const parsed = PostIdSchema.safeParse(params.writingId);\n\n  if (!parsed.success) {\n    throw new Response(\"postId query param required\", { status: 404 });\n  }\n\n  const postById = await PostServer.getPost({ id: parsed.data });\n  const postBySlug = await PostServer.getPostBySlug({ slug: parsed.data });\n\n  const post = postById ? postById : postBySlug;\n\n  if (!post) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n\n  return json<LoaderData>({ data: { post } });\n};\n\nfunction WritingPostPage() {\n  const { data } = useLoaderData() as LoaderData;\n  const page =\n    data?.post && !data.post.publishedAt ? (\n      <PostEditor data={data} />\n    ) : (\n      <PostDetail {...data.post} />\n    );\n  return (\n    <SiteLayout>\n      <ListDetailView list={<PostsList />} hasDetail detail={page} />\n    </SiteLayout>\n  );\n}\n\nexport default WritingPostPage;\n", "import { useTransition } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport type { Post } from \"~/services/models/post\";\n\nimport { timestampToCleanTime } from \"../../../lib/transformers\";\nimport { Detail } from \"../ListDetail/Detail\";\nimport { TitleBar } from \"../ListDetail/TitleBar\";\nimport { MarkdownRenderer } from \"../MarkdownRenderer\";\nimport { PostActions } from \"./PostActions\";\n\nexport default function PostDetail(post: Post) {\n  const scrollContainerRef = React.useRef(null);\n  const titleRef = React.useRef(null);\n  const transition = useTransition();\n\n  let loading = transition.state === \"loading\";\n\n  if (loading) {\n    return <Detail.Loading />;\n  }\n\n  if (!post) {\n    return <Detail.Null />;\n  }\n  const publishedAt = timestampToCleanTime({ timestamp: post.publishedAt });\n  return (\n    <>\n      <Detail.Container data-cy=\"post-detail\" ref={scrollContainerRef}>\n        <TitleBar\n          backButton\n          globalMenu={false}\n          backButtonHref={\"/writing\"}\n          magicTitle\n          title={post.title}\n          titleRef={titleRef}\n          scrollContainerRef={scrollContainerRef}\n          trailingAccessory={<PostActions {...post} />}\n        />\n\n        <Detail.ContentContainer>\n          <Detail.Header>\n            <Detail.Title ref={titleRef}>{post.title}</Detail.Title>\n            <span\n              title={publishedAt.raw}\n              className=\"text-tertiary inline-block leading-snug\"\n            >\n              {publishedAt.formatted}\n            </span>\n          </Detail.Header>\n\n          <MarkdownRenderer children={post.body} className=\"prose mt-8\" />\n\n          {/* bottom padding to give space between post content and comments */}\n          <div className=\"py-6\" />\n        </Detail.ContentContainer>\n      </Detail.Container>\n    </>\n  );\n}\n", "/* eslint-disable react-hooks/rules-of-hooks */\nimport { useTransition } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport type { Post } from \"~/services/models/post\";\nimport { useOptionalUser } from \"~/utils\";\n\nimport Button from \"../Button\";\nimport { ReactionButton } from \"../Button/ReactionButton\";\n\nfunction getReactionButton(post: Post) {\n  const transition = useTransition();\n  const loading = transition.state === \"loading\";\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [clicked, setClicked] = React.useState(false);\n\n  function handleClick() {\n    if (loading) return;\n\n    // This is where I need to increase post to reaction count by 1\n    // Then, if clicked, disable button\n    // Also add like to viewer and changed viewerHasReacted to true\n    setClicked(true);\n  }\n\n  // Need to add a reaction model\n  // On the reaction model have a postid and userid\n  // If user.id = reaction.userid then viewerHasReacted === true\n  return (\n    <ReactionButton\n      id={post.id}\n      loading={loading}\n      count={1} // This would be post.reactionCount\n      hasReacted={true} // This would be viewerHasReacted value\n      onClick={handleClick}\n    />\n  );\n}\n\nfunction getEditButton(post: any) {\n  const user = useOptionalUser();\n\n  if (!user?.isAdmin) return null;\n\n  return (\n    <Button href={`/writing/${post.slug}/edit`} as=\"/writing/[slug]/edit\">\n      Edit\n    </Button>\n  );\n}\n\nexport function PostActions(post: Post) {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      {getReactionButton(post)}\n      {getEditButton(post)}\n    </div>\n  );\n}\n", "/* eslint-disable react-hooks/exhaustive-deps */\nimport * as React from \"react\";\nimport { useOptionalUser } from \"~/utils\";\n\n// Figure Out how to get viewer with hyper\nimport Button from \".\";\nimport { HeartFillIcon, HeartIcon } from \"../Icon\";\nimport { SignInDialog } from \"../SignInDialog\";\n\ninterface Props {\n  id: string; // used to reset the button state as the user switches between pages\n  hasReacted: boolean;\n  count: number;\n  onClick: () => void;\n  loading: boolean;\n}\n\nexport function ReactionButton(props: Props) {\n  const { id, onClick, hasReacted, count, loading } = props;\n\n  const user = useOptionalUser();\n  const [hasReactedState, setHasReactedState] = React.useState(hasReacted);\n  let currCount = count;\n  let nextCount = hasReactedState ? count - 1 : count + 1;\n  const [currTranslate, setCurrTranslate] = React.useState(\n    hasReactedState ? \"-translate-y-4\" : \"translate-y-0\"\n  );\n  const [nextTranslate, setNextTranslate] = React.useState(\n    hasReactedState ? \"translate-y-0\" : \"-translate-y-4\"\n  );\n  let currOpacity = \"opacity-100\";\n  let nextOpacity = \"opacity-0\";\n  const [ping, setPing] = React.useState(false);\n\n  // reset all the states as people navigate between different reactable pages\n  React.useEffect(() => {\n    setHasReactedState(hasReacted);\n    currCount = count;\n    nextCount = hasReacted ? count - 1 : count + 1;\n    setCurrTranslate(hasReacted ? \"-translate-y-4\" : \"translate-y-0\");\n    setNextTranslate(hasReacted ? \"translate-y-0\" : \"-translate-y-4\");\n  }, [id, hasReacted]);\n\n  if (!user) {\n    return (\n      <SignInDialog\n        trigger={\n          <Button aria-label=\"Like\">\n            <span className=\"text-gray-500\">\n              <HeartIcon />\n            </span>\n            <span>{count}</span>\n          </Button>\n        }\n      />\n    );\n  }\n\n  function handleClick() {\n    if (loading) return;\n    setCurrTranslate(nextTranslate);\n    setNextTranslate(currTranslate);\n    setHasReactedState(!hasReactedState);\n    if (!hasReactedState) {\n      setPing(true);\n      setTimeout(() => setPing(false), 700);\n    }\n    onClick();\n  }\n\n  return (\n    <Button\n      aria-label={hasReactedState ? \"Unlike\" : \"Like\"}\n      onClick={handleClick}\n      style={{ maxHeight: \"32px\", overflow: \"hidden\" }}\n    >\n      {hasReactedState ? (\n        <span className=\"relative text-red-500\">\n          {ping && (\n            <span className=\"absolute top-0 left-0 animate-ping\">\n              <HeartFillIcon />\n            </span>\n          )}\n          <HeartFillIcon />\n        </span>\n      ) : (\n        <span className=\"text-gray-500\">\n          <HeartIcon />\n        </span>\n      )}\n      <div className=\"relative -top-px h-3\">\n        <div\n          className={`flex flex-col items-center justify-center space-y-2 duration-300 ${currTranslate} transform transition-all`}\n        >\n          {hasReactedState ? (\n            <>\n              <span\n                className={`h-2 transition-all duration-300 ${nextOpacity}`}\n              >\n                {nextCount}\n              </span>\n              <span\n                className={`h-2 transition-all duration-300 ${currOpacity}`}\n              >\n                {currCount}\n              </span>\n            </>\n          ) : (\n            <>\n              <span\n                className={`h-2 transition-all duration-300 ${currOpacity}`}\n              >\n                {currCount}\n              </span>\n              <span\n                className={`h-2 transition-all duration-300 ${nextOpacity}`}\n              >\n                {nextCount}\n              </span>\n            </>\n          )}\n        </div>\n      </div>\n    </Button>\n  );\n}\n", "import { DialogComponent } from \"../Dialog\";\nimport { SignInDialogContent } from \"./SignInDialogContent\";\n\ninterface ActionData {\n  errors?: {\n    email?: string;\n    password?: string;\n  };\n}\n\ninterface SignInDialogProps {\n  children?: any;\n  trigger: any;\n  actionData?: ActionData;\n}\n\nexport function SignInDialog({\n  children = null,\n  trigger = null,\n  actionData,\n}: SignInDialogProps) {\n  return (\n    <DialogComponent\n      trigger={trigger}\n      title={\"Sign In\"}\n      modalContent={() => <SignInDialogContent {...actionData} />}\n    >\n      {children ? ({ openModal }: any) => children({ openModal }) : null}\n    </DialogComponent>\n  );\n}\n", "import { Form, Link, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport { Detail } from \"../ListDetail/Detail\";\nimport { TitleBar } from \"../ListDetail/TitleBar\";\n\ninterface ActionData {\n  errors?: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport function SignInDialogContent(actionData: ActionData) {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/\";\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n  const scrollContainerRef = React.useRef(null);\n  const titleRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <Detail.Container data-cy=\"login-page\" ref={scrollContainerRef}>\n      <TitleBar\n        magicTitle\n        titleRef={titleRef}\n        scrollContainerRef={scrollContainerRef}\n        title=\"Home\"\n      />\n\n      {/* Keep this div to trigger the magic scroll */}\n      <div className=\"p-4\" ref={titleRef} />\n\n      <Detail.ContentContainer>\n        <div className=\"flex min-h-full flex-col justify-center\">\n          <div className=\"mx-auto w-full max-w-md px-8\">\n            <Form method=\"post\" className=\"space-y-6\" noValidate>\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                  Email address\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    ref={emailRef}\n                    id=\"email\"\n                    required\n                    autoFocus={true}\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    aria-invalid={actionData?.errors?.email ? true : undefined}\n                    aria-describedby=\"email-error\"\n                    className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                  />\n                  {actionData?.errors?.email && (\n                    <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                      {actionData.errors.email}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                  Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"password\"\n                    ref={passwordRef}\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    aria-invalid={actionData?.errors?.password ? true : undefined}\n                    aria-describedby=\"password-error\"\n                    className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                  />\n                  {actionData?.errors?.password && (\n                    <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                      {actionData.errors.password}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n              <button\n                type=\"submit\"\n                className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n              >\n                Log in\n              </button>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <input\n                    id=\"remember\"\n                    name=\"remember\"\n                    type=\"checkbox\"\n                    className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <label htmlFor=\"remember\" className=\"ml-2 block text-sm text-gray-900\">\n                    Remember me\n                  </label>\n                </div>\n                <div className=\"text-center text-sm text-gray-500\">\n                  Don't have an account?{\" \"}\n                  <Link\n                    className=\"text-blue-500 underline\"\n                    to={{\n                      pathname: \"/join\",\n                      search: searchParams.toString(),\n                    }}\n                  >\n                    Sign up\n                  </Link>\n                </div>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </Detail.ContentContainer>\n    </Detail.Container>\n  );\n}\n", "import { ListDetailView, SiteLayout } from \"~/components/Layouts\";\nimport { PostsList } from \"~/components/Writing/PostsList\";\n\nexport default function WritingIndexPage() {\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <SiteLayout>\n        <ListDetailView hasDetail={false} detail={null} list={<PostsList />} />\n      </SiteLayout>\n    </div>\n  );\n}\n\n// Since <PostsList /> will always have the same data, we can load posts in the root and pass it in\n// the useMatches, the same way we do it with the useUser() and useOptionalUser()\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport type { LoaderContext } from \"~/types\";\n\nexport const action: ActionFunction = async ({ request, context }) => {\n  const { SessionServer } = context as LoaderContext;\n\n  return SessionServer.logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "import * as React from \"react\";\n\nimport { Intro } from \"~/components/Home/Intro\";\nimport { ListDetailView, SiteLayout } from \"~/components/Layouts\";\n\nexport default function About() {\n  return (\n    <SiteLayout>\n      <ListDetailView list={null} hasDetail detail={<Intro />} />\n    </SiteLayout>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport { MapPin } from \"react-feather\";\nimport CharlestonPinMap from \"../../../public/pin_map_charleston.png\";\n\nimport { Detail } from \"../ListDetail/Detail\";\nimport { TitleBar } from \"../ListDetail/TitleBar\";\n\nfunction SectionTitle(props: any) {\n  return (\n    <h4\n      className=\"col-span-2 pt-8 text-lg font-extrabold text-black dark:text-white md:pt-0 md:text-right md:text-base md:font-normal md:text-opacity-40\"\n      {...props}\n    />\n  );\n}\n\nfunction SectionContent(props: any) {\n  return <div className=\"col-span-10\" {...props} />;\n}\n\ninterface TableRowProps {\n  href: string;\n  title: string;\n  date: string;\n  subtitle?: string;\n}\n\nfunction TableRow({ href, title, subtitle, date }: TableRowProps) {\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href={href}\n      className=\"group flex items-center space-x-4\"\n    >\n      <strong className=\"flex-none font-medium text-gray-1000 group-hover:text-blue-600 group-hover:underline dark:text-gray-100 dark:group-hover:text-blue-500\">\n        {title}\n      </strong>\n      <span className=\"w-full shrink border-t border-dashed border-gray-300 dark:border-gray-800\" />\n      {subtitle && <span className=\"text-tertiary flex-none\">{subtitle}</span>}\n      {date && (\n        <span className=\"text-quaternary flex-none font-mono\">{date}</span>\n      )}\n    </a>\n  );\n}\n\nfunction SectionContainer(props: any) {\n  return (\n    <div\n      className=\"grid grid-cols-1 items-start gap-6 md:grid-cols-12\"\n      {...props}\n    />\n  );\n}\n\nconst workHistory = [\n  {\n    href: \"https://comparecredit.com\",\n    title: \"CompareCredit\",\n    subtitle: \"Associate Software Engineer\",\n    date: \"2022\u2014\\u00a0\\u00a0\",\n  },\n  {\n    href: \"https://careerchangers.co\",\n    title: \"Career Changer Newsletter\",\n    subtitle: \"Owner\",\n    date: \"2020\u2014\\u00a0\\u00a0\",\n  },\n  {\n    href: \"https://tiag.net/\",\n    title: \"TIAG\",\n    subtitle: \"Junior Software Developer\",\n    date: \"2021\u201422\",\n  },\n];\n\nconst speakingData = [\n  {\n    href: \"\",\n    title: \"Check back later...\",\n    date: \"tbd\",\n  },\n];\n\nexport function Intro() {\n  const scrollContainerRef = React.useRef(null);\n  const titleRef = React.useRef(null);\n\n  return (\n    <Detail.Container data-cy=\"home-intro\" ref={scrollContainerRef}>\n      <TitleBar\n        magicTitle\n        titleRef={titleRef}\n        scrollContainerRef={scrollContainerRef}\n        title=\"Home\"\n      />\n\n      {/* Keep this div to trigger the magic scroll */}\n      <div className=\"p-4\" ref={titleRef} />\n\n      <Detail.ContentContainer>\n        <div className=\"space-y-8 pb-24 md:space-y-16\">\n          <SectionContainer>\n            <SectionTitle />\n            <SectionContent>\n              <div className=\"text-primary prose\">\n                <p>\n                  Hey, I&apos;m Ben. I&apos;m a developer and{\" \"}\n                  <Link to=\"/writing\">\n                    <span>writer</span>\n                  </Link>\n                  . I&apos;m currently writing a{\" \"}\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://careerchangers.co\"\n                  >\n                    newsletter for career changers{\" \"}\n                  </a>\n                  becoming software developers to help them jobs quicker.\n                </p>\n                <p>\n                  I currently for,{\" \"}\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://comparecredit.com\"\n                  >\n                    CompareCredit\n                  </a>\n                  , on an awesome dev team. I get to work alongside developers\n                  who went to the code school I went to in Charleston, SC called\n                  Jack Russell Coding School.\n                </p>\n                <p>\n                  Before becoming a software developer I worked in non-profit. I\n                  made a living off of fundraising and was able to work with\n                  people in all stages of life. The last year and a half of\n                  non-profit work was spent working with Senior Adults. My\n                  non-profit days are the catalyst for much of my thinking and\n                  how I hope to impact the world through software.\n                </p>\n                <p>\n                  Recently I have made the decision to be much more active on\n                  LinkedIn. I spent a lot of time on twitter and one day was\n                  really discouraged with the people who, in my estimation,\n                  should be helping one another, serving others, and putting\n                  good into the world, where devouring one another.\n                </p>\n                <p>\n                  So it occurred to me that 1. I don't have to be on this\n                  platform and 2. I can put good into the world. LinkedIn is not\n                  everyone's favorite but I find it to be less hostile than\n                  twitter. I share thoughts daily on for career changers,\n                  product builders, and personal branding.\n                </p>\n              </div>\n            </SectionContent>\n          </SectionContainer>\n\n          <SectionContainer>\n            <SectionTitle>Online</SectionTitle>\n            <SectionContent>\n              <div className=\"flex flex-col space-y-3\">\n                <TableRow\n                  href={\"https://www.linkedin.com/in/benjaminapatton/\"}\n                  title={\"LinkedIn\"}\n                  subtitle={\"Follow\"}\n                  date={\"\"}\n                />\n                <TableRow\n                  href={\n                    \"https://www.youtube.com/channel/UCdznsnxpwF9qQCqfOomUqXg\"\n                  }\n                  title={\"YouTube\"}\n                  subtitle={\"Subscribe\"}\n                  date={\"\"}\n                />\n                <TableRow\n                  href={\"https://github.com/Benanna2019\"}\n                  title={\"GitHub\"}\n                  subtitle={\"Follow\"}\n                  date={\"\"}\n                />\n              </div>\n            </SectionContent>\n          </SectionContainer>\n\n          <SectionContainer>\n            <SectionTitle>Where</SectionTitle>\n            <SectionContent>\n              <img\n                src={CharlestonPinMap}\n                className=\"h-full w-full object-cover object-center\"\n                alt=\"Map of Charleston SC Tri-country area\"\n              />\n              <p className=\"text-quaternary flex items-center justify-end space-x-2 pt-2 text-sm md:text-right\">\n                <MapPin size={12} />\n                <span>Charleston, SC</span>\n              </p>\n            </SectionContent>\n          </SectionContainer>\n\n          <SectionContainer>\n            <SectionTitle>Work</SectionTitle>\n            <SectionContent>\n              <div className=\"flex flex-col space-y-3\">\n                {workHistory.map((job) => (\n                  <TableRow\n                    href={job.href}\n                    title={job.title}\n                    subtitle={job.subtitle}\n                    date={job.date}\n                    key={job.href}\n                  />\n                ))}\n              </div>\n            </SectionContent>\n          </SectionContainer>\n\n          <SectionContainer>\n            <SectionTitle>Speaking</SectionTitle>\n            <SectionContent>\n              <div className=\"flex flex-col space-y-3\">\n                {speakingData\n                  ? speakingData.map((s) => (\n                      <TableRow\n                        href={s.href}\n                        title={s.title}\n                        date={s.date}\n                        key={s.href}\n                      />\n                    ))\n                  : null}\n              </div>\n            </SectionContent>\n          </SectionContainer>\n        </div>\n      </Detail.ContentContainer>\n    </Detail.Container>\n  );\n}\n", "import { Intro } from \"../components/Home/Intro\";\nimport { ListDetailView, SiteLayout } from \"../components/Layouts\";\n\nexport default function Index() {\n  // Update so I can push main\n  return (\n    <SiteLayout>\n      <ListDetailView list={null} hasDetail={false} detail={<Intro />} />\n    </SiteLayout>\n  );\n}\n", "import * as React from \"react\";\nimport type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useActionData } from \"@remix-run/react\";\nimport z from \"zod\";\n\nimport { NotFoundError, UnauthorizedError } from \"~/services/models/err\";\nimport type { LoaderContext } from \"~/types\";\nimport { ListDetailView, SiteLayout } from \"~/components/Layouts\";\nimport { SignInDialogContent } from \"~/components/SignInDialog/SignInDialogContent\";\n\nexport const loader: LoaderFunction = async ({ request, context }) => {\n  const { SessionServer } = context as LoaderContext;\n\n  const userId = await SessionServer.getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\nconst FormDataSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n});\n\ninterface ActionData {\n  errors?: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request, context }) => {\n  const { UserServer, SessionServer } = context as LoaderContext;\n\n  const formData = await request.formData();\n  const redirectTo = formData.get(\"redirectTo\");\n  const remember = formData.get(\"remember\");\n\n  const parsed = FormDataSchema.safeParse({\n    email: formData.get(\"email\"),\n    password: formData.get(\"password\"),\n  });\n\n  if (!parsed.success) {\n    const errors = parsed.error.format();\n    return json<ActionData>(\n      {\n        errors: {\n          email: errors.email?._errors.join(\". \"),\n          password: errors.password?._errors.join(\". \"),\n        },\n      },\n      { status: 400 }\n    );\n  }\n\n  const { email, password } = parsed.data;\n\n  try {\n    const user = await UserServer.verifyLogin(email, password);\n    return SessionServer.createUserSession({\n      request,\n      userId: user.id,\n      remember: remember === \"on\" ? true : false,\n      redirectTo: typeof redirectTo === \"string\" ? redirectTo : \"/notes\",\n    });\n  } catch (err) {\n    if (err instanceof UnauthorizedError || err instanceof NotFoundError) {\n      return json<ActionData>(\n        { errors: { email: \"Invalid email or password\" } },\n        { status: 400 }\n      );\n    }\n\n    throw err;\n  }\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const actionData = useActionData() as ActionData;\n  return (\n    <SiteLayout>\n      <ListDetailView\n        list={null}\n        hasDetail={false}\n        detail={<SignInDialogContent {...actionData} />}\n      />\n    </SiteLayout>\n  );\n}\n", "export class NotFoundError extends Error {\n  public status = 404;\n  constructor(message?: string) {\n    super(message);\n    this.message = this.message || \"Not Found\";\n  }\n}\n\nexport class ConflictError extends Error {\n  public status = 409;\n  constructor(message?: string) {\n    super(message);\n    this.message = this.message || \"Conflict\";\n  }\n}\n\nexport class UnauthorizedError extends Error {\n  public status = 401;\n  constructor(message?: string) {\n    super(message);\n    this.message = this.message || \"Unauthorized\";\n  }\n}\n", "import * as React from \"react\";\nimport type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useActionData } from \"@remix-run/react\";\nimport { z } from \"zod\";\n\nimport { ConflictError } from \"~/services/models/err\";\n\nimport type { LoaderContext } from \"~/types\";\nimport { ListDetailView, SiteLayout } from \"~/components/Layouts\";\nimport JoinForm from \"~/components/Forms/JoinForm\";\nimport { trimEmail } from \"~/utils\";\nimport { getEnv } from \"~/env.server\";\n\nexport const loader: LoaderFunction = async ({ request, context }) => {\n  const { SessionServer } = context as LoaderContext;\n\n  const userId = await SessionServer.getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors: {\n    email?: string;\n    password?: string;\n  };\n}\n\nconst FormDataSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n});\n\nexport const action: ActionFunction = async ({ request, context }) => {\n  const { UserServer, SessionServer } = context as LoaderContext;\n\n  const formData = await request.formData();\n  const redirectTo = formData.get(\"redirectTo\");\n\n  const parsed = FormDataSchema.safeParse({\n    email: formData.get(\"email\"),\n    password: formData.get(\"password\"),\n  });\n\n  if (!parsed.success) {\n    const errors = parsed.error.format();\n    return json<ActionData>(\n      {\n        errors: {\n          email: errors.email?._errors.join(\". \"),\n          password: errors.password?._errors.join(\". \"),\n        },\n      },\n      { status: 400 }\n    );\n  }\n\n  const { email, password } = parsed.data;\n\n  const ENV = getEnv();\n\n  const role = email === ENV.ADMIN_EMAIL ? \"ADMIN\" : \"Guest\";\n  console.log(\"role from create user:\", role);\n\n  const isAdmin = role === \"ADMIN\" ? true : false;\n  console.log(\"isAdmin from create user:\", isAdmin);\n\n  const username = trimEmail(email);\n  console.log(\"username from create user:\", username);\n\n  try {\n    const user = await UserServer.createUser(\n      email,\n      password,\n      role,\n      isAdmin,\n      username\n    );\n    return SessionServer.createUserSession({\n      request,\n      userId: user.id,\n      remember: false,\n      redirectTo: typeof redirectTo === \"string\" ? redirectTo : \"/\",\n    });\n  } catch (err) {\n    if (err instanceof ConflictError) {\n      return json<ActionData>(\n        { errors: { email: \"A user already exists with this email\" } },\n        { status: 400 }\n      );\n    }\n\n    throw err;\n  }\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Sign Up\",\n  };\n};\n\nexport default function Join() {\n  const actionData = useActionData() as ActionData;\n  return (\n    <SiteLayout>\n      <ListDetailView\n        list={null}\n        hasDetail={false}\n        detail={<JoinForm {...actionData} />}\n      />\n    </SiteLayout>\n  );\n}\n", "import { Form, Link, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport { Detail } from \"../ListDetail/Detail\";\nimport { TitleBar } from \"../ListDetail/TitleBar\";\n\ninterface ActionData {\n  errors: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport default function JoinForm(actionData: ActionData) {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n  const scrollContainerRef = React.useRef(null);\n  const titleRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n  return (\n    <Detail.Container data-cy=\"login-page\" ref={scrollContainerRef}>\n      <TitleBar\n        magicTitle\n        titleRef={titleRef}\n        scrollContainerRef={scrollContainerRef}\n        title=\"Home\"\n      />\n\n      {/* Keep this div to trigger the magic scroll */}\n      <div className=\"p-4\" ref={titleRef} />\n\n      <Detail.ContentContainer>\n        <div className=\"flex min-h-full flex-col justify-center\">\n          <div className=\"mx-auto w-full max-w-md px-8\">\n            <Form method=\"post\" className=\"space-y-6\" noValidate>\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                  Email address\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    ref={emailRef}\n                    id=\"email\"\n                    required\n                    autoFocus={true}\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    aria-invalid={actionData?.errors?.email ? true : undefined}\n                    aria-describedby=\"email-error\"\n                    className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                  />\n                  {actionData?.errors?.email && (\n                    <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                      {actionData.errors.email}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                  Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"password\"\n                    ref={passwordRef}\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    aria-invalid={actionData?.errors?.password ? true : undefined}\n                    aria-describedby=\"password-error\"\n                    className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                  />\n                  {actionData?.errors?.password && (\n                    <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                      {actionData.errors.password}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n              <button\n                type=\"submit\"\n                className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n              >\n                Create Account\n              </button>\n              <div className=\"flex items-center justify-center\">\n                <div className=\"text-center text-sm text-gray-500\">\n                  Already have an account?{\" \"}\n                  <Link\n                    className=\"text-blue-500 underline\"\n                    to={{\n                      pathname: \"/login\",\n                      search: searchParams.toString(),\n                    }}\n                  >\n                    Log in\n                  </Link>\n                </div>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </Detail.ContentContainer>\n    </Detail.Container>\n  );\n}\n", "import { ListDetailView, SiteLayout } from \"../components/Layouts\";\nimport { Detail } from \"../components/ListDetail/Detail\";\n\nfunction MissingPage() {\n  return <Detail.Null />;\n}\n\nexport default function Home() {\n  return (\n    <SiteLayout>\n      <ListDetailView list={null} hasDetail detail={<MissingPage />} />\n    </SiteLayout>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { LoaderContext } from \"~/types\";\n\nexport const action: ActionFunction = async ({ request, context }) => {\n  const { UserServer, SessionServer } = context as LoaderContext;\n\n  if (process.env.NODE_ENV === \"production\") {\n    console.error(\n      \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n    );\n    // test routes should not be enabled in production or without\n    // enable test routes... Just in case this somehow slips through\n    // we'll redirect :)\n    return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n  }\n\n  const { email } = await request.json();\n  if (!email) {\n    throw new Error(\"email required for login\");\n  }\n  if (!email.endsWith(\"@example.com\")) {\n    throw new Error(\"All test emails must end in @example.com\");\n  }\n\n  await UserServer.deleteUser(email);\n\n  return SessionServer.logout(request).catch(() => {});\n};\n\nexport default null;\n", "export default {'version':'afe52432','entry':{'module':'/_static/build/entry.client-AFJIRSMR.js','imports':['/_static/build/_shared/chunk-FHRLRTUB.js','/_static/build/_shared/chunk-5G5JSTEB.js','/_static/build/_shared/chunk-PWHP4PGH.js']},'routes':{'/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/test/test-routes/delete-user':{'id':'/Users/benpatton/Documents/Hyper_Invoices/HyperInvoices/test/test-routes/delete-user','parentId':'root','path':'__tests/delete-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/_.._/test/test-routes/delete-user-XPCATQ36.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-QQETX33G.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/404':{'id':'routes/404','parentId':'root','path':'404','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/404-4BP2UBFH.js','imports':['/_static/build/_shared/chunk-JMHAIX2B.js','/_static/build/_shared/chunk-7ND7NUEB.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/about-U6DHDB6E.js','imports':['/_static/build/_shared/chunk-VV2VYR5H.js','/_static/build/_shared/chunk-JMHAIX2B.js','/_static/build/_shared/chunk-7ND7NUEB.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/delete-account':{'id':'routes/delete-account','parentId':'root','path':'delete-account','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/delete-account-YEUBSHHV.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-CYPT5AHA.js','imports':['/_static/build/_shared/chunk-VV2VYR5H.js','/_static/build/_shared/chunk-JMHAIX2B.js','/_static/build/_shared/chunk-7ND7NUEB.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/join-25FTC3GY.js','imports':['/_static/build/_shared/chunk-OJFA6HSG.js','/_static/build/_shared/chunk-JMHAIX2B.js','/_static/build/_shared/chunk-7ND7NUEB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/login-EVPFH7PQ.js','imports':['/_static/build/_shared/chunk-IH7IRRH7.js','/_static/build/_shared/chunk-OJFA6HSG.js','/_static/build/_shared/chunk-JMHAIX2B.js','/_static/build/_shared/chunk-7ND7NUEB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-3FEBGD52.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/new-post':{'id':'routes/new-post','parentId':'root','path':'new-post','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/new-post-UR6XQTGF.js','imports':['/_static/build/_shared/chunk-AIZXMF3H.js','/_static/build/_shared/chunk-LNBXZL3J.js','/_static/build/_shared/chunk-IPZEOALH.js','/_static/build/_shared/chunk-FR3CKLQ7.js','/_static/build/_shared/chunk-JI7OKL3F.js','/_static/build/_shared/chunk-4N4AC3S6.js','/_static/build/_shared/chunk-2DSJKA6I.js','/_static/build/_shared/chunk-QXZAD2L5.js','/_static/build/_shared/chunk-TDH27YKX.js','/_static/build/_shared/chunk-ZOUJF3KN.js','/_static/build/_shared/chunk-LR3NCX32.js','/_static/build/_shared/chunk-4IVFO5EF.js','/_static/build/_shared/chunk-MOWIWX5V.js','/_static/build/_shared/chunk-U26AJT4I.js','/_static/build/_shared/chunk-6ZCE7LPS.js','/_static/build/_shared/chunk-AKFYHJUS.js','/_static/build/_shared/chunk-GUW6BO5W.js','/_static/build/_shared/chunk-MJBSUF5I.js','/_static/build/_shared/chunk-5VEYCT5B.js','/_static/build/_shared/chunk-XRA3BXGU.js','/_static/build/_shared/chunk-GMN6K4AJ.js','/_static/build/_shared/chunk-JKORKJSN.js','/_static/build/_shared/chunk-NUIX3ACQ.js','/_static/build/_shared/chunk-E3BQEJYI.js','/_static/build/_shared/chunk-JBRCYMUW.js','/_static/build/_shared/chunk-7SIVQTEU.js','/_static/build/_shared/chunk-FWPLAEWX.js','/_static/build/_shared/chunk-3PAVKGEZ.js','/_static/build/_shared/chunk-OO5KYSUP.js','/_static/build/_shared/chunk-SS7LCVAK.js','/_static/build/_shared/chunk-N4OBSXW3.js','/_static/build/_shared/chunk-IM2QLSHK.js','/_static/build/_shared/chunk-33TGZA56.js','/_static/build/_shared/chunk-3LURM3AE.js','/_static/build/_shared/chunk-KT3BAQFN.js','/_static/build/_shared/chunk-ER5G35IM.js','/_static/build/_shared/chunk-6VDW5QBF.js','/_static/build/_shared/chunk-XXYSL33B.js','/_static/build/_shared/chunk-OZKZO7WB.js','/_static/build/_shared/chunk-YMWWUQEC.js','/_static/build/_shared/chunk-Q5JQZ3M7.js','/_static/build/_shared/chunk-7ZIUQYE3.js','/_static/build/_shared/chunk-24HKJICW.js','/_static/build/_shared/chunk-ABMVNS7P.js','/_static/build/_shared/chunk-6AMML3I4.js','/_static/build/_shared/chunk-4I426IBY.js','/_static/build/_shared/chunk-W5I72BTY.js','/_static/build/_shared/chunk-H2ONDDM6.js','/_static/build/_shared/chunk-G6MSI7MQ.js','/_static/build/_shared/chunk-GUCOQWE4.js','/_static/build/_shared/chunk-LLYUHPCR.js','/_static/build/_shared/chunk-EFPX2EUN.js','/_static/build/_shared/chunk-5EE4B7KJ.js','/_static/build/_shared/chunk-MKJPDCD7.js','/_static/build/_shared/chunk-CB4XCZCG.js','/_static/build/_shared/chunk-SA5VXBBM.js','/_static/build/_shared/chunk-S5JPJWSA.js','/_static/build/_shared/chunk-DGFOTCVZ.js','/_static/build/_shared/chunk-DHWSLIH5.js','/_static/build/_shared/chunk-FPMC37E5.js','/_static/build/_shared/chunk-4OF64X3E.js','/_static/build/_shared/chunk-EGHWVPJ7.js','/_static/build/_shared/chunk-CIXLVVVN.js','/_static/build/_shared/chunk-QR4ZNBEV.js','/_static/build/_shared/chunk-ZQKDS3GR.js','/_static/build/_shared/chunk-6IE2VDXP.js','/_static/build/_shared/chunk-TGBHLRK6.js','/_static/build/_shared/chunk-LR5FLUWI.js','/_static/build/_shared/chunk-GX2CNUXV.js','/_static/build/_shared/chunk-6MJQKXNI.js','/_static/build/_shared/chunk-ZGCH4EMR.js','/_static/build/_shared/chunk-ZXDWG63X.js','/_static/build/_shared/chunk-PU4EDMFL.js','/_static/build/_shared/chunk-ZU44LL2T.js','/_static/build/_shared/chunk-3NMKVH4R.js','/_static/build/_shared/chunk-E2AJFYTH.js','/_static/build/_shared/chunk-7W2BVQ3R.js','/_static/build/_shared/chunk-4XITZBKV.js','/_static/build/_shared/chunk-OU7DQHBM.js','/_static/build/_shared/chunk-PVDJ6JPY.js','/_static/build/_shared/chunk-EMCMZIGD.js','/_static/build/_shared/chunk-ILY5JCQC.js','/_static/build/_shared/chunk-JMAULXUP.js','/_static/build/_shared/chunk-ITEUZNFG.js','/_static/build/_shared/chunk-IEKNOI5C.js','/_static/build/_shared/chunk-YJWZHPSJ.js','/_static/build/_shared/chunk-IYVNFLNR.js','/_static/build/_shared/chunk-CKOH4B77.js','/_static/build/_shared/chunk-EADRGNRB.js','/_static/build/_shared/chunk-XTP72NS6.js','/_static/build/_shared/chunk-SPZVK76L.js','/_static/build/_shared/chunk-AOSYS4WH.js','/_static/build/_shared/chunk-NH2374T2.js','/_static/build/_shared/chunk-ZQOEYUKQ.js','/_static/build/_shared/chunk-QMTA3BKO.js','/_static/build/_shared/chunk-26DGM2ZY.js','/_static/build/_shared/chunk-5744GLH3.js','/_static/build/_shared/chunk-4JTFG4DP.js','/_static/build/_shared/chunk-6IWLKNR5.js','/_static/build/_shared/chunk-TULZE4T5.js','/_static/build/_shared/chunk-DOXGB5K6.js','/_static/build/_shared/chunk-EGDPXIGA.js','/_static/build/_shared/chunk-QDRBYHQM.js','/_static/build/_shared/chunk-KNINK4GJ.js','/_static/build/_shared/chunk-H3CJKTME.js','/_static/build/_shared/chunk-XQVXZ74I.js','/_static/build/_shared/chunk-3GAYVNBV.js','/_static/build/_shared/chunk-TYGK76UR.js','/_static/build/_shared/chunk-2JSSLF5G.js','/_static/build/_shared/chunk-3BSNVMLF.js','/_static/build/_shared/chunk-H23LPO2J.js','/_static/build/_shared/chunk-YASWQQMQ.js','/_static/build/_shared/chunk-4EYXZVRY.js','/_static/build/_shared/chunk-LFZAJETQ.js','/_static/build/_shared/chunk-M3KWEXG5.js','/_static/build/_shared/chunk-2KHO433V.js','/_static/build/_shared/chunk-DCSG4JUK.js','/_static/build/_shared/chunk-UVRZMALM.js','/_static/build/_shared/chunk-2OBXL6QZ.js','/_static/build/_shared/chunk-AS5PGKDD.js','/_static/build/_shared/chunk-56AWVEFJ.js','/_static/build/_shared/chunk-5AOHOVB2.js','/_static/build/_shared/chunk-2RCGWDDP.js','/_static/build/_shared/chunk-C44AYBE4.js','/_static/build/_shared/chunk-EKNLQ4KS.js','/_static/build/_shared/chunk-Q3UJ7BAU.js','/_static/build/_shared/chunk-W2SVNZDM.js','/_static/build/_shared/chunk-5QYFNGTA.js','/_static/build/_shared/chunk-M7L4OCWX.js','/_static/build/_shared/chunk-YTJE37G3.js','/_static/build/_shared/chunk-OMYWQIOX.js','/_static/build/_shared/chunk-JIGBX6VZ.js','/_static/build/_shared/chunk-FJAGB4OU.js','/_static/build/_shared/chunk-6ZS5JYWS.js','/_static/build/_shared/chunk-ISCIGQXB.js','/_static/build/_shared/chunk-N4NB466N.js','/_static/build/_shared/chunk-S2CNFSEQ.js','/_static/build/_shared/chunk-4EBKWGU7.js','/_static/build/_shared/chunk-K4LXCWRS.js','/_static/build/_shared/chunk-5MFLX5ZM.js','/_static/build/_shared/chunk-6ZP7P7AD.js','/_static/build/_shared/chunk-EC5QV4Z2.js','/_static/build/_shared/chunk-4CR3Z6RA.js','/_static/build/_shared/chunk-DSMQDCKK.js','/_static/build/_shared/chunk-27WEDMGF.js','/_static/build/_shared/chunk-DWRDDAVO.js','/_static/build/_shared/chunk-L27MR35C.js','/_static/build/_shared/chunk-5WPFWFZT.js','/_static/build/_shared/chunk-O7AIDNCY.js','/_static/build/_shared/chunk-KFTFY5TI.js','/_static/build/_shared/chunk-OMOTZUUW.js','/_static/build/_shared/chunk-VBROGTEQ.js','/_static/build/_shared/chunk-FG57IWA6.js','/_static/build/_shared/chunk-EF66ICRN.js','/_static/build/_shared/chunk-4L6NCKYR.js','/_static/build/_shared/chunk-QHRR5XE2.js','/_static/build/_shared/chunk-U6M27XTL.js','/_static/build/_shared/chunk-4353DT6C.js','/_static/build/_shared/chunk-26PXXBN4.js','/_static/build/_shared/chunk-UBLRPEPC.js','/_static/build/_shared/chunk-Y6DKYB3A.js','/_static/build/_shared/chunk-NBZY7NI7.js','/_static/build/_shared/chunk-OCRPG22M.js','/_static/build/_shared/chunk-SXCBN6P5.js','/_static/build/_shared/chunk-VTDHTCWG.js','/_static/build/_shared/chunk-VSVWUAHX.js','/_static/build/_shared/chunk-FEVDK2XL.js','/_static/build/_shared/chunk-3UP6K234.js','/_static/build/_shared/chunk-65OWSOST.js','/_static/build/_shared/chunk-YRZH3QMC.js','/_static/build/_shared/chunk-QZ4ODM5K.js','/_static/build/_shared/chunk-2EP6TOIA.js','/_static/build/_shared/chunk-6XWSBEID.js','/_static/build/_shared/chunk-WGWBCVKA.js','/_static/build/_shared/chunk-HYGXOMUA.js','/_static/build/_shared/chunk-ETEZATNL.js','/_static/build/_shared/chunk-J65CFEWN.js','/_static/build/_shared/chunk-YALFE5Q7.js','/_static/build/_shared/chunk-W7SBQH2I.js','/_static/build/_shared/chunk-6ZTBG2Z4.js','/_static/build/_shared/chunk-JLPGN4KN.js','/_static/build/_shared/chunk-R32NYK3A.js','/_static/build/_shared/chunk-JG2AXIWM.js','/_static/build/_shared/chunk-VBX7C22E.js','/_static/build/_shared/chunk-H3NSD3EM.js','/_static/build/_shared/chunk-SYCGMHGR.js','/_static/build/_shared/chunk-NVDU5UG7.js','/_static/build/_shared/chunk-3ZFERPOO.js','/_static/build/_shared/chunk-SRFIRGGR.js','/_static/build/_shared/chunk-GBLXZDDB.js','/_static/build/_shared/chunk-RT7YHNBO.js','/_static/build/_shared/chunk-5ZO5IZ7S.js','/_static/build/_shared/chunk-4JCWJHZH.js','/_static/build/_shared/chunk-YW23GCT6.js','/_static/build/_shared/chunk-OJFA6HSG.js','/_static/build/_shared/chunk-7IBWRRMP.js','/_static/build/_shared/chunk-JMHAIX2B.js','/_static/build/_shared/chunk-7ND7NUEB.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/settings':{'id':'routes/settings','parentId':'root','path':'settings','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/settings-ZN7D5CPR.js','imports':['/_static/build/_shared/chunk-7IBWRRMP.js','/_static/build/_shared/chunk-JMHAIX2B.js','/_static/build/_shared/chunk-7ND7NUEB.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/u/$userId':{'id':'routes/u/$userId','parentId':'root','path':'u/:userId','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/u/$userId-GZFOG3O4.js','imports':['/_static/build/_shared/chunk-JMHAIX2B.js','/_static/build/_shared/chunk-7ND7NUEB.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/writing':{'id':'routes/writing','parentId':'root','path':'writing','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/writing-LZZQENTB.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/writing/$writingId':{'id':'routes/writing/$writingId','parentId':'routes/writing','path':':writingId','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/writing/$writingId-W7B4PLRR.js','imports':['/_static/build/_shared/chunk-IH7IRRH7.js','/_static/build/_shared/chunk-AIZXMF3H.js','/_static/build/_shared/chunk-LNBXZL3J.js','/_static/build/_shared/chunk-IPZEOALH.js','/_static/build/_shared/chunk-FR3CKLQ7.js','/_static/build/_shared/chunk-JI7OKL3F.js','/_static/build/_shared/chunk-4N4AC3S6.js','/_static/build/_shared/chunk-2DSJKA6I.js','/_static/build/_shared/chunk-QXZAD2L5.js','/_static/build/_shared/chunk-TDH27YKX.js','/_static/build/_shared/chunk-ZOUJF3KN.js','/_static/build/_shared/chunk-LR3NCX32.js','/_static/build/_shared/chunk-4IVFO5EF.js','/_static/build/_shared/chunk-MOWIWX5V.js','/_static/build/_shared/chunk-U26AJT4I.js','/_static/build/_shared/chunk-6ZCE7LPS.js','/_static/build/_shared/chunk-AKFYHJUS.js','/_static/build/_shared/chunk-GUW6BO5W.js','/_static/build/_shared/chunk-MJBSUF5I.js','/_static/build/_shared/chunk-5VEYCT5B.js','/_static/build/_shared/chunk-XRA3BXGU.js','/_static/build/_shared/chunk-GMN6K4AJ.js','/_static/build/_shared/chunk-JKORKJSN.js','/_static/build/_shared/chunk-NUIX3ACQ.js','/_static/build/_shared/chunk-E3BQEJYI.js','/_static/build/_shared/chunk-JBRCYMUW.js','/_static/build/_shared/chunk-7SIVQTEU.js','/_static/build/_shared/chunk-FWPLAEWX.js','/_static/build/_shared/chunk-3PAVKGEZ.js','/_static/build/_shared/chunk-OO5KYSUP.js','/_static/build/_shared/chunk-SS7LCVAK.js','/_static/build/_shared/chunk-N4OBSXW3.js','/_static/build/_shared/chunk-IM2QLSHK.js','/_static/build/_shared/chunk-33TGZA56.js','/_static/build/_shared/chunk-3LURM3AE.js','/_static/build/_shared/chunk-KT3BAQFN.js','/_static/build/_shared/chunk-ER5G35IM.js','/_static/build/_shared/chunk-6VDW5QBF.js','/_static/build/_shared/chunk-XXYSL33B.js','/_static/build/_shared/chunk-OZKZO7WB.js','/_static/build/_shared/chunk-YMWWUQEC.js','/_static/build/_shared/chunk-Q5JQZ3M7.js','/_static/build/_shared/chunk-7ZIUQYE3.js','/_static/build/_shared/chunk-24HKJICW.js','/_static/build/_shared/chunk-ABMVNS7P.js','/_static/build/_shared/chunk-6AMML3I4.js','/_static/build/_shared/chunk-4I426IBY.js','/_static/build/_shared/chunk-W5I72BTY.js','/_static/build/_shared/chunk-H2ONDDM6.js','/_static/build/_shared/chunk-G6MSI7MQ.js','/_static/build/_shared/chunk-GUCOQWE4.js','/_static/build/_shared/chunk-LLYUHPCR.js','/_static/build/_shared/chunk-EFPX2EUN.js','/_static/build/_shared/chunk-5EE4B7KJ.js','/_static/build/_shared/chunk-MKJPDCD7.js','/_static/build/_shared/chunk-CB4XCZCG.js','/_static/build/_shared/chunk-SA5VXBBM.js','/_static/build/_shared/chunk-S5JPJWSA.js','/_static/build/_shared/chunk-DGFOTCVZ.js','/_static/build/_shared/chunk-DHWSLIH5.js','/_static/build/_shared/chunk-FPMC37E5.js','/_static/build/_shared/chunk-4OF64X3E.js','/_static/build/_shared/chunk-EGHWVPJ7.js','/_static/build/_shared/chunk-CIXLVVVN.js','/_static/build/_shared/chunk-QR4ZNBEV.js','/_static/build/_shared/chunk-ZQKDS3GR.js','/_static/build/_shared/chunk-6IE2VDXP.js','/_static/build/_shared/chunk-TGBHLRK6.js','/_static/build/_shared/chunk-LR5FLUWI.js','/_static/build/_shared/chunk-GX2CNUXV.js','/_static/build/_shared/chunk-6MJQKXNI.js','/_static/build/_shared/chunk-ZGCH4EMR.js','/_static/build/_shared/chunk-ZXDWG63X.js','/_static/build/_shared/chunk-PU4EDMFL.js','/_static/build/_shared/chunk-ZU44LL2T.js','/_static/build/_shared/chunk-3NMKVH4R.js','/_static/build/_shared/chunk-E2AJFYTH.js','/_static/build/_shared/chunk-7W2BVQ3R.js','/_static/build/_shared/chunk-4XITZBKV.js','/_static/build/_shared/chunk-OU7DQHBM.js','/_static/build/_shared/chunk-PVDJ6JPY.js','/_static/build/_shared/chunk-EMCMZIGD.js','/_static/build/_shared/chunk-ILY5JCQC.js','/_static/build/_shared/chunk-JMAULXUP.js','/_static/build/_shared/chunk-ITEUZNFG.js','/_static/build/_shared/chunk-IEKNOI5C.js','/_static/build/_shared/chunk-YJWZHPSJ.js','/_static/build/_shared/chunk-IYVNFLNR.js','/_static/build/_shared/chunk-CKOH4B77.js','/_static/build/_shared/chunk-EADRGNRB.js','/_static/build/_shared/chunk-XTP72NS6.js','/_static/build/_shared/chunk-SPZVK76L.js','/_static/build/_shared/chunk-AOSYS4WH.js','/_static/build/_shared/chunk-NH2374T2.js','/_static/build/_shared/chunk-ZQOEYUKQ.js','/_static/build/_shared/chunk-QMTA3BKO.js','/_static/build/_shared/chunk-26DGM2ZY.js','/_static/build/_shared/chunk-5744GLH3.js','/_static/build/_shared/chunk-4JTFG4DP.js','/_static/build/_shared/chunk-6IWLKNR5.js','/_static/build/_shared/chunk-TULZE4T5.js','/_static/build/_shared/chunk-DOXGB5K6.js','/_static/build/_shared/chunk-EGDPXIGA.js','/_static/build/_shared/chunk-QDRBYHQM.js','/_static/build/_shared/chunk-KNINK4GJ.js','/_static/build/_shared/chunk-H3CJKTME.js','/_static/build/_shared/chunk-XQVXZ74I.js','/_static/build/_shared/chunk-3GAYVNBV.js','/_static/build/_shared/chunk-TYGK76UR.js','/_static/build/_shared/chunk-2JSSLF5G.js','/_static/build/_shared/chunk-3BSNVMLF.js','/_static/build/_shared/chunk-H23LPO2J.js','/_static/build/_shared/chunk-YASWQQMQ.js','/_static/build/_shared/chunk-4EYXZVRY.js','/_static/build/_shared/chunk-LFZAJETQ.js','/_static/build/_shared/chunk-M3KWEXG5.js','/_static/build/_shared/chunk-2KHO433V.js','/_static/build/_shared/chunk-DCSG4JUK.js','/_static/build/_shared/chunk-UVRZMALM.js','/_static/build/_shared/chunk-2OBXL6QZ.js','/_static/build/_shared/chunk-AS5PGKDD.js','/_static/build/_shared/chunk-56AWVEFJ.js','/_static/build/_shared/chunk-5AOHOVB2.js','/_static/build/_shared/chunk-2RCGWDDP.js','/_static/build/_shared/chunk-C44AYBE4.js','/_static/build/_shared/chunk-EKNLQ4KS.js','/_static/build/_shared/chunk-Q3UJ7BAU.js','/_static/build/_shared/chunk-W2SVNZDM.js','/_static/build/_shared/chunk-5QYFNGTA.js','/_static/build/_shared/chunk-M7L4OCWX.js','/_static/build/_shared/chunk-YTJE37G3.js','/_static/build/_shared/chunk-OMYWQIOX.js','/_static/build/_shared/chunk-JIGBX6VZ.js','/_static/build/_shared/chunk-FJAGB4OU.js','/_static/build/_shared/chunk-6ZS5JYWS.js','/_static/build/_shared/chunk-ISCIGQXB.js','/_static/build/_shared/chunk-N4NB466N.js','/_static/build/_shared/chunk-S2CNFSEQ.js','/_static/build/_shared/chunk-4EBKWGU7.js','/_static/build/_shared/chunk-K4LXCWRS.js','/_static/build/_shared/chunk-5MFLX5ZM.js','/_static/build/_shared/chunk-6ZP7P7AD.js','/_static/build/_shared/chunk-EC5QV4Z2.js','/_static/build/_shared/chunk-4CR3Z6RA.js','/_static/build/_shared/chunk-DSMQDCKK.js','/_static/build/_shared/chunk-27WEDMGF.js','/_static/build/_shared/chunk-DWRDDAVO.js','/_static/build/_shared/chunk-L27MR35C.js','/_static/build/_shared/chunk-5WPFWFZT.js','/_static/build/_shared/chunk-O7AIDNCY.js','/_static/build/_shared/chunk-KFTFY5TI.js','/_static/build/_shared/chunk-OMOTZUUW.js','/_static/build/_shared/chunk-VBROGTEQ.js','/_static/build/_shared/chunk-FG57IWA6.js','/_static/build/_shared/chunk-EF66ICRN.js','/_static/build/_shared/chunk-4L6NCKYR.js','/_static/build/_shared/chunk-QHRR5XE2.js','/_static/build/_shared/chunk-U6M27XTL.js','/_static/build/_shared/chunk-4353DT6C.js','/_static/build/_shared/chunk-26PXXBN4.js','/_static/build/_shared/chunk-UBLRPEPC.js','/_static/build/_shared/chunk-Y6DKYB3A.js','/_static/build/_shared/chunk-NBZY7NI7.js','/_static/build/_shared/chunk-OCRPG22M.js','/_static/build/_shared/chunk-SXCBN6P5.js','/_static/build/_shared/chunk-VTDHTCWG.js','/_static/build/_shared/chunk-VSVWUAHX.js','/_static/build/_shared/chunk-FEVDK2XL.js','/_static/build/_shared/chunk-3UP6K234.js','/_static/build/_shared/chunk-65OWSOST.js','/_static/build/_shared/chunk-YRZH3QMC.js','/_static/build/_shared/chunk-QZ4ODM5K.js','/_static/build/_shared/chunk-2EP6TOIA.js','/_static/build/_shared/chunk-6XWSBEID.js','/_static/build/_shared/chunk-WGWBCVKA.js','/_static/build/_shared/chunk-HYGXOMUA.js','/_static/build/_shared/chunk-ETEZATNL.js','/_static/build/_shared/chunk-J65CFEWN.js','/_static/build/_shared/chunk-YALFE5Q7.js','/_static/build/_shared/chunk-W7SBQH2I.js','/_static/build/_shared/chunk-6ZTBG2Z4.js','/_static/build/_shared/chunk-JLPGN4KN.js','/_static/build/_shared/chunk-R32NYK3A.js','/_static/build/_shared/chunk-JG2AXIWM.js','/_static/build/_shared/chunk-VBX7C22E.js','/_static/build/_shared/chunk-H3NSD3EM.js','/_static/build/_shared/chunk-SYCGMHGR.js','/_static/build/_shared/chunk-NVDU5UG7.js','/_static/build/_shared/chunk-3ZFERPOO.js','/_static/build/_shared/chunk-SRFIRGGR.js','/_static/build/_shared/chunk-GBLXZDDB.js','/_static/build/_shared/chunk-RT7YHNBO.js','/_static/build/_shared/chunk-5ZO5IZ7S.js','/_static/build/_shared/chunk-4JCWJHZH.js','/_static/build/_shared/chunk-YW23GCT6.js','/_static/build/_shared/chunk-OJFA6HSG.js','/_static/build/_shared/chunk-7IBWRRMP.js','/_static/build/_shared/chunk-JMHAIX2B.js','/_static/build/_shared/chunk-7ND7NUEB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/writing/index':{'id':'routes/writing/index','parentId':'routes/writing','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/writing/index-NZFSMJVN.js','imports':['/_static/build/_shared/chunk-YW23GCT6.js','/_static/build/_shared/chunk-7IBWRRMP.js','/_static/build/_shared/chunk-7ND7NUEB.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/_static/build/manifest-AFE52432.js'};", "import type { ServerContext } from \"./types\";\nimport { NotesServerFactory } from \"./note.server\";\nimport { UserServerFactory } from \"./user.server\";\nimport { PostsServerFactory } from \"./post.server\";\nimport { hyper } from \"./hyper\";\n\n/**\n * Creates a server context - injecting dependencies where needed\n */\nexport const services = (): ServerContext => {\n  const _services: any = {};\n\n  _services.hyper = hyper;\n  // Inject side effects into business logic\n  _services.UserServer = UserServerFactory(_services);\n  _services.NoteServer = NotesServerFactory(_services);\n  _services.PostServer = PostsServerFactory(_services);\n\n  return _services as ServerContext;\n};\n", "import cuid from \"cuid\";\n\nimport type { NoteDoc, NewNote } from \"./models/note\";\nimport { NoteSchema, NoteDocSchema } from \"./models/note\";\nimport { DocType, NoteIdSchema } from \"./models/model\";\nimport { NotFoundError } from \"./models/err\";\n\nimport { fromHyper, toHyper } from \"./hyper\";\nimport type { NoteServer, ServerContext } from \"./types\";\n\nexport const NotesServerFactory = (env: ServerContext): NoteServer => {\n  async function getNote({ id }: { id: string }): ReturnType<NoteServer[\"getNote\"]> {\n    const { hyper } = env;\n\n    id = NoteIdSchema.parse(id);\n    const res = await hyper.data.get(id);\n\n    if (!res.ok && res.status === 404) {\n      return null;\n    }\n\n    return fromHyper.as(NoteSchema)(res);\n  }\n\n  async function getNotesByParent({\n    parent,\n  }: {\n    parent: string;\n  }): ReturnType<NoteServer[\"getNotesByParent\"]> {\n    // check hyper cache\n    const { hyper, UserServer } = env;\n\n    const user = await UserServer.getUserById(parent);\n\n    if (!user) {\n      throw new NotFoundError(`parent with id ${parent} not found`);\n    }\n\n    // TODO: use hyper cache to instead of querying db\n    const { docs } = await hyper.data.query<NoteDoc>({\n      type: \"note\",\n      parent,\n    });\n    return docs.map(fromHyper.as(NoteSchema));\n  }\n\n  async function createNote({\n    body,\n    title,\n    parent,\n  }: NewNote): ReturnType<NoteServer[\"createNote\"]> {\n    const { hyper, UserServer } = env;\n\n    const user = await UserServer.getUserById(parent);\n\n    if (!user) {\n      throw new NotFoundError(`parent with id ${parent} not found`);\n    }\n\n    const newNote = NoteSchema.parse({\n      id: `note-${cuid()}`,\n      title,\n      body,\n      parent,\n    });\n    await hyper.data.add<NoteDoc>(\n      toHyper.as(NoteDocSchema)({ ...newNote, type: DocType.enum.note })\n    );\n    // TODO: invalidate hyper cache for notes from parent\n\n    return newNote;\n  }\n\n  async function deleteNote({ id }: { id: string }): ReturnType<NoteServer[\"deleteNote\"]> {\n    const { hyper } = env;\n    const note = await getNote({ id });\n\n    if (!note) {\n      throw new NotFoundError();\n    }\n\n    await hyper.data.remove(note.id);\n    // TODO: invalidate hyper cache for notes from parent\n  }\n\n  return {\n    getNote,\n    getNotesByParent,\n    createNote,\n    deleteNote,\n  };\n};\n", "import z from \"zod\";\n\nimport { DocSchema, NoteIdSchema } from \"./model\";\n\nexport const NoteSchema = z\n  .object({\n    id: NoteIdSchema,\n    parent: z.string(),\n    title: z.string(),\n    body: z.string(),\n  })\n  .passthrough();\nexport type Note = z.infer<typeof NoteSchema>;\nexport type NewNote = Omit<Note, \"id\">;\n\nexport const NoteDocSchema = DocSchema.extend(\n  NoteSchema.extend({ _id: NoteIdSchema, type: z.literal(\"note\") }).omit({ id: true }).shape\n);\nexport type NoteDoc = z.infer<typeof NoteDocSchema>;\n", "import z from \"zod\";\n\nconst IdSchema = (prefix: string) => z.string().regex(new RegExp(`^${prefix}-([\\\\w-]+)$`));\nconst SlugSchema = (prefix: string) => z.string().regex(new RegExp(`^${prefix}-([\\\\w-]+)$`));\n\nexport const UserIdSchema = IdSchema(\"user\");\n\nexport const NoteIdSchema = IdSchema(\"note\");\n\nexport const PasswordIdSchema = IdSchema(\"password\");\n\nexport const BookmarkIdSchema = IdSchema(\"bookmark\");\n\nexport const QuestionIdSchema = IdSchema(\"question\");\n\nexport const CommentIdSchema = IdSchema(\"comment\");\n\nexport const PostIdSchema = IdSchema(\"post\");\nexport const PostSlugSchema = SlugSchema(\"slug\");\n\nexport const AudioIdSchema = IdSchema(\"audio\");\n\nexport const PostEditIdSchema = IdSchema(\"post_edit\");\n\nexport const TagIdSchema = IdSchema(\"tag\");\n\nexport const StackIdSchema = IdSchema(\"stack\");\n\nexport const ReactionIdSchema = IdSchema(\"reaction\");\n\nexport const EmailSubscriptionIdSchema = IdSchema(\"email_subscription\");\n\nexport const PostImageIdSchema = IdSchema(\"post_image\");\n\nexport const DocType = z.enum([\n  \"note\",\n  \"user\",\n  \"password\",\n  \"bookmark\",\n  \"question\",\n  \"comment\",\n  \"post\",\n  \"audio\",\n  \"post_edit\",\n  \"tag\",\n  \"stack\",\n  \"reaction\",\n  \"email_subscription\",\n  \"post_image\",\n]);\n// A generic doc schema all of our docs in hyper data will adhere to\nexport const DocSchema = z\n  .object({\n    _id: z.union([\n      UserIdSchema,\n      NoteIdSchema,\n      PasswordIdSchema,\n      BookmarkIdSchema,\n      QuestionIdSchema,\n      CommentIdSchema,\n      PostIdSchema,\n      PostSlugSchema,\n      AudioIdSchema,\n      PostEditIdSchema,\n      TagIdSchema,\n      StackIdSchema,\n      ReactionIdSchema,\n      EmailSubscriptionIdSchema,\n      PostImageIdSchema,\n    ]),\n    type: DocType,\n    createdAt: z.date(),\n    updatedAt: z.date(),\n  })\n  .passthrough();\n", "import type { z, ZodSchema } from \"zod\";\nimport { compose, omit, assoc } from \"ramda\";\n\nimport { connect } from \"hyper-connect\";\n\nimport { DocSchema } from \"./models/model\";\n\nif (!process.env.HYPER) {\n  throw new Error(\"HYPER environment variable is required\");\n}\n\nconst toId = compose(omit([\"_id\"]), (doc) => assoc(\"id\", doc._id, doc));\nconst toUnderscoreId = compose(omit([\"id\"]), (o) => assoc(\"_id\", o.id, o));\n\nexport const hyper = connect(process.env.HYPER as string);\n\n/**\n * - _id -> id\n * - remove type field\n */\nconst _fromHyper: any = compose(omit([\"type\"]), toId);\n// take an additional schema and further parse the object\n_fromHyper.as = (schema: ZodSchema) => compose((o) => schema.parse(o), _fromHyper);\n\n/**\n * - id -> _id\n * - set createdAt if not set\n * - set updatedAt to now\n * - parse to ensure doc has all required fields\n */\nconst _toHyper: any = compose(\n  // ensure all required fields are present\n  (model) => DocSchema.parse(model),\n  assoc(\"updatedAt\", new Date()),\n  (model) => assoc(\"createdAt\", model.createdAt || new Date(), model),\n  toUnderscoreId\n);\n// take an additional schema and further parse the document\n_toHyper.as = (docSchema: ZodSchema) => compose((doc) => docSchema.parse(doc), toHyper);\n\nexport const fromHyper: {\n  (o: any): z.infer<typeof DocSchema>;\n  as: <s extends ZodSchema>(schema: s) => (o: any) => ReturnType<s[\"parse\"]>;\n} = _fromHyper;\n\nexport const toHyper: {\n  (o: any): z.infer<typeof DocSchema>;\n  as: <ds extends ZodSchema>(docSchema: ds) => (o: any) => ReturnType<ds[\"parse\"]>;\n} = _toHyper;\n", "import bcrypt from \"bcryptjs\";\nimport cuid from \"cuid\";\n\nimport { DocType, UserIdSchema } from \"./models/model\";\nimport { ConflictError, NotFoundError, UnauthorizedError } from \"./models/err\";\nimport type { PasswordDoc } from \"./models/password\";\nimport {\n  PasswordDocSchema,\n  PasswordObjSchema,\n  PasswordSchema,\n} from \"./models/password\";\nimport type { User, UserDoc } from \"./models/user\";\nimport { EmailSchema, UserDocSchema, UserSchema } from \"./models/user\";\n\nimport { fromHyper, toHyper } from \"./hyper\";\nimport type { ServerContext, UserServer } from \"./types\";\nimport type { z } from \"zod\";\n\nexport const UserServerFactory = (env: ServerContext): UserServer => {\n  async function getUserById(\n    id: string\n  ): ReturnType<UserServer[\"getUserById\"]> {\n    const { hyper } = env;\n\n    id = UserIdSchema.parse(id);\n    const res = await hyper.data.get(id);\n\n    if (!res.ok && res.status === 404) {\n      return null;\n    }\n\n    return fromHyper.as(UserSchema)(res);\n  }\n\n  async function getUserByEmail(\n    email: string\n  ): ReturnType<UserServer[\"getUserByEmail\"]> {\n    const { hyper } = env;\n\n    email = EmailSchema.parse(email);\n    const { docs } = await hyper.data.query<UserDoc>({ type: \"user\", email });\n\n    if (!docs.length) {\n      return null;\n    }\n\n    const user = docs.pop() as UserDoc;\n\n    return user && fromHyper.as(UserSchema)(user);\n  }\n\n  async function getUserAndPassword(\n    email: string\n  ): Promise<{ user: User; password: z.infer<typeof PasswordObjSchema> }> {\n    const { hyper } = env;\n\n    email = EmailSchema.parse(email);\n    const user = await getUserByEmail(email);\n\n    if (!user) {\n      throw new NotFoundError(`user with email ${email} not found`);\n    }\n\n    const { docs } = await hyper.data.query<PasswordDoc>({\n      type: \"password\",\n      parent: user.id,\n    });\n\n    if (!docs.length) {\n      // TODO: use hyper queue to create job to send alert\n      console.error(\n        \"A user without a password. Send an alert to a monitoring system...\"\n      );\n      throw new NotFoundError(\n        `password not found for user with email ${email}`\n      );\n    }\n\n    return {\n      user,\n      password: fromHyper.as(PasswordObjSchema)(docs.pop()),\n    };\n  }\n\n  async function createUser(\n    email: string,\n    password: string,\n    role?: string,\n    isAdmin?: boolean,\n    username?: string\n  ): ReturnType<UserServer[\"createUser\"]> {\n    const { hyper } = env;\n\n    email = EmailSchema.parse(email);\n    const exists = await getUserByEmail(email);\n    if (exists) {\n      throw new ConflictError(`user with email ${email} already exists`);\n    }\n\n    const userId = `user-${cuid()}`;\n    const user = UserSchema.parse({\n      id: userId,\n      email,\n      role,\n      isAdmin,\n      username,\n    });\n    console.log(\"user from createUser:\", user);\n\n    const pw = PasswordSchema.parse(password.trim());\n\n    await hyper.data.bulk([\n      toHyper.as(UserDocSchema)({ ...user, type: DocType.enum.user }),\n      toHyper.as(PasswordDocSchema)({\n        id: `password-${cuid()}`,\n        parent: userId,\n        hash: await bcrypt.hash(pw, 10),\n        type: DocType.enum.password,\n      }),\n    ]);\n\n    return user;\n  }\n\n  async function deleteUser(\n    email: string\n  ): ReturnType<UserServer[\"deleteUser\"]> {\n    const { hyper, NoteServer } = env;\n\n    const { user, password } = await getUserAndPassword(email);\n    const notes = await NoteServer.getNotesByParent({ parent: user.id });\n\n    // delete all user's notes docs\n    await Promise.all(notes.map((n) => NoteServer.deleteNote(n)));\n    // delete the password doc\n    await hyper.data.remove(password.id);\n    // delete user doc\n    await hyper.data.remove(user.id);\n  }\n\n  async function verifyLogin(\n    email: string,\n    password: string\n  ): ReturnType<UserServer[\"verifyLogin\"]> {\n    const { user, password: pw } = await getUserAndPassword(email);\n\n    const isValid = await bcrypt.compare(password, pw.hash);\n    if (!isValid) {\n      throw new UnauthorizedError();\n    }\n\n    return user;\n  }\n\n  return {\n    getUserById,\n    getUserByEmail,\n    createUser,\n    deleteUser,\n    verifyLogin,\n  };\n};\n", "import z from \"zod\";\n\nimport { DocSchema, PasswordIdSchema, UserIdSchema } from \"./model\";\n\nexport const PasswordSchema = z.string().min(8);\n\nexport type Password = z.infer<typeof PasswordSchema>;\nexport const PasswordObjSchema = z.object({\n  id: PasswordIdSchema,\n  parent: UserIdSchema,\n  hash: z.string(),\n});\n\nexport const PasswordDocSchema = DocSchema.extend(\n  PasswordObjSchema.extend({\n    _id: PasswordIdSchema,\n    type: z.literal(\"password\"),\n  }).omit({ id: true }).shape\n).strict();\n\nexport type PasswordDoc = z.infer<typeof PasswordDocSchema>;\n", "import z from \"zod\";\n\nimport { DocSchema, UserIdSchema } from \"./model\";\n\nexport const RoleSchema = z.enum([\"BLOCKED\", \"USER\", \"ADMIN\"]);\nexport const EmailSchema = z\n  .string()\n  .email()\n  .transform((val) => val.toLowerCase());\nexport const AvatarSchema = z.string();\nexport const NameSchema = z.string().optional();\n\nexport const UserSchema = z.object({\n  id: UserIdSchema,\n  email: EmailSchema,\n  name: NameSchema,\n  isAdmin: z.boolean().optional(),\n  username: z.string().optional(),\n  role: z.string().optional(),\n  avatar: z.string().optional(),\n  location: z.string().optional(),\n});\nexport type User = z.infer<typeof UserSchema>;\n\nexport const UserDocSchema = DocSchema.extend(\n  UserSchema.extend({ _id: UserIdSchema, type: z.literal(\"user\") }).omit({ id: true }).shape\n);\nexport type UserDoc = z.infer<typeof UserDocSchema>;\n", "import cuid from \"cuid\";\n\nimport type { PostDoc, NewPost } from \"./models/post\";\nimport { PostSchema, PostDocSchema } from \"./models/post\";\nimport { DocType, PostIdSchema } from \"./models/model\";\nimport { NotFoundError } from \"./models/err\";\n\nimport { fromHyper, toHyper } from \"./hyper\";\nimport type { PostServer, ServerContext } from \"./types\";\n\nexport const PostsServerFactory = (env: ServerContext): PostServer => {\n  async function getPostsList(): ReturnType<PostServer[\"getPostsList\"]> {\n    const { hyper } = env;\n\n    const { docs } = await hyper.data.query({ type: \"post\" });\n\n    return docs.map(fromHyper.as(PostSchema));\n  }\n\n  async function getPost({\n    id,\n  }: {\n    id: string;\n  }): ReturnType<PostServer[\"getPost\"]> {\n    const { hyper } = env;\n\n    id = PostIdSchema.parse(id);\n    const res = await hyper.data.get(id);\n\n    if (!res.ok && res.status === 404) {\n      return null;\n    }\n\n    return fromHyper.as(PostSchema)(res);\n  }\n\n  async function getPostsByParent({\n    parent,\n  }: {\n    parent: string;\n  }): ReturnType<PostServer[\"getPostsByParent\"]> {\n    // check hyper cache\n    const { hyper, UserServer } = env;\n\n    const user = await UserServer.getUserById(parent);\n\n    if (!user) {\n      throw new NotFoundError(`parent with id ${parent} not found`);\n    }\n\n    // TODO: use hyper cache to instead of querying db\n    const { docs } = await hyper.data.query<PostDoc>({\n      type: \"post\",\n      parent,\n    });\n    return docs.map(fromHyper.as(PostSchema));\n  }\n\n  async function getPostBySlug({\n    slug,\n  }: {\n    slug: string;\n  }): ReturnType<PostServer[\"getPostBySlug\"]> {\n    // check hyper cache\n    const { hyper } = env;\n\n    // TODO: use hyper cache to instead of querying db\n    const { docs } = await hyper.data.query<PostDoc>({\n      type: \"post\",\n      slug,\n    });\n\n    if (!docs.length) {\n      return null;\n    }\n\n    const post = docs.pop() as PostDoc;\n\n    return post && fromHyper.as(PostSchema)(post);\n  }\n\n  async function createPost({\n    body,\n    title,\n    parent,\n    slug,\n    excerpt,\n    status,\n    publishedAt,\n  }: NewPost): ReturnType<PostServer[\"createPost\"]> {\n    const { hyper, UserServer } = env;\n\n    const user = await UserServer.getUserById(parent);\n\n    if (!user) {\n      throw new NotFoundError(`parent with id ${parent} not found`);\n    }\n\n    const newPost = PostSchema.parse({\n      id: `post-${cuid()}`,\n      title,\n      body,\n      parent,\n      slug,\n      excerpt,\n      status,\n      publishedAt,\n    });\n    await hyper.data.add<PostDoc>(\n      toHyper.as(PostDocSchema)({ ...newPost, type: DocType.enum.post })\n    );\n    // TODO: invalidate hyper cache for posts from parent\n\n    return newPost;\n  }\n\n  async function deletePost({\n    id,\n  }: {\n    id: string;\n  }): ReturnType<PostServer[\"deletePost\"]> {\n    const { hyper } = env;\n    const post = await getPost({ id });\n\n    if (!post) {\n      throw new NotFoundError();\n    }\n\n    await hyper.data.remove(post.id);\n    // TODO: invalidate hyper cache for posts from parent\n  }\n\n  return {\n    getPostsList,\n    getPost,\n    getPostsByParent,\n    getPostBySlug,\n    createPost,\n    deletePost,\n  };\n};\n", "import z from \"zod\";\n\nimport { DocSchema, PostIdSchema } from \"./model\";\n\nconst StatusSchema = z.enum([\"published\", \"draft\"]);\n\nexport const PostSchema = z\n  .object({\n    id: PostIdSchema,\n    parent: z.string(), // user-id\n    title: z.string().max(280),\n    slug: z.string().optional(),\n    body: z.string(),\n    excerpt: z.string().max(280).optional(),\n    status: StatusSchema.optional(),\n    publishedAt: z.string().optional(),\n    featureImage: z.string().nullable().optional(),\n  })\n  .passthrough();\n\nexport type Post = z.infer<typeof PostSchema>;\nexport type NewPost = Omit<Post, \"id\">;\n\nexport const PostDocSchema = DocSchema.extend(\n  PostSchema.extend({ _id: PostIdSchema, type: z.literal(\"post\") }).omit({\n    id: true,\n  }).shape\n);\nexport type PostDoc = z.infer<typeof PostDocSchema>;\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\n\nimport type { LoaderContext, SessionServer } from \"./types\";\n\nif (!process.env.SESSION_SECRET) {\n  throw new Error(\"SESSION_SECRET must be set\");\n}\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    maxAge: 0,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport const SessionServerFactory = (env: LoaderContext): SessionServer => {\n  async function getSession(request: Request) {\n    const cookie = request.headers.get(\"Cookie\");\n    return sessionStorage.getSession(cookie);\n  }\n\n  async function getUserId(request: Request) {\n    const session = await getSession(request);\n    const userId = session.get(USER_SESSION_KEY);\n    return userId;\n  }\n\n  async function getUser(request: Request) {\n    const { UserServer } = env;\n    const userId = await getUserId(request);\n    if (userId === undefined) return null;\n\n    const user = await UserServer.getUserById(userId);\n    if (user) return user;\n\n    throw await logout(request);\n  }\n\n  async function requireUserId(request: Request, redirectTo?: string) {\n    const userId = await getUserId(request);\n    if (!userId) {\n      const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo || \"/\"]]);\n      throw redirect(`/login?${searchParams}`);\n    }\n\n    return userId;\n  }\n\n  async function requireUser(request: Request) {\n    const { UserServer } = env;\n\n    const userId = await requireUserId(request);\n\n    const user = await UserServer.getUserById(userId);\n    if (user) return user;\n\n    throw await logout(request);\n  }\n\n  async function createUserSession({\n    request,\n    userId,\n    remember,\n    redirectTo,\n  }: {\n    request: Request;\n    userId: string;\n    remember: boolean;\n    redirectTo: string;\n  }) {\n    const session = await getSession(request);\n    session.set(USER_SESSION_KEY, userId);\n    return redirect(redirectTo, {\n      headers: {\n        \"Set-Cookie\": await sessionStorage.commitSession(session, {\n          maxAge: remember\n            ? 60 * 60 * 24 * 7 // 7 days\n            : undefined,\n        }),\n      },\n    });\n  }\n\n  async function logout(request: Request) {\n    const session = await getSession(request);\n    return redirect(\"/\", {\n      headers: {\n        \"Set-Cookie\": await sessionStorage.destroySession(session),\n      },\n    });\n  }\n\n  return {\n    getSession,\n    getUserId,\n    getUser,\n    requireUserId,\n    requireUser,\n    createUserSession,\n    logout,\n  };\n};\n"],
  "mappings": "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",
  "names": []
}
